

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 19:58:58 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    53  0000                     
    54                           ; Version 2.20
    55                           ; Generated 12/02/2020 GMT
    56                           ; 
    57                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F4520 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     
    89                           	psect	smallconst
    90  000600                     __psmallconst:
    91                           	callstack 0
    92  000600  00                 	db	0
    93  000601                     _valor:
    94                           	callstack 0
    95  000601  3F                 	db	63
    96  000602  06                 	db	6
    97  000603  5B                 	db	91
    98  000604  4F                 	db	79
    99  000605  66                 	db	102
   100  000606  6D                 	db	109
   101  000607  7D                 	db	125
   102  000608  07                 	db	7
   103  000609  7F                 	db	127
   104  00060A  6F                 	db	111
   105  00060B  77                 	db	119
   106  00060C  7C                 	db	124
   107  00060D  39                 	db	57
   108  00060E  5E                 	db	94
   109  00060F  79                 	db	121
   110  000610  71                 	db	113
   111  000611                     __end_of_valor:
   112                           	callstack 0
   113  000611                     _charKey:
   114                           	callstack 0
   115  000611  55                 	db	85
   116  000612  4C                 	db	76
   117  000613  44                 	db	68
   118  000614  52                 	db	82
   119  000615  53                 	db	83
   120  000616  58                 	db	88
   121  000617  41                 	db	65
   122  000618  42                 	db	66
   123  000619  59                 	db	89
   124  00061A  73                 	db	115
   125  00061B                     __end_of_charKey:
   126                           	callstack 0
   127  00061B                     _Passw:
   128                           	callstack 0
   129  00061B  55                 	db	85
   130  00061C  4C                 	db	76
   131  00061D  44                 	db	68
   132  00061E  52                 	db	82
   133  00061F  00                 	db	0
   134  000620                     __end_of_Passw:
   135                           	callstack 0
   136  000620                     _User:
   137                           	callstack 0
   138  000620  55                 	db	85
   139  000621  4C                 	db	76
   140  000622  44                 	db	68
   141  000623  52                 	db	82
   142  000624  00                 	db	0
   143  000625                     __end_of_User:
   144                           	callstack 0
   145  0000                     _T0CON	set	4053
   146  0000                     _TMR0L	set	4054
   147  0000                     _TMR0H	set	4055
   148  0000                     _INTCON	set	4082
   149  0000                     _T2CON	set	4042
   150  0000                     _CCP2CON	set	4026
   151  0000                     _CCPR2L	set	4027
   152  0000                     _PR2	set	4043
   153  0000                     _ADCON1	set	4033
   154  0000                     _TRISE	set	3990
   155  0000                     _TRISD	set	3989
   156  0000                     _TRISC	set	3988
   157  0000                     _TRISB	set	3987
   158  0000                     _TRISA	set	3986
   159  0000                     _PORTE	set	3972
   160  0000                     _PORTD	set	3971
   161  0000                     _PORTC	set	3970
   162  0000                     _PORTB	set	3969
   163  0000                     _PORTA	set	3968
   164  000625                     STR_5:
   165  000625  42                 	db	66	;'B'
   166  000626  65                 	db	101	;'e'
   167  000627  6D                 	db	109	;'m'
   168  000628  2D                 	db	45
   169  000629  56                 	db	86	;'V'
   170  00062A  69                 	db	105	;'i'
   171  00062B  6E                 	db	110	;'n'
   172  00062C  64                 	db	100	;'d'
   173  00062D  6F                 	db	111	;'o'
   174  00062E  28                 	db	40
   175  00062F  61                 	db	97	;'a'
   176  000630  29                 	db	41
   177  000631  00                 	db	0
   178  000632                     STR_4:
   179  000632  69                 	db	105	;'i'
   180  000633  6E                 	db	110	;'n'
   181  000634  76                 	db	118	;'v'
   182  000635  61                 	db	97	;'a'
   183  000636  6C                 	db	108	;'l'
   184  000637  69                 	db	105	;'i'
   185  000638  64                 	db	100	;'d'
   186  000639  61                 	db	97	;'a'
   187  00063A  21                 	db	33
   188  00063B  21                 	db	33
   189  00063C  00                 	db	0
   190  00063D                     STR_2:
   191  00063D  53                 	db	83	;'S'
   192  00063E  65                 	db	101	;'e'
   193  00063F  6E                 	db	110	;'n'
   194  000640  68                 	db	104	;'h'
   195  000641  61                 	db	97	;'a'
   196  000642  3A                 	db	58	;':'
   197  000643  20                 	db	32
   198  000644  00                 	db	0
   199  000645                     STR_3:
   200  000645  45                 	db	69	;'E'
   201  000646  6E                 	db	110	;'n'
   202  000647  74                 	db	116	;'t'
   203  000648  72                 	db	114	;'r'
   204  000649  61                 	db	97	;'a'
   205  00064A  64                 	db	100	;'d'
   206  00064B  61                 	db	97	;'a'
   207  00064C  00                 	db	0
   208  00064D                     STR_1:
   209  00064D  55                 	db	85	;'U'
   210  00064E  73                 	db	115	;'s'
   211  00064F  65                 	db	101	;'e'
   212  000650  72                 	db	114	;'r'
   213  000651  3A                 	db	58	;':'
   214  000652  20                 	db	32
   215  000653  00                 	db	0
   216  000654  00                 	db	0	; dummy byte at the end
   217  0000                     
   218                           ; #config settings
   219                           
   220                           	psect	cinit
   221  002534                     __pcinit:
   222                           	callstack 0
   223  002534                     start_initialization:
   224                           	callstack 0
   225  002534                     __initialization:
   226                           	callstack 0
   227                           
   228                           ; Clear objects allocated to COMRAM (24 bytes)
   229  002534  EE00  F022         	lfsr	0,__pbssCOMRAM
   230  002538  0E18               	movlw	24
   231  00253A                     clear_0:
   232  00253A  6AEE               	clrf	postinc0,c
   233  00253C  06E8               	decf	wreg,f,c
   234  00253E  E1FD               	bnz	clear_0
   235  002540                     end_of_initialization:
   236                           	callstack 0
   237  002540                     __end_of__initialization:
   238                           	callstack 0
   239  002540  0E00               	movlw	low (__Lmediumconst shr (0+16))
   240  002542  6EF8               	movwf	tblptru,c
   241  002544  0100               	movlb	0
   242  002546  EF2B  F003         	goto	_main	;jump to C main() function
   243                           
   244                           	psect	bssCOMRAM
   245  000022                     __pbssCOMRAM:
   246                           	callstack 0
   247  000022                     _savP:
   248                           	callstack 0
   249  000022                     	ds	5
   250  000027                     _savU:
   251                           	callstack 0
   252  000027                     	ds	5
   253  00002C                     kpDebounce@oldRead:
   254                           	callstack 0
   255  00002C                     	ds	2
   256  00002E                     kpDebounce@newRead:
   257                           	callstack 0
   258  00002E                     	ds	2
   259  000030                     _keys:
   260                           	callstack 0
   261  000030                     	ds	2
   262  000032                     _v3:
   263                           	callstack 0
   264  000032                     	ds	1
   265  000033                     _v2:
   266                           	callstack 0
   267  000033                     	ds	1
   268  000034                     _v1:
   269                           	callstack 0
   270  000034                     	ds	1
   271  000035                     _v0:
   272                           	callstack 0
   273  000035                     	ds	1
   274  000036                     _display:
   275                           	callstack 0
   276  000036                     	ds	1
   277  000037                     kpDebounce@tempo:
   278                           	callstack 0
   279  000037                     	ds	1
   280  000038                     pegaSenha@j:
   281                           	callstack 0
   282  000038                     	ds	1
   283  000039                     pegaUser@i:
   284                           	callstack 0
   285  000039                     	ds	1
   286                           
   287                           	psect	cstackCOMRAM
   288  000001                     __pcstackCOMRAM:
   289                           	callstack 0
   290  000001                     ??_kpReadKey:
   291  000001                     ??_comp:
   292  000001                     ?_digitalRead:
   293                           	callstack 0
   294  000001                     ?___wmul:
   295                           	callstack 0
   296  000001                     ?___awdiv:
   297                           	callstack 0
   298  000001                     ?___lwdiv:
   299                           	callstack 0
   300  000001                     ?___fladd:
   301                           	callstack 0
   302  000001                     ?___aldiv:
   303                           	callstack 0
   304  000001                     digitalWrite@pin:
   305                           	callstack 0
   306  000001                     digitalRead@pin:
   307                           	callstack 0
   308  000001                     pinMode@pin:
   309                           	callstack 0
   310  000001                     delayMicro@a:
   311                           	callstack 0
   312  000001                     delayMili@a:
   313                           	callstack 0
   314  000001                     ___wmul@multiplier:
   315                           	callstack 0
   316  000001                     ___awdiv@dividend:
   317                           	callstack 0
   318  000001                     ___lwdiv@dividend:
   319                           	callstack 0
   320  000001                     ___aldiv@dividend:
   321                           	callstack 0
   322  000001                     ___flge@ff1:
   323                           	callstack 0
   324  000001                     ___fladd@b:
   325                           	callstack 0
   326                           
   327                           ; 4 bytes @ 0x0
   328  000001                     	ds	1
   329  000002                     comp@c:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x1
   333  000002                     	ds	1
   334  000003                     ??_digitalRead:
   335  000003                     ??_delayMili:
   336  000003                     comp@a:
   337                           	callstack 0
   338  000003                     digitalWrite@value:
   339                           	callstack 0
   340  000003                     pinMode@type:
   341                           	callstack 0
   342  000003                     ___wmul@multiplicand:
   343                           	callstack 0
   344  000003                     ___awdiv@divisor:
   345                           	callstack 0
   346  000003                     ___lwdiv@divisor:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x2
   350  000003                     	ds	1
   351  000004                     kpReadKey@i:
   352                           	callstack 0
   353  000004                     delayMili@i:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x3
   357  000004                     	ds	1
   358  000005                     ??_digitalWrite:
   359  000005                     ??_pinMode:
   360  000005                     ___awdiv@counter:
   361                           	callstack 0
   362  000005                     ___wmul@product:
   363                           	callstack 0
   364  000005                     ___lwdiv@quotient:
   365                           	callstack 0
   366  000005                     ___aldiv@divisor:
   367                           	callstack 0
   368  000005                     ___flge@ff2:
   369                           	callstack 0
   370  000005                     ___fladd@a:
   371                           	callstack 0
   372                           
   373                           ; 4 bytes @ 0x4
   374  000005                     	ds	1
   375  000006                     ___awdiv@sign:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x5
   379  000006                     	ds	1
   380  000007                     ___lwdiv@counter:
   381                           	callstack 0
   382  000007                     soWrite@value:
   383                           	callstack 0
   384  000007                     ___awdiv@quotient:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x6
   388  000007                     	ds	1
   389  000008                     ??_pwmSet:
   390                           
   391                           ; 1 bytes @ 0x7
   392  000008                     	ds	1
   393  000009                     ??___fladd:
   394  000009                     ??___flge:
   395  000009                     ?___awmod:
   396                           	callstack 0
   397  000009                     soWrite@i:
   398                           	callstack 0
   399  000009                     ___aldiv@counter:
   400                           	callstack 0
   401  000009                     ___awmod@dividend:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x8
   405  000009                     	ds	1
   406  00000A                     ??_kpDebounce:
   407  00000A                     ??_ssdUpdate:
   408  00000A                     pwmSet@porcento:
   409                           	callstack 0
   410  00000A                     ___aldiv@sign:
   411                           	callstack 0
   412  00000A                     pushNibble@rs:
   413                           	callstack 0
   414  00000A                     pushByte@rs:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x9
   418  00000A                     	ds	1
   419  00000B                     pwmSet@val:
   420                           	callstack 0
   421  00000B                     ___awmod@divisor:
   422                           	callstack 0
   423  00000B                     ___aldiv@quotient:
   424                           	callstack 0
   425                           
   426                           ; 4 bytes @ 0xA
   427  00000B                     	ds	1
   428  00000C                     ??_pushByte:
   429  00000C                     pushNibble@value:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0xB
   433  00000C                     	ds	1
   434  00000D                     pushByte@value:
   435                           	callstack 0
   436  00000D                     ___awmod@counter:
   437                           	callstack 0
   438  00000D                     ___fladd@signs:
   439                           	callstack 0
   440  00000D                     kpDebounce@i:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0xC
   444  00000D                     	ds	1
   445  00000E                     lcdCommand@value:
   446                           	callstack 0
   447  00000E                     lcdChar@value:
   448                           	callstack 0
   449  00000E                     ___awmod@sign:
   450                           	callstack 0
   451  00000E                     ___fladd@aexp:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0xD
   455  00000E                     	ds	1
   456  00000F                     ssdDigit@pos:
   457                           	callstack 0
   458  00000F                     ___fladd@bexp:
   459                           	callstack 0
   460  00000F                     lcdPosition@line:
   461                           	callstack 0
   462  00000F                     lcdString@msg:
   463                           	callstack 0
   464  00000F                     pwmFrequency@freq:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0xE
   468  00000F                     	ds	1
   469  000010                     ssdDigit@val:
   470                           	callstack 0
   471  000010                     ___fladd@grs:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0xF
   475  000010                     	ds	1
   476  000011                     ??_lcdString:
   477  000011                     limpaSSD@k:
   478                           	callstack 0
   479  000011                     lcdPosition@col:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x10
   483  000011                     	ds	2
   484  000013                     lcdString@i:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x12
   488  000013                     	ds	2
   489  000015                     ??_main:
   490                           
   491                           ; 1 bytes @ 0x14
   492  000015                     	ds	2
   493  000017                     main@conf:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x16
   497  000017                     	ds	1
   498  000018                     main@cnt:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x17
   502  000018                     	ds	2
   503  00001A                     main@u:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0x19
   507  00001A                     	ds	4
   508  00001E                     main@k:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0x1D
   512  00001E                     	ds	4
   513                           
   514 ;;
   515 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   516 ;;
   517 ;; *************** function _main *****************
   518 ;; Defined at:
   519 ;;		line 80 in file "newmain.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;		None
   522 ;; Auto vars:     Size  Location     Type
   523 ;;  u               4   25[COMRAM] volatile float 
   524 ;;  k               4   29[COMRAM] volatile float 
   525 ;;  cnt             2   23[COMRAM] int 
   526 ;;  conf            1   22[COMRAM] unsigned char 
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   536 ;;      Params:         0       0       0       0       0       0       0
   537 ;;      Locals:        11       0       0       0       0       0       0
   538 ;;      Temps:          2       0       0       0       0       0       0
   539 ;;      Totals:        13       0       0       0       0       0       0
   540 ;;Total ram usage:       13 bytes
   541 ;; Hardware stack levels required when called: 6
   542 ;; This function calls:
   543 ;;		___awdiv
   544 ;;		___awmod
   545 ;;		___fladd
   546 ;;		___flge
   547 ;;		_comp
   548 ;;		_kpInit
   549 ;;		_lcdCommand
   550 ;;		_lcdInit
   551 ;;		_lcdPosition
   552 ;;		_lcdString
   553 ;;		_limpaSSD
   554 ;;		_pegaSenha
   555 ;;		_pegaUser
   556 ;;		_pwmFrequency
   557 ;;		_pwmInit
   558 ;;		_pwmSet
   559 ;;		_ssdDigit
   560 ;;		_ssdInit
   561 ;;		_ssdUpdate
   562 ;;		_timerInit
   563 ;; This function is called by:
   564 ;;		Startup code after reset
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           	psect	text0
   569  000656                     __ptext0:
   570                           	callstack 0
   571  000656                     _main:
   572                           	callstack 25
   573  000656                     
   574                           ;newmain.c: 81:     timerInit();
   575  000656  ECAA  F012         	call	_timerInit	;wreg free
   576                           
   577                           ;newmain.c: 82:     lcdInit();
   578  00065A  EC76  F00E         	call	_lcdInit	;wreg free
   579                           
   580                           ;newmain.c: 83:     kpInit();
   581  00065E  ECDB  F011         	call	_kpInit	;wreg free
   582                           
   583                           ;newmain.c: 84:     pwmInit();
   584  000662  EC8D  F012         	call	_pwmInit	;wreg free
   585                           
   586                           ;newmain.c: 85:     ssdInit();
   587  000666  ECDB  F010         	call	_ssdInit	;wreg free
   588  00066A                     
   589                           ;newmain.c: 87:     char conf = 0;
   590  00066A  0E00               	movlw	0
   591  00066C  6E17               	movwf	main@conf^0,c
   592  00066E                     
   593                           ;newmain.c: 88:     int cnt;;newmain.c: 89:     volatile float k;;newmain.c: 90:     lim
      +                          paSSD();
   594  00066E  EC58  F011         	call	_limpaSSD	;wreg free
   595  000672                     l2803:
   596                           
   597                           ;newmain.c: 92:         ssdUpdate();
   598  000672  EC06  F00B         	call	_ssdUpdate	;wreg free
   599                           
   600                           ;newmain.c: 94:         switch (conf) {
   601  000676  EF7F  F005         	goto	l2937
   602  00067A                     l2805:
   603                           
   604                           ;newmain.c: 96:                 lcdCommand(0x01);
   605  00067A  0E01               	movlw	1
   606  00067C  EC7E  F012         	call	_lcdCommand
   607                           
   608                           ;newmain.c: 97:                 lcdPosition(0, 0);
   609  000680  0E00               	movlw	0
   610  000682  6E10               	movwf	(lcdPosition@line+1)^0,c
   611  000684  0E00               	movlw	0
   612  000686  6E0F               	movwf	lcdPosition@line^0,c
   613  000688  0E00               	movlw	0
   614  00068A  6E12               	movwf	(lcdPosition@col+1)^0,c
   615  00068C  0E00               	movlw	0
   616  00068E  6E11               	movwf	lcdPosition@col^0,c
   617  000690  ECBE  F011         	call	_lcdPosition	;wreg free
   618  000694                     
   619                           ;newmain.c: 98:                 lcdString("User: ");
   620  000694  0E4D               	movlw	low STR_1
   621  000696  6E0F               	movwf	lcdString@msg^0,c
   622  000698  0E06               	movlw	high STR_1
   623  00069A  6E10               	movwf	(lcdString@msg+1)^0,c
   624  00069C  EC06  F011         	call	_lcdString	;wreg free
   625  0006A0                     
   626                           ;newmain.c: 99:                 lcdPosition(1, 0);
   627  0006A0  0E00               	movlw	0
   628  0006A2  6E10               	movwf	(lcdPosition@line+1)^0,c
   629  0006A4  0E01               	movlw	1
   630  0006A6  6E0F               	movwf	lcdPosition@line^0,c
   631  0006A8  0E00               	movlw	0
   632  0006AA  6E12               	movwf	(lcdPosition@col+1)^0,c
   633  0006AC  0E00               	movlw	0
   634  0006AE  6E11               	movwf	lcdPosition@col^0,c
   635  0006B0  ECBE  F011         	call	_lcdPosition	;wreg free
   636                           
   637                           ;newmain.c: 100:                 lcdString("Senha: ");
   638  0006B4  0E3D               	movlw	low STR_2
   639  0006B6  6E0F               	movwf	lcdString@msg^0,c
   640  0006B8  0E06               	movlw	high STR_2
   641  0006BA  6E10               	movwf	(lcdString@msg+1)^0,c
   642  0006BC  EC06  F011         	call	_lcdString	;wreg free
   643  0006C0                     
   644                           ;newmain.c: 101:                 lcdPosition(0, 6);
   645  0006C0  0E00               	movlw	0
   646  0006C2  6E10               	movwf	(lcdPosition@line+1)^0,c
   647  0006C4  0E00               	movlw	0
   648  0006C6  6E0F               	movwf	lcdPosition@line^0,c
   649  0006C8  0E00               	movlw	0
   650  0006CA  6E12               	movwf	(lcdPosition@col+1)^0,c
   651  0006CC  0E06               	movlw	6
   652  0006CE  6E11               	movwf	lcdPosition@col^0,c
   653  0006D0  ECBE  F011         	call	_lcdPosition	;wreg free
   654  0006D4                     
   655                           ;newmain.c: 102:                 conf = 1;
   656  0006D4  0E01               	movlw	1
   657  0006D6  6E17               	movwf	main@conf^0,c
   658                           
   659                           ;newmain.c: 103:                 break;
   660  0006D8  EFA4  F005         	goto	l2939
   661  0006DC                     l2815:
   662                           
   663                           ;newmain.c: 106:                 conf = pegaUser();
   664  0006DC  EC20  F010         	call	_pegaUser	;wreg free
   665  0006E0  6E17               	movwf	main@conf^0,c
   666  0006E2                     
   667                           ;newmain.c: 107:                 ssdUpdate();
   668  0006E2  EC06  F00B         	call	_ssdUpdate	;wreg free
   669  0006E6                     
   670                           ;newmain.c: 108:                 if (conf == 2) {
   671  0006E6  0E02               	movlw	2
   672  0006E8  1817               	xorwf	main@conf^0,w,c
   673  0006EA  A4D8               	btfss	status,2,c
   674  0006EC  EF7A  F003         	goto	u3051
   675  0006F0  EF7C  F003         	goto	u3050
   676  0006F4                     u3051:
   677  0006F4  EFA4  F005         	goto	l2939
   678  0006F8                     u3050:
   679  0006F8                     
   680                           ;newmain.c: 109:                     lcdPosition(1, 7);
   681  0006F8  0E00               	movlw	0
   682  0006FA  6E10               	movwf	(lcdPosition@line+1)^0,c
   683  0006FC  0E01               	movlw	1
   684  0006FE  6E0F               	movwf	lcdPosition@line^0,c
   685  000700  0E00               	movlw	0
   686  000702  6E12               	movwf	(lcdPosition@col+1)^0,c
   687  000704  0E07               	movlw	7
   688  000706  6E11               	movwf	lcdPosition@col^0,c
   689  000708  ECBE  F011         	call	_lcdPosition	;wreg free
   690  00070C  EFA4  F005         	goto	l2939
   691  000710                     l2823:
   692                           
   693                           ;newmain.c: 114:                 conf = pegaSenha();
   694  000710  EC51  F010         	call	_pegaSenha	;wreg free
   695  000714  6E17               	movwf	main@conf^0,c
   696  000716                     
   697                           ;newmain.c: 115:                 ssdUpdate();
   698  000716  EC06  F00B         	call	_ssdUpdate	;wreg free
   699  00071A                     
   700                           ;newmain.c: 116:                 if (conf == 3) {
   701  00071A  0E03               	movlw	3
   702  00071C  1817               	xorwf	main@conf^0,w,c
   703  00071E  A4D8               	btfss	status,2,c
   704  000720  EF94  F003         	goto	u3061
   705  000724  EF96  F003         	goto	u3060
   706  000728                     u3061:
   707  000728  EFA4  F005         	goto	l2939
   708  00072C                     u3060:
   709  00072C                     
   710                           ;newmain.c: 117:                     lcdCommand(0x01);
   711  00072C  0E01               	movlw	1
   712  00072E  EC7E  F012         	call	_lcdCommand
   713  000732  EFA4  F005         	goto	l2939
   714  000736                     l2831:
   715                           
   716                           ;newmain.c: 122:                 if (comp()) {
   717  000736  EC28  F00F         	call	_comp	;wreg free
   718  00073A  0900               	iorlw	0
   719  00073C  B4D8               	btfsc	status,2,c
   720  00073E  EFA3  F003         	goto	u3071
   721  000742  EFA5  F003         	goto	u3070
   722  000746                     u3071:
   723  000746  EFA9  F003         	goto	l2835
   724  00074A                     u3070:
   725  00074A                     
   726                           ;newmain.c: 123:                     conf = 4;
   727  00074A  0E04               	movlw	4
   728  00074C  6E17               	movwf	main@conf^0,c
   729                           
   730                           ;newmain.c: 124:                 } else {
   731  00074E  EFA4  F005         	goto	l2939
   732  000752                     l2835:
   733                           
   734                           ;newmain.c: 125:                     conf = 5;
   735  000752  0E05               	movlw	5
   736  000754  6E17               	movwf	main@conf^0,c
   737  000756                     
   738                           ;newmain.c: 126:                     ssdUpdate();
   739  000756  EC06  F00B         	call	_ssdUpdate	;wreg free
   740  00075A                     
   741                           ;newmain.c: 127:                     lcdPosition(0, 0);
   742  00075A  0E00               	movlw	0
   743  00075C  6E10               	movwf	(lcdPosition@line+1)^0,c
   744  00075E  0E00               	movlw	0
   745  000760  6E0F               	movwf	lcdPosition@line^0,c
   746  000762  0E00               	movlw	0
   747  000764  6E12               	movwf	(lcdPosition@col+1)^0,c
   748  000766  0E00               	movlw	0
   749  000768  6E11               	movwf	lcdPosition@col^0,c
   750  00076A  ECBE  F011         	call	_lcdPosition	;wreg free
   751  00076E                     
   752                           ;newmain.c: 128:                     lcdString("Entrada");
   753  00076E  0E45               	movlw	low STR_3
   754  000770  6E0F               	movwf	lcdString@msg^0,c
   755  000772  0E06               	movlw	high STR_3
   756  000774  6E10               	movwf	(lcdString@msg+1)^0,c
   757  000776  EC06  F011         	call	_lcdString	;wreg free
   758  00077A                     
   759                           ;newmain.c: 129:                     lcdPosition(1, 0);
   760  00077A  0E00               	movlw	0
   761  00077C  6E10               	movwf	(lcdPosition@line+1)^0,c
   762  00077E  0E01               	movlw	1
   763  000780  6E0F               	movwf	lcdPosition@line^0,c
   764  000782  0E00               	movlw	0
   765  000784  6E12               	movwf	(lcdPosition@col+1)^0,c
   766  000786  0E00               	movlw	0
   767  000788  6E11               	movwf	lcdPosition@col^0,c
   768  00078A  ECBE  F011         	call	_lcdPosition	;wreg free
   769  00078E                     
   770                           ;newmain.c: 130:                     lcdString("invalida!!");
   771  00078E  0E32               	movlw	low STR_4
   772  000790  6E0F               	movwf	lcdString@msg^0,c
   773  000792  0E06               	movlw	high STR_4
   774  000794  6E10               	movwf	(lcdString@msg+1)^0,c
   775  000796  EC06  F011         	call	_lcdString	;wreg free
   776  00079A  EFA4  F005         	goto	l2939
   777  00079E                     l2847:
   778                           
   779                           ;newmain.c: 135:                 lcdPosition(0, 2);
   780  00079E  0E00               	movlw	0
   781  0007A0  6E10               	movwf	(lcdPosition@line+1)^0,c
   782  0007A2  0E00               	movlw	0
   783  0007A4  6E0F               	movwf	lcdPosition@line^0,c
   784  0007A6  0E00               	movlw	0
   785  0007A8  6E12               	movwf	(lcdPosition@col+1)^0,c
   786  0007AA  0E02               	movlw	2
   787  0007AC  6E11               	movwf	lcdPosition@col^0,c
   788  0007AE  ECBE  F011         	call	_lcdPosition	;wreg free
   789  0007B2                     
   790                           ;newmain.c: 136:                 lcdString("Bem-Vindo(a)");
   791  0007B2  0E25               	movlw	low STR_5
   792  0007B4  6E0F               	movwf	lcdString@msg^0,c
   793  0007B6  0E06               	movlw	high STR_5
   794  0007B8  6E10               	movwf	(lcdString@msg+1)^0,c
   795  0007BA  EC06  F011         	call	_lcdString	;wreg free
   796  0007BE                     
   797                           ;newmain.c: 137:                 pwmFrequency(5000);
   798  0007BE  0E13               	movlw	19
   799  0007C0  6E10               	movwf	(pwmFrequency@freq+1)^0,c
   800  0007C2  0E88               	movlw	136
   801  0007C4  6E0F               	movwf	pwmFrequency@freq^0,c
   802  0007C6  EC49  F012         	call	_pwmFrequency	;wreg free
   803  0007CA                     
   804                           ;newmain.c: 138:                 pwmSet(50);
   805  0007CA  0E32               	movlw	50
   806  0007CC  ECEA  F00F         	call	_pwmSet
   807  0007D0                     
   808                           ;newmain.c: 139:                 for (cnt = 3601; cnt > 0; cnt--) {
   809  0007D0  0E0E               	movlw	14
   810  0007D2  6E19               	movwf	(main@cnt+1)^0,c
   811  0007D4  0E11               	movlw	17
   812  0007D6  6E18               	movwf	main@cnt^0,c
   813  0007D8                     l2861:
   814                           
   815                           ;newmain.c: 140:                     if (cnt == 3600 || cnt == 100) {
   816  0007D8  0E10               	movlw	16
   817  0007DA  1818               	xorwf	main@cnt^0,w,c
   818  0007DC  E109               	bnz	u3080
   819  0007DE  0E0E               	movlw	14
   820  0007E0  1819               	xorwf	(main@cnt+1)^0,w,c
   821  0007E2  B4D8               	btfsc	status,2,c
   822  0007E4  EFF6  F003         	goto	u3081
   823  0007E8  EFF8  F003         	goto	u3080
   824  0007EC                     u3081:
   825  0007EC  EF02  F004         	goto	l2865
   826  0007F0                     u3080:
   827  0007F0  0E64               	movlw	100
   828  0007F2  1818               	xorwf	main@cnt^0,w,c
   829  0007F4  1019               	iorwf	(main@cnt+1)^0,w,c
   830  0007F6  A4D8               	btfss	status,2,c
   831  0007F8  EF00  F004         	goto	u3091
   832  0007FC  EF02  F004         	goto	u3090
   833  000800                     u3091:
   834  000800  EF07  F004         	goto	l2867
   835  000804                     u3090:
   836  000804                     l2865:
   837                           
   838                           ;newmain.c: 141:                         pwmSet(100);
   839  000804  0E64               	movlw	100
   840  000806  ECEA  F00F         	call	_pwmSet
   841                           
   842                           ;newmain.c: 142:                     } else if (cnt == 3500 || cnt == 1) {
   843  00080A  EF1F  F004         	goto	l2873
   844  00080E                     l2867:
   845  00080E  0EAC               	movlw	172
   846  000810  1818               	xorwf	main@cnt^0,w,c
   847  000812  E109               	bnz	u3100
   848  000814  0E0D               	movlw	13
   849  000816  1819               	xorwf	(main@cnt+1)^0,w,c
   850  000818  B4D8               	btfsc	status,2,c
   851  00081A  EF11  F004         	goto	u3101
   852  00081E  EF13  F004         	goto	u3100
   853  000822                     u3101:
   854  000822  EF1C  F004         	goto	l2871
   855  000826                     u3100:
   856  000826  0418               	decf	main@cnt^0,w,c
   857  000828  1019               	iorwf	(main@cnt+1)^0,w,c
   858  00082A  A4D8               	btfss	status,2,c
   859  00082C  EF1A  F004         	goto	u3111
   860  000830  EF1C  F004         	goto	u3110
   861  000834                     u3111:
   862  000834  EF1F  F004         	goto	l2873
   863  000838                     u3110:
   864  000838                     l2871:
   865                           
   866                           ;newmain.c: 143:                         pwmSet(0);
   867  000838  0E00               	movlw	0
   868  00083A  ECEA  F00F         	call	_pwmSet
   869  00083E                     l2873:
   870                           
   871                           ;newmain.c: 145:                     ssdDigit((cnt / 60) % 10, 3);
   872  00083E  0E03               	movlw	3
   873  000840  6E0F               	movwf	ssdDigit@pos^0,c
   874  000842  0E00               	movlw	0
   875  000844  6E04               	movwf	(___awdiv@divisor+1)^0,c
   876  000846  0E3C               	movlw	60
   877  000848  6E03               	movwf	___awdiv@divisor^0,c
   878  00084A  C018  F001         	movff	main@cnt,___awdiv@dividend
   879  00084E  C019  F002         	movff	main@cnt+1,___awdiv@dividend+1
   880  000852  EC14  F00E         	call	___awdiv	;wreg free
   881  000856  C001  F009         	movff	?___awdiv,___awmod@dividend
   882  00085A  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   883  00085E  0E00               	movlw	0
   884  000860  6E0C               	movwf	(___awmod@divisor+1)^0,c
   885  000862  0E0A               	movlw	10
   886  000864  6E0B               	movwf	___awmod@divisor^0,c
   887  000866  ECD0  F00E         	call	___awmod	;wreg free
   888  00086A  5009               	movf	?___awmod^0,w,c
   889  00086C  ECAF  F010         	call	_ssdDigit
   890  000870                     
   891                           ;newmain.c: 146:                     ssdDigit((cnt / 600) % 6, 2);
   892  000870  0E02               	movlw	2
   893  000872  6E0F               	movwf	ssdDigit@pos^0,c
   894  000874  0E02               	movlw	2
   895  000876  6E04               	movwf	(___awdiv@divisor+1)^0,c
   896  000878  0E58               	movlw	88
   897  00087A  6E03               	movwf	___awdiv@divisor^0,c
   898  00087C  C018  F001         	movff	main@cnt,___awdiv@dividend
   899  000880  C019  F002         	movff	main@cnt+1,___awdiv@dividend+1
   900  000884  EC14  F00E         	call	___awdiv	;wreg free
   901  000888  C001  F009         	movff	?___awdiv,___awmod@dividend
   902  00088C  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   903  000890  0E00               	movlw	0
   904  000892  6E0C               	movwf	(___awmod@divisor+1)^0,c
   905  000894  0E06               	movlw	6
   906  000896  6E0B               	movwf	___awmod@divisor^0,c
   907  000898  ECD0  F00E         	call	___awmod	;wreg free
   908  00089C  5009               	movf	?___awmod^0,w,c
   909  00089E  ECAF  F010         	call	_ssdDigit
   910  0008A2                     
   911                           ;newmain.c: 147:                     ssdUpdate();
   912  0008A2  EC06  F00B         	call	_ssdUpdate	;wreg free
   913  0008A6                     
   914                           ;newmain.c: 148:                     for (k = 0; k < 55; k++);
   915  0008A6  0E00               	movlw	0
   916  0008A8  6E1E               	movwf	main@k^0,c	;volatile
   917  0008AA  0E00               	movlw	0
   918  0008AC  6E1F               	movwf	(main@k+1)^0,c	;volatile
   919  0008AE  0E00               	movlw	0
   920  0008B0  6E20               	movwf	(main@k+2)^0,c	;volatile
   921  0008B2  0E00               	movlw	0
   922  0008B4  6E21               	movwf	(main@k+3)^0,c	;volatile
   923  0008B6  C01E  F001         	movff	main@k,___flge@ff1	;volatile
   924  0008BA  C01F  F002         	movff	main@k+1,___flge@ff1+1	;volatile
   925  0008BE  C020  F003         	movff	main@k+2,___flge@ff1+2	;volatile
   926  0008C2  C021  F004         	movff	main@k+3,___flge@ff1+3	;volatile
   927  0008C6  0E00               	movlw	0
   928  0008C8  6E05               	movwf	___flge@ff2^0,c
   929  0008CA  0E00               	movlw	0
   930  0008CC  6E06               	movwf	(___flge@ff2+1)^0,c
   931  0008CE  0E5C               	movlw	92
   932  0008D0  6E07               	movwf	(___flge@ff2+2)^0,c
   933  0008D2  0E42               	movlw	66
   934  0008D4  6E08               	movwf	(___flge@ff2+3)^0,c
   935  0008D6  EC92  F00D         	call	___flge	;wreg free
   936  0008DA  A0D8               	btfss	status,0,c
   937  0008DC  EF72  F004         	goto	u3121
   938  0008E0  EF74  F004         	goto	u3120
   939  0008E4                     u3121:
   940  0008E4  EF76  F004         	goto	l2885
   941  0008E8                     u3120:
   942  0008E8  EFA9  F004         	goto	l2887
   943  0008EC                     l2885:
   944  0008EC  C01E  F001         	movff	main@k,___fladd@b	;volatile
   945  0008F0  C01F  F002         	movff	main@k+1,___fladd@b+1	;volatile
   946  0008F4  C020  F003         	movff	main@k+2,___fladd@b+2	;volatile
   947  0008F8  C021  F004         	movff	main@k+3,___fladd@b+3	;volatile
   948  0008FC  0E00               	movlw	0
   949  0008FE  6E05               	movwf	___fladd@a^0,c
   950  000900  0E00               	movlw	0
   951  000902  6E06               	movwf	(___fladd@a+1)^0,c
   952  000904  0E80               	movlw	128
   953  000906  6E07               	movwf	(___fladd@a+2)^0,c
   954  000908  0E3F               	movlw	63
   955  00090A  6E08               	movwf	(___fladd@a+3)^0,c
   956  00090C  EC58  F006         	call	___fladd	;wreg free
   957  000910  C001  F01E         	movff	?___fladd,main@k	;volatile
   958  000914  C002  F01F         	movff	?___fladd+1,main@k+1	;volatile
   959  000918  C003  F020         	movff	?___fladd+2,main@k+2	;volatile
   960  00091C  C004  F021         	movff	?___fladd+3,main@k+3	;volatile
   961  000920  C01E  F001         	movff	main@k,___flge@ff1	;volatile
   962  000924  C01F  F002         	movff	main@k+1,___flge@ff1+1	;volatile
   963  000928  C020  F003         	movff	main@k+2,___flge@ff1+2	;volatile
   964  00092C  C021  F004         	movff	main@k+3,___flge@ff1+3	;volatile
   965  000930  0E00               	movlw	0
   966  000932  6E05               	movwf	___flge@ff2^0,c
   967  000934  0E00               	movlw	0
   968  000936  6E06               	movwf	(___flge@ff2+1)^0,c
   969  000938  0E5C               	movlw	92
   970  00093A  6E07               	movwf	(___flge@ff2+2)^0,c
   971  00093C  0E42               	movlw	66
   972  00093E  6E08               	movwf	(___flge@ff2+3)^0,c
   973  000940  EC92  F00D         	call	___flge	;wreg free
   974  000944  A0D8               	btfss	status,0,c
   975  000946  EFA7  F004         	goto	u3131
   976  00094A  EFA9  F004         	goto	u3130
   977  00094E                     u3131:
   978  00094E  EF76  F004         	goto	l2885
   979  000952                     u3130:
   980  000952                     l2887:
   981                           
   982                           ;newmain.c: 149:                 }
   983  000952  0618               	decf	main@cnt^0,f,c
   984  000954  A0D8               	btfss	status,0,c
   985  000956  0619               	decf	(main@cnt+1)^0,f,c
   986  000958  BE19               	btfsc	(main@cnt+1)^0,7,c
   987  00095A  EFB9  F004         	goto	u3140
   988  00095E  5019               	movf	(main@cnt+1)^0,w,c
   989  000960  E106               	bnz	u3141
   990  000962  0418               	decf	main@cnt^0,w,c
   991  000964  B0D8               	btfsc	status,0,c
   992  000966  EFB7  F004         	goto	u3141
   993  00096A  EFB9  F004         	goto	u3140
   994  00096E                     u3141:
   995  00096E  EFEC  F003         	goto	l2861
   996  000972                     u3140:
   997  000972                     
   998                           ;newmain.c: 151:                 pwmSet(0);
   999  000972  0E00               	movlw	0
  1000  000974  ECEA  F00F         	call	_pwmSet
  1001  000978                     l2893:
  1002                           
  1003                           ;newmain.c: 152:                 conf = 0;
  1004  000978  0E00               	movlw	0
  1005  00097A  6E17               	movwf	main@conf^0,c
  1006                           
  1007                           ;newmain.c: 153:                 break;
  1008  00097C  EFA4  F005         	goto	l2939
  1009  000980                     l2895:
  1010                           
  1011                           ;newmain.c: 157:                 for (cnt = 550; cnt > 0; cnt--) {
  1012  000980  0E02               	movlw	2
  1013  000982  6E19               	movwf	(main@cnt+1)^0,c
  1014  000984  0E26               	movlw	38
  1015  000986  6E18               	movwf	main@cnt^0,c
  1016  000988                     l2901:
  1017                           
  1018                           ;newmain.c: 158:                     if (cnt == 550 || cnt == 100) {
  1019  000988  0E26               	movlw	38
  1020  00098A  1818               	xorwf	main@cnt^0,w,c
  1021  00098C  E109               	bnz	u3150
  1022  00098E  0E02               	movlw	2
  1023  000990  1819               	xorwf	(main@cnt+1)^0,w,c
  1024  000992  B4D8               	btfsc	status,2,c
  1025  000994  EFCE  F004         	goto	u3151
  1026  000998  EFD0  F004         	goto	u3150
  1027  00099C                     u3151:
  1028  00099C  EFDA  F004         	goto	l2905
  1029  0009A0                     u3150:
  1030  0009A0  0E64               	movlw	100
  1031  0009A2  1818               	xorwf	main@cnt^0,w,c
  1032  0009A4  1019               	iorwf	(main@cnt+1)^0,w,c
  1033  0009A6  A4D8               	btfss	status,2,c
  1034  0009A8  EFD8  F004         	goto	u3161
  1035  0009AC  EFDA  F004         	goto	u3160
  1036  0009B0                     u3161:
  1037  0009B0  EFDF  F004         	goto	l2907
  1038  0009B4                     u3160:
  1039  0009B4                     l2905:
  1040                           
  1041                           ;newmain.c: 159:                         pwmSet(100);
  1042  0009B4  0E64               	movlw	100
  1043  0009B6  ECEA  F00F         	call	_pwmSet
  1044                           
  1045                           ;newmain.c: 160:                     } else if (cnt == 450 || cnt == 1) {
  1046  0009BA  EFF6  F004         	goto	l2913
  1047  0009BE                     l2907:
  1048  0009BE  0EC2               	movlw	194
  1049  0009C0  1818               	xorwf	main@cnt^0,w,c
  1050  0009C2  E108               	bnz	u3170
  1051  0009C4  0419               	decf	(main@cnt+1)^0,w,c
  1052  0009C6  B4D8               	btfsc	status,2,c
  1053  0009C8  EFE8  F004         	goto	u3171
  1054  0009CC  EFEA  F004         	goto	u3170
  1055  0009D0                     u3171:
  1056  0009D0  EFF3  F004         	goto	l2911
  1057  0009D4                     u3170:
  1058  0009D4  0418               	decf	main@cnt^0,w,c
  1059  0009D6  1019               	iorwf	(main@cnt+1)^0,w,c
  1060  0009D8  A4D8               	btfss	status,2,c
  1061  0009DA  EFF1  F004         	goto	u3181
  1062  0009DE  EFF3  F004         	goto	u3180
  1063  0009E2                     u3181:
  1064  0009E2  EFF6  F004         	goto	l2913
  1065  0009E6                     u3180:
  1066  0009E6                     l2911:
  1067                           
  1068                           ;newmain.c: 161:                         pwmSet(0);
  1069  0009E6  0E00               	movlw	0
  1070  0009E8  ECEA  F00F         	call	_pwmSet
  1071  0009EC                     l2913:
  1072                           
  1073                           ;newmain.c: 163:                     ssdDigit((cnt / 100) % 10, 3);
  1074  0009EC  0E03               	movlw	3
  1075  0009EE  6E0F               	movwf	ssdDigit@pos^0,c
  1076  0009F0  0E00               	movlw	0
  1077  0009F2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1078  0009F4  0E64               	movlw	100
  1079  0009F6  6E03               	movwf	___awdiv@divisor^0,c
  1080  0009F8  C018  F001         	movff	main@cnt,___awdiv@dividend
  1081  0009FC  C019  F002         	movff	main@cnt+1,___awdiv@dividend+1
  1082  000A00  EC14  F00E         	call	___awdiv	;wreg free
  1083  000A04  C001  F009         	movff	?___awdiv,___awmod@dividend
  1084  000A08  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1085  000A0C  0E00               	movlw	0
  1086  000A0E  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1087  000A10  0E0A               	movlw	10
  1088  000A12  6E0B               	movwf	___awmod@divisor^0,c
  1089  000A14  ECD0  F00E         	call	___awmod	;wreg free
  1090  000A18  5009               	movf	?___awmod^0,w,c
  1091  000A1A  ECAF  F010         	call	_ssdDigit
  1092  000A1E                     
  1093                           ;newmain.c: 164:                     ssdUpdate();
  1094  000A1E  EC06  F00B         	call	_ssdUpdate	;wreg free
  1095  000A22                     
  1096                           ;newmain.c: 165:                     for (k = 0; k < 25; k++);
  1097  000A22  0E00               	movlw	0
  1098  000A24  6E1E               	movwf	main@k^0,c	;volatile
  1099  000A26  0E00               	movlw	0
  1100  000A28  6E1F               	movwf	(main@k+1)^0,c	;volatile
  1101  000A2A  0E00               	movlw	0
  1102  000A2C  6E20               	movwf	(main@k+2)^0,c	;volatile
  1103  000A2E  0E00               	movlw	0
  1104  000A30  6E21               	movwf	(main@k+3)^0,c	;volatile
  1105  000A32  C01E  F001         	movff	main@k,___flge@ff1	;volatile
  1106  000A36  C01F  F002         	movff	main@k+1,___flge@ff1+1	;volatile
  1107  000A3A  C020  F003         	movff	main@k+2,___flge@ff1+2	;volatile
  1108  000A3E  C021  F004         	movff	main@k+3,___flge@ff1+3	;volatile
  1109  000A42  0E00               	movlw	0
  1110  000A44  6E05               	movwf	___flge@ff2^0,c
  1111  000A46  0E00               	movlw	0
  1112  000A48  6E06               	movwf	(___flge@ff2+1)^0,c
  1113  000A4A  0EC8               	movlw	200
  1114  000A4C  6E07               	movwf	(___flge@ff2+2)^0,c
  1115  000A4E  0E41               	movlw	65
  1116  000A50  6E08               	movwf	(___flge@ff2+3)^0,c
  1117  000A52  EC92  F00D         	call	___flge	;wreg free
  1118  000A56  A0D8               	btfss	status,0,c
  1119  000A58  EF30  F005         	goto	u3191
  1120  000A5C  EF32  F005         	goto	u3190
  1121  000A60                     u3191:
  1122  000A60  EF34  F005         	goto	l2923
  1123  000A64                     u3190:
  1124  000A64  EF67  F005         	goto	l2925
  1125  000A68                     l2923:
  1126  000A68  C01E  F001         	movff	main@k,___fladd@b	;volatile
  1127  000A6C  C01F  F002         	movff	main@k+1,___fladd@b+1	;volatile
  1128  000A70  C020  F003         	movff	main@k+2,___fladd@b+2	;volatile
  1129  000A74  C021  F004         	movff	main@k+3,___fladd@b+3	;volatile
  1130  000A78  0E00               	movlw	0
  1131  000A7A  6E05               	movwf	___fladd@a^0,c
  1132  000A7C  0E00               	movlw	0
  1133  000A7E  6E06               	movwf	(___fladd@a+1)^0,c
  1134  000A80  0E80               	movlw	128
  1135  000A82  6E07               	movwf	(___fladd@a+2)^0,c
  1136  000A84  0E3F               	movlw	63
  1137  000A86  6E08               	movwf	(___fladd@a+3)^0,c
  1138  000A88  EC58  F006         	call	___fladd	;wreg free
  1139  000A8C  C001  F01E         	movff	?___fladd,main@k	;volatile
  1140  000A90  C002  F01F         	movff	?___fladd+1,main@k+1	;volatile
  1141  000A94  C003  F020         	movff	?___fladd+2,main@k+2	;volatile
  1142  000A98  C004  F021         	movff	?___fladd+3,main@k+3	;volatile
  1143  000A9C  C01E  F001         	movff	main@k,___flge@ff1	;volatile
  1144  000AA0  C01F  F002         	movff	main@k+1,___flge@ff1+1	;volatile
  1145  000AA4  C020  F003         	movff	main@k+2,___flge@ff1+2	;volatile
  1146  000AA8  C021  F004         	movff	main@k+3,___flge@ff1+3	;volatile
  1147  000AAC  0E00               	movlw	0
  1148  000AAE  6E05               	movwf	___flge@ff2^0,c
  1149  000AB0  0E00               	movlw	0
  1150  000AB2  6E06               	movwf	(___flge@ff2+1)^0,c
  1151  000AB4  0EC8               	movlw	200
  1152  000AB6  6E07               	movwf	(___flge@ff2+2)^0,c
  1153  000AB8  0E41               	movlw	65
  1154  000ABA  6E08               	movwf	(___flge@ff2+3)^0,c
  1155  000ABC  EC92  F00D         	call	___flge	;wreg free
  1156  000AC0  A0D8               	btfss	status,0,c
  1157  000AC2  EF65  F005         	goto	u3201
  1158  000AC6  EF67  F005         	goto	u3200
  1159  000ACA                     u3201:
  1160  000ACA  EF34  F005         	goto	l2923
  1161  000ACE                     u3200:
  1162  000ACE                     l2925:
  1163                           
  1164                           ;newmain.c: 166:                 }
  1165  000ACE  0618               	decf	main@cnt^0,f,c
  1166  000AD0  A0D8               	btfss	status,0,c
  1167  000AD2  0619               	decf	(main@cnt+1)^0,f,c
  1168  000AD4  BE19               	btfsc	(main@cnt+1)^0,7,c
  1169  000AD6  EF77  F005         	goto	u3210
  1170  000ADA  5019               	movf	(main@cnt+1)^0,w,c
  1171  000ADC  E106               	bnz	u3211
  1172  000ADE  0418               	decf	main@cnt^0,w,c
  1173  000AE0  B0D8               	btfsc	status,0,c
  1174  000AE2  EF75  F005         	goto	u3211
  1175  000AE6  EF77  F005         	goto	u3210
  1176  000AEA                     u3211:
  1177  000AEA  EFC4  F004         	goto	l2901
  1178  000AEE                     u3210:
  1179  000AEE                     
  1180                           ;newmain.c: 167:                 pwmSet(0);
  1181  000AEE  0E00               	movlw	0
  1182  000AF0  ECEA  F00F         	call	_pwmSet
  1183  000AF4                     
  1184                           ;newmain.c: 168:                 lcdCommand(0x01);
  1185  000AF4  0E01               	movlw	1
  1186  000AF6  EC7E  F012         	call	_lcdCommand
  1187  000AFA  EFBC  F004         	goto	l2893
  1188  000AFE                     l2937:
  1189  000AFE  5017               	movf	main@conf^0,w,c
  1190  000B00  6E15               	movwf	??_main^0,c
  1191  000B02  6A16               	clrf	(??_main+1)^0,c
  1192                           
  1193                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1194                           ; Switch size 1, requested type "simple"
  1195                           ; Number of cases is 1, Range of values is 0 to 0
  1196                           ; switch strategies available:
  1197                           ; Name         Instructions Cycles
  1198                           ; simple_byte            4     3 (average)
  1199                           ;	Chosen strategy is simple_byte
  1200  000B04  5016               	movf	(??_main+1)^0,w,c
  1201  000B06  0A00               	xorlw	0	; case 0
  1202  000B08  B4D8               	btfsc	status,2,c
  1203  000B0A  EF89  F005         	goto	l2977
  1204  000B0E  EFA4  F005         	goto	l2939
  1205  000B12                     l2977:
  1206                           
  1207                           ; Switch size 1, requested type "simple"
  1208                           ; Number of cases is 6, Range of values is 0 to 5
  1209                           ; switch strategies available:
  1210                           ; Name         Instructions Cycles
  1211                           ; simple_byte           19    10 (average)
  1212                           ;	Chosen strategy is simple_byte
  1213  000B12  5015               	movf	??_main^0,w,c
  1214  000B14  0A00               	xorlw	0	; case 0
  1215  000B16  B4D8               	btfsc	status,2,c
  1216  000B18  EF3D  F003         	goto	l2805
  1217  000B1C  0A01               	xorlw	1	; case 1
  1218  000B1E  B4D8               	btfsc	status,2,c
  1219  000B20  EF6E  F003         	goto	l2815
  1220  000B24  0A03               	xorlw	3	; case 2
  1221  000B26  B4D8               	btfsc	status,2,c
  1222  000B28  EF88  F003         	goto	l2823
  1223  000B2C  0A01               	xorlw	1	; case 3
  1224  000B2E  B4D8               	btfsc	status,2,c
  1225  000B30  EF9B  F003         	goto	l2831
  1226  000B34  0A07               	xorlw	7	; case 4
  1227  000B36  B4D8               	btfsc	status,2,c
  1228  000B38  EFCF  F003         	goto	l2847
  1229  000B3C  0A01               	xorlw	1	; case 5
  1230  000B3E  B4D8               	btfsc	status,2,c
  1231  000B40  EFC0  F004         	goto	l2895
  1232  000B44  EFA4  F005         	goto	l2939
  1233  000B48                     l2939:
  1234                           
  1235                           ;newmain.c: 173:         limpaSSD();
  1236  000B48  EC58  F011         	call	_limpaSSD	;wreg free
  1237  000B4C                     
  1238                           ;newmain.c: 174:         for (k = 0; k < 12; k++) {
  1239  000B4C  0E00               	movlw	0
  1240  000B4E  6E1E               	movwf	main@k^0,c	;volatile
  1241  000B50  0E00               	movlw	0
  1242  000B52  6E1F               	movwf	(main@k+1)^0,c	;volatile
  1243  000B54  0E00               	movlw	0
  1244  000B56  6E20               	movwf	(main@k+2)^0,c	;volatile
  1245  000B58  0E00               	movlw	0
  1246  000B5A  6E21               	movwf	(main@k+3)^0,c	;volatile
  1247  000B5C  C01E  F001         	movff	main@k,___flge@ff1	;volatile
  1248  000B60  C01F  F002         	movff	main@k+1,___flge@ff1+1	;volatile
  1249  000B64  C020  F003         	movff	main@k+2,___flge@ff1+2	;volatile
  1250  000B68  C021  F004         	movff	main@k+3,___flge@ff1+3	;volatile
  1251  000B6C  0E00               	movlw	0
  1252  000B6E  6E05               	movwf	___flge@ff2^0,c
  1253  000B70  0E00               	movlw	0
  1254  000B72  6E06               	movwf	(___flge@ff2+1)^0,c
  1255  000B74  0E40               	movlw	64
  1256  000B76  6E07               	movwf	(___flge@ff2+2)^0,c
  1257  000B78  0E41               	movlw	65
  1258  000B7A  6E08               	movwf	(___flge@ff2+3)^0,c
  1259  000B7C  EC92  F00D         	call	___flge	;wreg free
  1260  000B80  A0D8               	btfss	status,0,c
  1261  000B82  EFC5  F005         	goto	u3221
  1262  000B86  EFC7  F005         	goto	u3220
  1263  000B8A                     u3221:
  1264  000B8A  EFC9  F005         	goto	l2947
  1265  000B8E                     u3220:
  1266  000B8E  EF39  F003         	goto	l2803
  1267  000B92                     l2947:
  1268                           
  1269                           ;newmain.c: 175:             ssdUpdate();
  1270  000B92  EC06  F00B         	call	_ssdUpdate	;wreg free
  1271  000B96                     
  1272                           ;newmain.c: 176:             for (volatile float u = 0; u < 10; u++);
  1273  000B96  0E00               	movlw	0
  1274  000B98  6E1A               	movwf	main@u^0,c	;volatile
  1275  000B9A  0E00               	movlw	0
  1276  000B9C  6E1B               	movwf	(main@u+1)^0,c	;volatile
  1277  000B9E  0E00               	movlw	0
  1278  000BA0  6E1C               	movwf	(main@u+2)^0,c	;volatile
  1279  000BA2  0E00               	movlw	0
  1280  000BA4  6E1D               	movwf	(main@u+3)^0,c	;volatile
  1281  000BA6  C01A  F001         	movff	main@u,___flge@ff1	;volatile
  1282  000BAA  C01B  F002         	movff	main@u+1,___flge@ff1+1	;volatile
  1283  000BAE  C01C  F003         	movff	main@u+2,___flge@ff1+2	;volatile
  1284  000BB2  C01D  F004         	movff	main@u+3,___flge@ff1+3	;volatile
  1285  000BB6  0E00               	movlw	0
  1286  000BB8  6E05               	movwf	___flge@ff2^0,c
  1287  000BBA  0E00               	movlw	0
  1288  000BBC  6E06               	movwf	(___flge@ff2+1)^0,c
  1289  000BBE  0E20               	movlw	32
  1290  000BC0  6E07               	movwf	(___flge@ff2+2)^0,c
  1291  000BC2  0E41               	movlw	65
  1292  000BC4  6E08               	movwf	(___flge@ff2+3)^0,c
  1293  000BC6  EC92  F00D         	call	___flge	;wreg free
  1294  000BCA  A0D8               	btfss	status,0,c
  1295  000BCC  EFEA  F005         	goto	u3231
  1296  000BD0  EFEC  F005         	goto	u3230
  1297  000BD4                     u3231:
  1298  000BD4  EFEE  F005         	goto	l2955
  1299  000BD8                     u3230:
  1300  000BD8  EF21  F006         	goto	l2957
  1301  000BDC                     l2955:
  1302  000BDC  C01A  F001         	movff	main@u,___fladd@b	;volatile
  1303  000BE0  C01B  F002         	movff	main@u+1,___fladd@b+1	;volatile
  1304  000BE4  C01C  F003         	movff	main@u+2,___fladd@b+2	;volatile
  1305  000BE8  C01D  F004         	movff	main@u+3,___fladd@b+3	;volatile
  1306  000BEC  0E00               	movlw	0
  1307  000BEE  6E05               	movwf	___fladd@a^0,c
  1308  000BF0  0E00               	movlw	0
  1309  000BF2  6E06               	movwf	(___fladd@a+1)^0,c
  1310  000BF4  0E80               	movlw	128
  1311  000BF6  6E07               	movwf	(___fladd@a+2)^0,c
  1312  000BF8  0E3F               	movlw	63
  1313  000BFA  6E08               	movwf	(___fladd@a+3)^0,c
  1314  000BFC  EC58  F006         	call	___fladd	;wreg free
  1315  000C00  C001  F01A         	movff	?___fladd,main@u	;volatile
  1316  000C04  C002  F01B         	movff	?___fladd+1,main@u+1	;volatile
  1317  000C08  C003  F01C         	movff	?___fladd+2,main@u+2	;volatile
  1318  000C0C  C004  F01D         	movff	?___fladd+3,main@u+3	;volatile
  1319  000C10  C01A  F001         	movff	main@u,___flge@ff1	;volatile
  1320  000C14  C01B  F002         	movff	main@u+1,___flge@ff1+1	;volatile
  1321  000C18  C01C  F003         	movff	main@u+2,___flge@ff1+2	;volatile
  1322  000C1C  C01D  F004         	movff	main@u+3,___flge@ff1+3	;volatile
  1323  000C20  0E00               	movlw	0
  1324  000C22  6E05               	movwf	___flge@ff2^0,c
  1325  000C24  0E00               	movlw	0
  1326  000C26  6E06               	movwf	(___flge@ff2+1)^0,c
  1327  000C28  0E20               	movlw	32
  1328  000C2A  6E07               	movwf	(___flge@ff2+2)^0,c
  1329  000C2C  0E41               	movlw	65
  1330  000C2E  6E08               	movwf	(___flge@ff2+3)^0,c
  1331  000C30  EC92  F00D         	call	___flge	;wreg free
  1332  000C34  A0D8               	btfss	status,0,c
  1333  000C36  EF1F  F006         	goto	u3241
  1334  000C3A  EF21  F006         	goto	u3240
  1335  000C3E                     u3241:
  1336  000C3E  EFEE  F005         	goto	l2955
  1337  000C42                     u3240:
  1338  000C42                     l2957:
  1339                           
  1340                           ;newmain.c: 177:         }
  1341  000C42  C01E  F001         	movff	main@k,___fladd@b	;volatile
  1342  000C46  C01F  F002         	movff	main@k+1,___fladd@b+1	;volatile
  1343  000C4A  C020  F003         	movff	main@k+2,___fladd@b+2	;volatile
  1344  000C4E  C021  F004         	movff	main@k+3,___fladd@b+3	;volatile
  1345  000C52  0E00               	movlw	0
  1346  000C54  6E05               	movwf	___fladd@a^0,c
  1347  000C56  0E00               	movlw	0
  1348  000C58  6E06               	movwf	(___fladd@a+1)^0,c
  1349  000C5A  0E80               	movlw	128
  1350  000C5C  6E07               	movwf	(___fladd@a+2)^0,c
  1351  000C5E  0E3F               	movlw	63
  1352  000C60  6E08               	movwf	(___fladd@a+3)^0,c
  1353  000C62  EC58  F006         	call	___fladd	;wreg free
  1354  000C66  C001  F01E         	movff	?___fladd,main@k	;volatile
  1355  000C6A  C002  F01F         	movff	?___fladd+1,main@k+1	;volatile
  1356  000C6E  C003  F020         	movff	?___fladd+2,main@k+2	;volatile
  1357  000C72  C004  F021         	movff	?___fladd+3,main@k+3	;volatile
  1358  000C76  C01E  F001         	movff	main@k,___flge@ff1	;volatile
  1359  000C7A  C01F  F002         	movff	main@k+1,___flge@ff1+1	;volatile
  1360  000C7E  C020  F003         	movff	main@k+2,___flge@ff1+2	;volatile
  1361  000C82  C021  F004         	movff	main@k+3,___flge@ff1+3	;volatile
  1362  000C86  0E00               	movlw	0
  1363  000C88  6E05               	movwf	___flge@ff2^0,c
  1364  000C8A  0E00               	movlw	0
  1365  000C8C  6E06               	movwf	(___flge@ff2+1)^0,c
  1366  000C8E  0E40               	movlw	64
  1367  000C90  6E07               	movwf	(___flge@ff2+2)^0,c
  1368  000C92  0E41               	movlw	65
  1369  000C94  6E08               	movwf	(___flge@ff2+3)^0,c
  1370  000C96  EC92  F00D         	call	___flge	;wreg free
  1371  000C9A  A0D8               	btfss	status,0,c
  1372  000C9C  EF52  F006         	goto	u3251
  1373  000CA0  EF54  F006         	goto	u3250
  1374  000CA4                     u3251:
  1375  000CA4  EFC9  F005         	goto	l2947
  1376  000CA8                     u3250:
  1377  000CA8  EF39  F003         	goto	l2803
  1378  000CAC  EF00  F000         	goto	start
  1379  000CB0                     __end_of_main:
  1380                           	callstack 0
  1381                           
  1382 ;; *************** function _timerInit *****************
  1383 ;; Defined at:
  1384 ;;		line 55 in file "timer.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;		None
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;		None
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		wreg, status,2, status,0
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1398 ;;      Params:         0       0       0       0       0       0       0
  1399 ;;      Locals:         0       0       0       0       0       0       0
  1400 ;;      Temps:          0       0       0       0       0       0       0
  1401 ;;      Totals:         0       0       0       0       0       0       0
  1402 ;;Total ram usage:        0 bytes
  1403 ;; Hardware stack levels used: 1
  1404 ;; This function calls:
  1405 ;;		Nothing
  1406 ;; This function is called by:
  1407 ;;		_main
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           	psect	text1
  1412  002554                     __ptext1:
  1413                           	callstack 0
  1414  002554                     _timerInit:
  1415                           	callstack 30
  1416  002554                     
  1417                           ;timer.c: 57:  T0CON = 0b00001000;
  1418  002554  0E08               	movlw	8
  1419  002556  6ED5               	movwf	213,c	;volatile
  1420  002558                     
  1421                           ;timer.c: 58:  ((T0CON) |= (1<<(7)));
  1422  002558  8ED5               	bsf	213,7,c	;volatile
  1423  00255A  0012               	return		;funcret
  1424  00255C                     __end_of_timerInit:
  1425                           	callstack 0
  1426                           
  1427 ;; *************** function _ssdInit *****************
  1428 ;; Defined at:
  1429 ;;		line 94 in file "ssd.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg, status,2, status,0, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1443 ;;      Params:         0       0       0       0       0       0       0
  1444 ;;      Locals:         0       0       0       0       0       0       0
  1445 ;;      Temps:          0       0       0       0       0       0       0
  1446 ;;      Totals:         0       0       0       0       0       0       0
  1447 ;;Total ram usage:        0 bytes
  1448 ;; Hardware stack levels used: 1
  1449 ;; Hardware stack levels required when called: 2
  1450 ;; This function calls:
  1451 ;;		_pinMode
  1452 ;;		_soInit
  1453 ;; This function is called by:
  1454 ;;		_main
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text2
  1459  0021B6                     __ptext2:
  1460                           	callstack 0
  1461  0021B6                     _ssdInit:
  1462                           	callstack 28
  1463  0021B6                     
  1464                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  1465  0021B6  0E00               	movlw	0
  1466  0021B8  6E02               	movwf	(pinMode@pin+1)^0,c
  1467  0021BA  0E18               	movlw	24
  1468  0021BC  6E01               	movwf	pinMode@pin^0,c
  1469  0021BE  0E00               	movlw	0
  1470  0021C0  6E04               	movwf	(pinMode@type+1)^0,c
  1471  0021C2  0E00               	movlw	0
  1472  0021C4  6E03               	movwf	pinMode@type^0,c
  1473  0021C6  ECDF  F009         	call	_pinMode	;wreg free
  1474                           
  1475                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  1476  0021CA  0E00               	movlw	0
  1477  0021CC  6E02               	movwf	(pinMode@pin+1)^0,c
  1478  0021CE  0E19               	movlw	25
  1479  0021D0  6E01               	movwf	pinMode@pin^0,c
  1480  0021D2  0E00               	movlw	0
  1481  0021D4  6E04               	movwf	(pinMode@type+1)^0,c
  1482  0021D6  0E00               	movlw	0
  1483  0021D8  6E03               	movwf	pinMode@type^0,c
  1484  0021DA  ECDF  F009         	call	_pinMode	;wreg free
  1485                           
  1486                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  1487  0021DE  0E00               	movlw	0
  1488  0021E0  6E02               	movwf	(pinMode@pin+1)^0,c
  1489  0021E2  0E1A               	movlw	26
  1490  0021E4  6E01               	movwf	pinMode@pin^0,c
  1491  0021E6  0E00               	movlw	0
  1492  0021E8  6E04               	movwf	(pinMode@type+1)^0,c
  1493  0021EA  0E00               	movlw	0
  1494  0021EC  6E03               	movwf	pinMode@type^0,c
  1495  0021EE  ECDF  F009         	call	_pinMode	;wreg free
  1496                           
  1497                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  1498  0021F2  0E00               	movlw	0
  1499  0021F4  6E02               	movwf	(pinMode@pin+1)^0,c
  1500  0021F6  0E1B               	movlw	27
  1501  0021F8  6E01               	movwf	pinMode@pin^0,c
  1502  0021FA  0E00               	movlw	0
  1503  0021FC  6E04               	movwf	(pinMode@type+1)^0,c
  1504  0021FE  0E00               	movlw	0
  1505  002200  6E03               	movwf	pinMode@type^0,c
  1506  002202  ECDF  F009         	call	_pinMode	;wreg free
  1507                           
  1508                           ;ssd.c: 102:     soInit();
  1509  002206  EC9F  F011         	call	_soInit	;wreg free
  1510  00220A  0012               	return		;funcret
  1511  00220C                     __end_of_ssdInit:
  1512                           	callstack 0
  1513                           
  1514 ;; *************** function _pwmSet *****************
  1515 ;; Defined at:
  1516 ;;		line 24 in file "pwm.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;  porcento        1    wreg     unsigned char 
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  porcento        1    9[COMRAM] unsigned char 
  1521 ;;  val             2   10[COMRAM] unsigned int 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1531 ;;      Params:         0       0       0       0       0       0       0
  1532 ;;      Locals:         3       0       0       0       0       0       0
  1533 ;;      Temps:          2       0       0       0       0       0       0
  1534 ;;      Totals:         5       0       0       0       0       0       0
  1535 ;;Total ram usage:        5 bytes
  1536 ;; Hardware stack levels used: 1
  1537 ;; Hardware stack levels required when called: 1
  1538 ;; This function calls:
  1539 ;;		___lwdiv
  1540 ;;		___wmul
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text3
  1547  001FD4                     __ptext3:
  1548                           	callstack 0
  1549  001FD4                     _pwmSet:
  1550                           	callstack 29
  1551                           
  1552                           ;incstack = 0
  1553                           ;pwmSet@porcento stored from wreg
  1554  001FD4  6E0A               	movwf	pwmSet@porcento^0,c
  1555  001FD6                     
  1556                           ;pwm.c: 24: void pwmSet(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int va
      +                          l = ((unsigned int)porcento) *(PR2+1);
  1557  001FD6  0E01               	movlw	1
  1558  001FD8  24CB               	addwf	203,w,c	;volatile
  1559  001FDA  6E01               	movwf	___wmul@multiplier^0,c
  1560  001FDC  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1561  001FDE  0E00               	movlw	0
  1562  001FE0  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  1563  001FE2  C00A  F003         	movff	pwmSet@porcento,___wmul@multiplicand
  1564  001FE6  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  1565  001FE8  EC36  F012         	call	___wmul	;wreg free
  1566  001FEC  C001  F00B         	movff	?___wmul,pwmSet@val
  1567  001FF0  C002  F00C         	movff	?___wmul+1,pwmSet@val+1
  1568  001FF4                     
  1569                           ;pwm.c: 33:     val = val / 25;
  1570  001FF4  C00B  F001         	movff	pwmSet@val,___lwdiv@dividend
  1571  001FF8  C00C  F002         	movff	pwmSet@val+1,___lwdiv@dividend+1
  1572  001FFC  0E00               	movlw	0
  1573  001FFE  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1574  002000  0E19               	movlw	25
  1575  002002  6E03               	movwf	___lwdiv@divisor^0,c
  1576  002004  ECB0  F00F         	call	___lwdiv	;wreg free
  1577  002008  C001  F00B         	movff	?___lwdiv,pwmSet@val
  1578  00200C  C002  F00C         	movff	?___lwdiv+1,pwmSet@val+1
  1579  002010                     
  1580                           ;pwm.c: 35:  val &= 0x03ff;
  1581  002010  0EFF               	movlw	255
  1582  002012  160B               	andwf	pwmSet@val^0,f,c
  1583  002014  0E03               	movlw	3
  1584  002016  160C               	andwf	(pwmSet@val+1)^0,f,c
  1585  002018                     
  1586                           ;pwm.c: 37:  CCPR2L = val >> 2;
  1587  002018  C00B  F008         	movff	pwmSet@val,??_pwmSet
  1588  00201C  C00C  F009         	movff	pwmSet@val+1,??_pwmSet+1
  1589  002020  90D8               	bcf	status,0,c
  1590  002022  3209               	rrcf	(??_pwmSet+1)^0,f,c
  1591  002024  3208               	rrcf	??_pwmSet^0,f,c
  1592  002026  90D8               	bcf	status,0,c
  1593  002028  3209               	rrcf	(??_pwmSet+1)^0,f,c
  1594  00202A  3208               	rrcf	??_pwmSet^0,f,c
  1595  00202C  5008               	movf	??_pwmSet^0,w,c
  1596  00202E  6EBB               	movwf	187,c	;volatile
  1597  002030                     
  1598                           ;pwm.c: 39:  CCP2CON |= (val & 0x0003) << 4;
  1599  002030  C00B  F008         	movff	pwmSet@val,??_pwmSet	;volatile
  1600  002034  0E03               	movlw	3
  1601  002036  1608               	andwf	??_pwmSet^0,f,c
  1602  002038  3808               	swapf	??_pwmSet^0,w,c
  1603  00203A  0BF0               	andlw	240
  1604  00203C  12BA               	iorwf	186,f,c	;volatile
  1605  00203E  0012               	return		;funcret
  1606  002040                     __end_of_pwmSet:
  1607                           	callstack 0
  1608                           
  1609 ;; *************** function ___wmul *****************
  1610 ;; Defined at:
  1611 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  multiplier      2    0[COMRAM] unsigned int 
  1614 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;  product         2    4[COMRAM] unsigned int 
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  2    0[COMRAM] unsigned int 
  1619 ;; Registers used:
  1620 ;;		wreg, status,2, status,0, prodl, prodh
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1626 ;;      Params:         4       0       0       0       0       0       0
  1627 ;;      Locals:         2       0       0       0       0       0       0
  1628 ;;      Temps:          0       0       0       0       0       0       0
  1629 ;;      Totals:         6       0       0       0       0       0       0
  1630 ;;Total ram usage:        6 bytes
  1631 ;; Hardware stack levels used: 1
  1632 ;; This function calls:
  1633 ;;		Nothing
  1634 ;; This function is called by:
  1635 ;;		_pwmSet
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text4
  1640  00246C                     __ptext4:
  1641                           	callstack 0
  1642  00246C                     ___wmul:
  1643                           	callstack 29
  1644  00246C  5001               	movf	___wmul@multiplier^0,w,c
  1645  00246E  0203               	mulwf	___wmul@multiplicand^0,c
  1646  002470  CFF3 F005          	movff	prodl,___wmul@product
  1647  002474  CFF4 F006          	movff	prodh,___wmul@product+1
  1648  002478  5001               	movf	___wmul@multiplier^0,w,c
  1649  00247A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1650  00247C  50F3               	movf	243,w,c
  1651  00247E  2606               	addwf	(___wmul@product+1)^0,f,c
  1652  002480  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1653  002482  0203               	mulwf	___wmul@multiplicand^0,c
  1654  002484  50F3               	movf	243,w,c
  1655  002486  2606               	addwf	(___wmul@product+1)^0,f,c
  1656  002488  C005  F001         	movff	___wmul@product,?___wmul
  1657  00248C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1658  002490  0012               	return		;funcret
  1659  002492                     __end_of___wmul:
  1660                           	callstack 0
  1661                           
  1662 ;; *************** function ___lwdiv *****************
  1663 ;; Defined at:
  1664 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  dividend        2    0[COMRAM] unsigned int 
  1667 ;;  divisor         2    2[COMRAM] unsigned int 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  quotient        2    4[COMRAM] unsigned int 
  1670 ;;  counter         1    6[COMRAM] unsigned char 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  2    0[COMRAM] unsigned int 
  1673 ;; Registers used:
  1674 ;;		wreg, status,2, status,0
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1680 ;;      Params:         4       0       0       0       0       0       0
  1681 ;;      Locals:         3       0       0       0       0       0       0
  1682 ;;      Temps:          0       0       0       0       0       0       0
  1683 ;;      Totals:         7       0       0       0       0       0       0
  1684 ;;Total ram usage:        7 bytes
  1685 ;; Hardware stack levels used: 1
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_pwmSet
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           	psect	text5
  1694  001F60                     __ptext5:
  1695                           	callstack 0
  1696  001F60                     ___lwdiv:
  1697                           	callstack 29
  1698  001F60  0E00               	movlw	0
  1699  001F62  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1700  001F64  0E00               	movlw	0
  1701  001F66  6E05               	movwf	___lwdiv@quotient^0,c
  1702  001F68  5003               	movf	___lwdiv@divisor^0,w,c
  1703  001F6A  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1704  001F6C  B4D8               	btfsc	status,2,c
  1705  001F6E  EFBB  F00F         	goto	u2381
  1706  001F72  EFBD  F00F         	goto	u2380
  1707  001F76                     u2381:
  1708  001F76  EFE5  F00F         	goto	l879
  1709  001F7A                     u2380:
  1710  001F7A  0E01               	movlw	1
  1711  001F7C  6E07               	movwf	___lwdiv@counter^0,c
  1712  001F7E  EFC5  F00F         	goto	l2359
  1713  001F82                     l2357:
  1714  001F82  90D8               	bcf	status,0,c
  1715  001F84  3603               	rlcf	___lwdiv@divisor^0,f,c
  1716  001F86  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1717  001F88  2A07               	incf	___lwdiv@counter^0,f,c
  1718  001F8A                     l2359:
  1719  001F8A  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1720  001F8C  EFCA  F00F         	goto	u2391
  1721  001F90  EFCC  F00F         	goto	u2390
  1722  001F94                     u2391:
  1723  001F94  EFC1  F00F         	goto	l2357
  1724  001F98                     u2390:
  1725  001F98                     l2361:
  1726  001F98  90D8               	bcf	status,0,c
  1727  001F9A  3605               	rlcf	___lwdiv@quotient^0,f,c
  1728  001F9C  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1729  001F9E  5003               	movf	___lwdiv@divisor^0,w,c
  1730  001FA0  5C01               	subwf	___lwdiv@dividend^0,w,c
  1731  001FA2  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1732  001FA4  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1733  001FA6  A0D8               	btfss	status,0,c
  1734  001FA8  EFD8  F00F         	goto	u2401
  1735  001FAC  EFDA  F00F         	goto	u2400
  1736  001FB0                     u2401:
  1737  001FB0  EFDF  F00F         	goto	l2369
  1738  001FB4                     u2400:
  1739  001FB4  5003               	movf	___lwdiv@divisor^0,w,c
  1740  001FB6  5E01               	subwf	___lwdiv@dividend^0,f,c
  1741  001FB8  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1742  001FBA  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1743  001FBC  8005               	bsf	___lwdiv@quotient^0,0,c
  1744  001FBE                     l2369:
  1745  001FBE  90D8               	bcf	status,0,c
  1746  001FC0  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1747  001FC2  3203               	rrcf	___lwdiv@divisor^0,f,c
  1748  001FC4  2E07               	decfsz	___lwdiv@counter^0,f,c
  1749  001FC6  EFCC  F00F         	goto	l2361
  1750  001FCA                     l879:
  1751  001FCA  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1752  001FCE  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1753  001FD2  0012               	return		;funcret
  1754  001FD4                     __end_of___lwdiv:
  1755                           	callstack 0
  1756                           
  1757 ;; *************** function _pwmInit *****************
  1758 ;; Defined at:
  1759 ;;		line 51 in file "pwm.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;		None
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;		None
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      void 
  1766 ;; Registers used:
  1767 ;;		wreg, status,2, status,0, cstack
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1773 ;;      Params:         0       0       0       0       0       0       0
  1774 ;;      Locals:         0       0       0       0       0       0       0
  1775 ;;      Temps:          0       0       0       0       0       0       0
  1776 ;;      Totals:         0       0       0       0       0       0       0
  1777 ;;Total ram usage:        0 bytes
  1778 ;; Hardware stack levels used: 1
  1779 ;; Hardware stack levels required when called: 2
  1780 ;; This function calls:
  1781 ;;		_pwmFrequency
  1782 ;; This function is called by:
  1783 ;;		_main
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           	psect	text6
  1788  00251A                     __ptext6:
  1789                           	callstack 0
  1790  00251A                     _pwmInit:
  1791                           	callstack 28
  1792  00251A                     
  1793                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(1)));
  1794  00251A  9294               	bcf	148,1,c	;volatile
  1795  00251C                     
  1796                           ;pwm.c: 55:  T2CON |= 0b00000011;
  1797  00251C  0E03               	movlw	3
  1798  00251E  12CA               	iorwf	202,f,c	;volatile
  1799  002520                     
  1800                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
  1801  002520  84CA               	bsf	202,2,c	;volatile
  1802  002522                     
  1803                           ;pwm.c: 58:  CCP2CON = 0b00001100;
  1804  002522  0E0C               	movlw	12
  1805  002524  6EBA               	movwf	186,c	;volatile
  1806  002526                     
  1807                           ;pwm.c: 60:     pwmFrequency(100);
  1808  002526  0E00               	movlw	0
  1809  002528  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  1810  00252A  0E64               	movlw	100
  1811  00252C  6E0F               	movwf	pwmFrequency@freq^0,c
  1812  00252E  EC49  F012         	call	_pwmFrequency	;wreg free
  1813  002532  0012               	return		;funcret
  1814  002534                     __end_of_pwmInit:
  1815                           	callstack 0
  1816                           
  1817 ;; *************** function _pwmFrequency *****************
  1818 ;; Defined at:
  1819 ;;		line 44 in file "pwm.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;  freq            2   14[COMRAM] unsigned int 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;		None
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		wreg, status,2, status,0, cstack
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1833 ;;      Params:         2       0       0       0       0       0       0
  1834 ;;      Locals:         0       0       0       0       0       0       0
  1835 ;;      Temps:          0       0       0       0       0       0       0
  1836 ;;      Totals:         2       0       0       0       0       0       0
  1837 ;;Total ram usage:        2 bytes
  1838 ;; Hardware stack levels used: 1
  1839 ;; Hardware stack levels required when called: 1
  1840 ;; This function calls:
  1841 ;;		___aldiv
  1842 ;; This function is called by:
  1843 ;;		_main
  1844 ;;		_pwmInit
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text7
  1849  002492                     __ptext7:
  1850                           	callstack 0
  1851  002492                     _pwmFrequency:
  1852                           	callstack 28
  1853  002492                     
  1854                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  1855  002492  0E48               	movlw	72
  1856  002494  6E01               	movwf	___aldiv@dividend^0,c
  1857  002496  0EE8               	movlw	232
  1858  002498  6E02               	movwf	(___aldiv@dividend+1)^0,c
  1859  00249A  0E01               	movlw	1
  1860  00249C  6E03               	movwf	(___aldiv@dividend+2)^0,c
  1861  00249E  0E00               	movlw	0
  1862  0024A0  6E04               	movwf	(___aldiv@dividend+3)^0,c
  1863  0024A2  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  1864  0024A6  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  1865  0024AA  6A07               	clrf	(___aldiv@divisor+2)^0,c
  1866  0024AC  6A08               	clrf	(___aldiv@divisor+3)^0,c
  1867  0024AE  EC0C  F00D         	call	___aldiv	;wreg free
  1868  0024B2  0401               	decf	?___aldiv^0,w,c
  1869  0024B4  6ECB               	movwf	203,c	;volatile
  1870  0024B6  0012               	return		;funcret
  1871  0024B8                     __end_of_pwmFrequency:
  1872                           	callstack 0
  1873                           
  1874 ;; *************** function ___aldiv *****************
  1875 ;; Defined at:
  1876 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  dividend        4    0[COMRAM] long 
  1879 ;;  divisor         4    4[COMRAM] long 
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;  quotient        4   10[COMRAM] long 
  1882 ;;  sign            1    9[COMRAM] unsigned char 
  1883 ;;  counter         1    8[COMRAM] unsigned char 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  4    0[COMRAM] long 
  1886 ;; Registers used:
  1887 ;;		wreg, status,2, status,0
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1893 ;;      Params:         8       0       0       0       0       0       0
  1894 ;;      Locals:         6       0       0       0       0       0       0
  1895 ;;      Temps:          0       0       0       0       0       0       0
  1896 ;;      Totals:        14       0       0       0       0       0       0
  1897 ;;Total ram usage:       14 bytes
  1898 ;; Hardware stack levels used: 1
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_pwmFrequency
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           	psect	text8
  1907  001A18                     __ptext8:
  1908                           	callstack 0
  1909  001A18                     ___aldiv:
  1910                           	callstack 28
  1911  001A18  0E00               	movlw	0
  1912  001A1A  6E0A               	movwf	___aldiv@sign^0,c
  1913  001A1C  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  1914  001A1E  EF15  F00D         	goto	u2200
  1915  001A22  EF13  F00D         	goto	u2201
  1916  001A26                     u2201:
  1917  001A26  EF1F  F00D         	goto	l2217
  1918  001A2A                     u2200:
  1919  001A2A  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  1920  001A2C  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  1921  001A2E  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  1922  001A30  6C05               	negf	___aldiv@divisor^0,c
  1923  001A32  0E00               	movlw	0
  1924  001A34  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  1925  001A36  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  1926  001A38  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  1927  001A3A  0E01               	movlw	1
  1928  001A3C  6E0A               	movwf	___aldiv@sign^0,c
  1929  001A3E                     l2217:
  1930  001A3E  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  1931  001A40  EF26  F00D         	goto	u2210
  1932  001A44  EF24  F00D         	goto	u2211
  1933  001A48                     u2211:
  1934  001A48  EF30  F00D         	goto	l2223
  1935  001A4C                     u2210:
  1936  001A4C  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  1937  001A4E  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  1938  001A50  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  1939  001A52  6C01               	negf	___aldiv@dividend^0,c
  1940  001A54  0E00               	movlw	0
  1941  001A56  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  1942  001A58  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  1943  001A5A  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  1944  001A5C  0E01               	movlw	1
  1945  001A5E  1A0A               	xorwf	___aldiv@sign^0,f,c
  1946  001A60                     l2223:
  1947  001A60  0E00               	movlw	0
  1948  001A62  6E0B               	movwf	___aldiv@quotient^0,c
  1949  001A64  0E00               	movlw	0
  1950  001A66  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  1951  001A68  0E00               	movlw	0
  1952  001A6A  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  1953  001A6C  0E00               	movlw	0
  1954  001A6E  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  1955  001A70  5005               	movf	___aldiv@divisor^0,w,c
  1956  001A72  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  1957  001A74  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  1958  001A76  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  1959  001A78  B4D8               	btfsc	status,2,c
  1960  001A7A  EF41  F00D         	goto	u2221
  1961  001A7E  EF43  F00D         	goto	u2220
  1962  001A82                     u2221:
  1963  001A82  EF79  F00D         	goto	l2245
  1964  001A86                     u2220:
  1965  001A86  0E01               	movlw	1
  1966  001A88  6E09               	movwf	___aldiv@counter^0,c
  1967  001A8A  EF4D  F00D         	goto	l2231
  1968  001A8E                     l2229:
  1969  001A8E  90D8               	bcf	status,0,c
  1970  001A90  3605               	rlcf	___aldiv@divisor^0,f,c
  1971  001A92  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  1972  001A94  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  1973  001A96  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  1974  001A98  2A09               	incf	___aldiv@counter^0,f,c
  1975  001A9A                     l2231:
  1976  001A9A  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  1977  001A9C  EF52  F00D         	goto	u2231
  1978  001AA0  EF54  F00D         	goto	u2230
  1979  001AA4                     u2231:
  1980  001AA4  EF47  F00D         	goto	l2229
  1981  001AA8                     u2230:
  1982  001AA8                     l2233:
  1983  001AA8  90D8               	bcf	status,0,c
  1984  001AAA  360B               	rlcf	___aldiv@quotient^0,f,c
  1985  001AAC  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  1986  001AAE  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  1987  001AB0  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  1988  001AB2  5005               	movf	___aldiv@divisor^0,w,c
  1989  001AB4  5C01               	subwf	___aldiv@dividend^0,w,c
  1990  001AB6  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1991  001AB8  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  1992  001ABA  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1993  001ABC  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  1994  001ABE  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1995  001AC0  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  1996  001AC2  A0D8               	btfss	status,0,c
  1997  001AC4  EF66  F00D         	goto	u2241
  1998  001AC8  EF68  F00D         	goto	u2240
  1999  001ACC                     u2241:
  2000  001ACC  EF71  F00D         	goto	l2241
  2001  001AD0                     u2240:
  2002  001AD0  5005               	movf	___aldiv@divisor^0,w,c
  2003  001AD2  5E01               	subwf	___aldiv@dividend^0,f,c
  2004  001AD4  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2005  001AD6  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2006  001AD8  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2007  001ADA  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2008  001ADC  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2009  001ADE  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2010  001AE0  800B               	bsf	___aldiv@quotient^0,0,c
  2011  001AE2                     l2241:
  2012  001AE2  90D8               	bcf	status,0,c
  2013  001AE4  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2014  001AE6  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2015  001AE8  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2016  001AEA  3205               	rrcf	___aldiv@divisor^0,f,c
  2017  001AEC  2E09               	decfsz	___aldiv@counter^0,f,c
  2018  001AEE  EF54  F00D         	goto	l2233
  2019  001AF2                     l2245:
  2020  001AF2  500A               	movf	___aldiv@sign^0,w,c
  2021  001AF4  B4D8               	btfsc	status,2,c
  2022  001AF6  EF7F  F00D         	goto	u2251
  2023  001AFA  EF81  F00D         	goto	u2250
  2024  001AFE                     u2251:
  2025  001AFE  EF89  F00D         	goto	l2249
  2026  001B02                     u2250:
  2027  001B02  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2028  001B04  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2029  001B06  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2030  001B08  6C0B               	negf	___aldiv@quotient^0,c
  2031  001B0A  0E00               	movlw	0
  2032  001B0C  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2033  001B0E  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2034  001B10  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2035  001B12                     l2249:
  2036  001B12  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2037  001B16  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2038  001B1A  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2039  001B1E  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2040  001B22  0012               	return		;funcret
  2041  001B24                     __end_of___aldiv:
  2042                           	callstack 0
  2043                           
  2044 ;; *************** function _pegaUser *****************
  2045 ;; Defined at:
  2046 ;;		line 21 in file "newmain.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;		None
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      unsigned char 
  2053 ;; Registers used:
  2054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2060 ;;      Params:         0       0       0       0       0       0       0
  2061 ;;      Locals:         0       0       0       0       0       0       0
  2062 ;;      Temps:          0       0       0       0       0       0       0
  2063 ;;      Totals:         0       0       0       0       0       0       0
  2064 ;;Total ram usage:        0 bytes
  2065 ;; Hardware stack levels used: 1
  2066 ;; Hardware stack levels required when called: 5
  2067 ;; This function calls:
  2068 ;;		_kpDebounce
  2069 ;;		_kpReadKey
  2070 ;;		_lcdChar
  2071 ;;		_zeraKey
  2072 ;; This function is called by:
  2073 ;;		_main
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           	psect	text9
  2078  002040                     __ptext9:
  2079                           	callstack 0
  2080  002040                     _pegaUser:
  2081                           	callstack 25
  2082  002040                     
  2083                           ;newmain.c: 22:     static volatile char i = 0;;newmain.c: 23:     zeraKey();
  2084  002040  ECA5  F012         	call	_zeraKey	;wreg free
  2085  002044                     
  2086                           ;newmain.c: 24:     kpDebounce();
  2087  002044  EC71  F00C         	call	_kpDebounce	;wreg free
  2088  002048                     
  2089                           ;newmain.c: 25:     if (kpReadKey() != 0) {
  2090  002048  EC74  F00F         	call	_kpReadKey	;wreg free
  2091  00204C  0900               	iorlw	0
  2092  00204E  B4D8               	btfsc	status,2,c
  2093  002050  EF2C  F010         	goto	u2411
  2094  002054  EF2E  F010         	goto	u2410
  2095  002058                     u2411:
  2096  002058  EF4F  F010         	goto	l2393
  2097  00205C                     u2410:
  2098  00205C                     
  2099                           ;newmain.c: 26:         savU[i] = kpReadKey();
  2100  00205C  0E27               	movlw	low _savU
  2101  00205E  2439               	addwf	pegaUser@i^0,w,c	;volatile
  2102  002060  6ED9               	movwf	fsr2l,c
  2103  002062  6ADA               	clrf	fsr2h,c
  2104  002064  0E00               	movlw	high _savU
  2105  002066  22DA               	addwfc	fsr2h,f,c
  2106  002068  EC74  F00F         	call	_kpReadKey	;wreg free
  2107  00206C  6EDF               	movwf	indf2,c
  2108  00206E                     
  2109                           ;newmain.c: 27:         lcdChar(savU[i]);
  2110  00206E  0E27               	movlw	low _savU
  2111  002070  2439               	addwf	pegaUser@i^0,w,c	;volatile
  2112  002072  6ED9               	movwf	fsr2l,c
  2113  002074  6ADA               	clrf	fsr2h,c
  2114  002076  0E00               	movlw	high _savU
  2115  002078  22DA               	addwfc	fsr2h,f,c
  2116  00207A  50DF               	movf	indf2,w,c
  2117  00207C  EC6F  F012         	call	_lcdChar
  2118  002080                     
  2119                           ;newmain.c: 28:         i++;
  2120  002080  2A39               	incf	pegaUser@i^0,f,c	;volatile
  2121  002082                     
  2122                           ;newmain.c: 29:         if (i == 4) {
  2123  002082  0E04               	movlw	4
  2124  002084  1839               	xorwf	pegaUser@i^0,w,c	;volatile
  2125  002086  A4D8               	btfss	status,2,c
  2126  002088  EF48  F010         	goto	u2421
  2127  00208C  EF4A  F010         	goto	u2420
  2128  002090                     u2421:
  2129  002090  EF4F  F010         	goto	l2393
  2130  002094                     u2420:
  2131  002094                     
  2132                           ;newmain.c: 30:             i = 0;
  2133  002094  0E00               	movlw	0
  2134  002096  6E39               	movwf	pegaUser@i^0,c	;volatile
  2135  002098                     
  2136                           ;newmain.c: 31:             return 2;
  2137  002098  0E02               	movlw	2
  2138  00209A  EF50  F010         	goto	l47
  2139  00209E                     l2393:
  2140                           
  2141                           ;newmain.c: 35:     return 1;
  2142  00209E  0E01               	movlw	1
  2143  0020A0                     l47:
  2144  0020A0  0012               	return		;funcret
  2145  0020A2                     __end_of_pegaUser:
  2146                           	callstack 0
  2147                           
  2148 ;; *************** function _pegaSenha *****************
  2149 ;; Defined at:
  2150 ;;		line 38 in file "newmain.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;		None
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      unsigned char 
  2157 ;; Registers used:
  2158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2164 ;;      Params:         0       0       0       0       0       0       0
  2165 ;;      Locals:         0       0       0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0
  2167 ;;      Totals:         0       0       0       0       0       0       0
  2168 ;;Total ram usage:        0 bytes
  2169 ;; Hardware stack levels used: 1
  2170 ;; Hardware stack levels required when called: 5
  2171 ;; This function calls:
  2172 ;;		_kpDebounce
  2173 ;;		_kpReadKey
  2174 ;;		_lcdChar
  2175 ;;		_zeraKey
  2176 ;; This function is called by:
  2177 ;;		_main
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text10
  2182  0020A2                     __ptext10:
  2183                           	callstack 0
  2184  0020A2                     _pegaSenha:
  2185                           	callstack 25
  2186  0020A2                     
  2187                           ;newmain.c: 39:     static volatile char j = 0;;newmain.c: 40:     zeraKey();
  2188  0020A2  ECA5  F012         	call	_zeraKey	;wreg free
  2189  0020A6                     
  2190                           ;newmain.c: 41:     kpDebounce();
  2191  0020A6  EC71  F00C         	call	_kpDebounce	;wreg free
  2192  0020AA                     
  2193                           ;newmain.c: 42:     if (kpReadKey() != 0) {
  2194  0020AA  EC74  F00F         	call	_kpReadKey	;wreg free
  2195  0020AE  0900               	iorlw	0
  2196  0020B0  B4D8               	btfsc	status,2,c
  2197  0020B2  EF5D  F010         	goto	u2431
  2198  0020B6  EF5F  F010         	goto	u2430
  2199  0020BA                     u2431:
  2200  0020BA  EF80  F010         	goto	l2417
  2201  0020BE                     u2430:
  2202  0020BE                     
  2203                           ;newmain.c: 43:         savP[j] = kpReadKey();
  2204  0020BE  0E22               	movlw	low _savP
  2205  0020C0  2438               	addwf	pegaSenha@j^0,w,c	;volatile
  2206  0020C2  6ED9               	movwf	fsr2l,c
  2207  0020C4  6ADA               	clrf	fsr2h,c
  2208  0020C6  0E00               	movlw	high _savP
  2209  0020C8  22DA               	addwfc	fsr2h,f,c
  2210  0020CA  EC74  F00F         	call	_kpReadKey	;wreg free
  2211  0020CE  6EDF               	movwf	indf2,c
  2212  0020D0                     
  2213                           ;newmain.c: 44:         lcdChar(savP[j]);
  2214  0020D0  0E22               	movlw	low _savP
  2215  0020D2  2438               	addwf	pegaSenha@j^0,w,c	;volatile
  2216  0020D4  6ED9               	movwf	fsr2l,c
  2217  0020D6  6ADA               	clrf	fsr2h,c
  2218  0020D8  0E00               	movlw	high _savP
  2219  0020DA  22DA               	addwfc	fsr2h,f,c
  2220  0020DC  50DF               	movf	indf2,w,c
  2221  0020DE  EC6F  F012         	call	_lcdChar
  2222  0020E2                     
  2223                           ;newmain.c: 45:         j++;
  2224  0020E2  2A38               	incf	pegaSenha@j^0,f,c	;volatile
  2225  0020E4                     
  2226                           ;newmain.c: 46:         if (j == 4) {
  2227  0020E4  0E04               	movlw	4
  2228  0020E6  1838               	xorwf	pegaSenha@j^0,w,c	;volatile
  2229  0020E8  A4D8               	btfss	status,2,c
  2230  0020EA  EF79  F010         	goto	u2441
  2231  0020EE  EF7B  F010         	goto	u2440
  2232  0020F2                     u2441:
  2233  0020F2  EF80  F010         	goto	l2417
  2234  0020F6                     u2440:
  2235  0020F6                     
  2236                           ;newmain.c: 47:             j = 0;
  2237  0020F6  0E00               	movlw	0
  2238  0020F8  6E38               	movwf	pegaSenha@j^0,c	;volatile
  2239  0020FA                     
  2240                           ;newmain.c: 48:             return 3;
  2241  0020FA  0E03               	movlw	3
  2242  0020FC  EF81  F010         	goto	l54
  2243  002100                     l2417:
  2244                           
  2245                           ;newmain.c: 52:     return 2;
  2246  002100  0E02               	movlw	2
  2247  002102                     l54:
  2248  002102  0012               	return		;funcret
  2249  002104                     __end_of_pegaSenha:
  2250                           	callstack 0
  2251                           
  2252 ;; *************** function _zeraKey *****************
  2253 ;; Defined at:
  2254 ;;		line 8 in file "keypad.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;		None
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;		None
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		wreg, status,2
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2268 ;;      Params:         0       0       0       0       0       0       0
  2269 ;;      Locals:         0       0       0       0       0       0       0
  2270 ;;      Temps:          0       0       0       0       0       0       0
  2271 ;;      Totals:         0       0       0       0       0       0       0
  2272 ;;Total ram usage:        0 bytes
  2273 ;; Hardware stack levels used: 1
  2274 ;; This function calls:
  2275 ;;		Nothing
  2276 ;; This function is called by:
  2277 ;;		_pegaUser
  2278 ;;		_pegaSenha
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text11
  2283  00254A                     __ptext11:
  2284                           	callstack 0
  2285  00254A                     _zeraKey:
  2286                           	callstack 29
  2287  00254A                     
  2288                           ;keypad.c: 9:     keys = 0;
  2289  00254A  0E00               	movlw	0
  2290  00254C  6E31               	movwf	(_keys+1)^0,c
  2291  00254E  0E00               	movlw	0
  2292  002550  6E30               	movwf	_keys^0,c
  2293  002552  0012               	return		;funcret
  2294  002554                     __end_of_zeraKey:
  2295                           	callstack 0
  2296                           
  2297 ;; *************** function _kpReadKey *****************
  2298 ;; Defined at:
  2299 ;;		line 20 in file "keypad.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;		None
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;  i               2    3[COMRAM] int 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  1    wreg      unsigned char 
  2306 ;; Registers used:
  2307 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2313 ;;      Params:         0       0       0       0       0       0       0
  2314 ;;      Locals:         2       0       0       0       0       0       0
  2315 ;;      Temps:          3       0       0       0       0       0       0
  2316 ;;      Totals:         5       0       0       0       0       0       0
  2317 ;;Total ram usage:        5 bytes
  2318 ;; Hardware stack levels used: 1
  2319 ;; This function calls:
  2320 ;;		Nothing
  2321 ;; This function is called by:
  2322 ;;		_pegaUser
  2323 ;;		_pegaSenha
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text12
  2328  001EE8                     __ptext12:
  2329                           	callstack 0
  2330  001EE8                     _kpReadKey:
  2331                           	callstack 29
  2332  001EE8                     
  2333                           ;keypad.c: 21:  int i;;keypad.c: 22:  for(i=0;i<10;i++){
  2334  001EE8  0E00               	movlw	0
  2335  001EEA  6E05               	movwf	(kpReadKey@i+1)^0,c
  2336  001EEC  0E00               	movlw	0
  2337  001EEE  6E04               	movwf	kpReadKey@i^0,c
  2338  001EF0                     l1295:
  2339                           
  2340                           ;keypad.c: 23:   if (((keys) & (1<<(i)))){
  2341  001EF0  C004  F001         	movff	kpReadKey@i,??_kpReadKey
  2342  001EF4  0E01               	movlw	1
  2343  001EF6  6E02               	movwf	(??_kpReadKey+1)^0,c
  2344  001EF8  0E00               	movlw	0
  2345  001EFA  6E03               	movwf	(??_kpReadKey+2)^0,c
  2346  001EFC  2A01               	incf	??_kpReadKey^0,f,c
  2347  001EFE  EF84  F00F         	goto	u674
  2348  001F02                     u675:
  2349  001F02  90D8               	bcf	status,0,c
  2350  001F04  3602               	rlcf	(??_kpReadKey+1)^0,f,c
  2351  001F06  3603               	rlcf	(??_kpReadKey+2)^0,f,c
  2352  001F08                     u674:
  2353  001F08  2E01               	decfsz	??_kpReadKey^0,f,c
  2354  001F0A  EF81  F00F         	goto	u675
  2355  001F0E  5030               	movf	_keys^0,w,c
  2356  001F10  1602               	andwf	(??_kpReadKey+1)^0,f,c
  2357  001F12  5031               	movf	(_keys+1)^0,w,c
  2358  001F14  1603               	andwf	(??_kpReadKey+2)^0,f,c
  2359  001F16  5002               	movf	(??_kpReadKey+1)^0,w,c
  2360  001F18  1003               	iorwf	(??_kpReadKey+2)^0,w,c
  2361  001F1A  B4D8               	btfsc	status,2,c
  2362  001F1C  EF92  F00F         	goto	u681
  2363  001F20  EF94  F00F         	goto	u680
  2364  001F24                     u681:
  2365  001F24  EF9E  F00F         	goto	l1301
  2366  001F28                     u680:
  2367  001F28                     
  2368                           ;keypad.c: 24:    return charKey[i];
  2369  001F28  0E11               	movlw	low _charKey
  2370  001F2A  2404               	addwf	kpReadKey@i^0,w,c
  2371  001F2C  6EF6               	movwf	tblptrl,c
  2372  001F2E  0E06               	movlw	high _charKey
  2373  001F30  2005               	addwfc	(kpReadKey@i+1)^0,w,c
  2374  001F32  6EF7               	movwf	tblptrh,c
  2375  001F34                     	if	0	;There are less than 3 active tblptr bytes
  2376  001F34                     	endif
  2377  001F34  0008               	tblrd		*
  2378  001F36  50F5               	movf	tablat,w,c
  2379  001F38  EFAF  F00F         	goto	l214
  2380  001F3C                     l1301:
  2381                           
  2382                           ;keypad.c: 26:  }
  2383  001F3C  4A04               	infsnz	kpReadKey@i^0,f,c
  2384  001F3E  2A05               	incf	(kpReadKey@i+1)^0,f,c
  2385  001F40  BE05               	btfsc	(kpReadKey@i+1)^0,7,c
  2386  001F42  EFAC  F00F         	goto	u691
  2387  001F46  5005               	movf	(kpReadKey@i+1)^0,w,c
  2388  001F48  E109               	bnz	u690
  2389  001F4A  0E0A               	movlw	10
  2390  001F4C  5C04               	subwf	kpReadKey@i^0,w,c
  2391  001F4E  A0D8               	btfss	status,0,c
  2392  001F50  EFAC  F00F         	goto	u691
  2393  001F54  EFAE  F00F         	goto	u690
  2394  001F58                     u691:
  2395  001F58  EF78  F00F         	goto	l1295
  2396  001F5C                     u690:
  2397  001F5C                     
  2398                           ;keypad.c: 28:  return 0;
  2399  001F5C  0E00               	movlw	0
  2400  001F5E                     l214:
  2401  001F5E  0012               	return		;funcret
  2402  001F60                     __end_of_kpReadKey:
  2403                           	callstack 0
  2404                           
  2405 ;; *************** function _kpDebounce *****************
  2406 ;; Defined at:
  2407 ;;		line 30 in file "keypad.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;		None
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  i               2   12[COMRAM] int 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  1    wreg      void 
  2414 ;; Registers used:
  2415 ;;		wreg, status,2, status,0, cstack
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2421 ;;      Params:         0       0       0       0       0       0       0
  2422 ;;      Locals:         2       0       0       0       0       0       0
  2423 ;;      Temps:          3       0       0       0       0       0       0
  2424 ;;      Totals:         5       0       0       0       0       0       0
  2425 ;;Total ram usage:        5 bytes
  2426 ;; Hardware stack levels used: 1
  2427 ;; Hardware stack levels required when called: 3
  2428 ;; This function calls:
  2429 ;;		_digitalRead
  2430 ;;		_soWrite
  2431 ;; This function is called by:
  2432 ;;		_pegaUser
  2433 ;;		_pegaSenha
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text13
  2438  0018E2                     __ptext13:
  2439                           	callstack 0
  2440  0018E2                     _kpDebounce:
  2441                           	callstack 26
  2442  0018E2                     
  2443                           ;keypad.c: 31:     int i;;keypad.c: 32:     static unsigned char tempo;;keypad.c: 33:   
      +                            static unsigned int newRead;;keypad.c: 34:     static unsigned int oldRead;;keypad.c: 
      +                          35:     newRead = 0;
  2444  0018E2  0E00               	movlw	0
  2445  0018E4  6E2F               	movwf	(kpDebounce@newRead+1)^0,c
  2446  0018E6  0E00               	movlw	0
  2447  0018E8  6E2E               	movwf	kpDebounce@newRead^0,c
  2448                           
  2449                           ;keypad.c: 36:     for(i = 0; i<5; i++){
  2450  0018EA  0E00               	movlw	0
  2451  0018EC  6E0E               	movwf	(kpDebounce@i+1)^0,c
  2452  0018EE  0E00               	movlw	0
  2453  0018F0  6E0D               	movwf	kpDebounce@i^0,c
  2454  0018F2                     l2255:
  2455  0018F2  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  2456  0018F4  EF85  F00C         	goto	u2261
  2457  0018F8  500E               	movf	(kpDebounce@i+1)^0,w,c
  2458  0018FA  E109               	bnz	u2260
  2459  0018FC  0E05               	movlw	5
  2460  0018FE  5C0D               	subwf	kpDebounce@i^0,w,c
  2461  001900  A0D8               	btfss	status,0,c
  2462  001902  EF85  F00C         	goto	u2261
  2463  001906  EF87  F00C         	goto	u2260
  2464  00190A                     u2261:
  2465  00190A  EF89  F00C         	goto	l2259
  2466  00190E                     u2260:
  2467  00190E  EFEA  F00C         	goto	l2271
  2468  001912                     l2259:
  2469                           
  2470                           ;keypad.c: 38:       soWrite(1<<(i+3));
  2471  001912  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2472  001916  0E03               	movlw	3
  2473  001918  260A               	addwf	??_kpDebounce^0,f,c
  2474  00191A  0E01               	movlw	1
  2475  00191C  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2476  00191E  0E00               	movlw	0
  2477  001920  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2478  001922  2A0A               	incf	??_kpDebounce^0,f,c
  2479  001924  EF97  F00C         	goto	u2274
  2480  001928                     u2275:
  2481  001928  90D8               	bcf	status,0,c
  2482  00192A  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2483  00192C  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2484  00192E                     u2274:
  2485  00192E  2E0A               	decfsz	??_kpDebounce^0,f,c
  2486  001930  EF94  F00C         	goto	u2275
  2487  001934  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  2488  001938  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  2489  00193C  EC31  F011         	call	_soWrite	;wreg free
  2490                           
  2491                           ;keypad.c: 39:       if(digitalRead(PIN_B2)){
  2492  001940  0E00               	movlw	0
  2493  001942  6E02               	movwf	(digitalRead@pin+1)^0,c
  2494  001944  0E0A               	movlw	10
  2495  001946  6E01               	movwf	digitalRead@pin^0,c
  2496  001948  ECBC  F00B         	call	_digitalRead	;wreg free
  2497  00194C  5001               	movf	?_digitalRead^0,w,c
  2498  00194E  1002               	iorwf	(?_digitalRead+1)^0,w,c
  2499  001950  B4D8               	btfsc	status,2,c
  2500  001952  EFAD  F00C         	goto	u2281
  2501  001956  EFAF  F00C         	goto	u2280
  2502  00195A                     u2281:
  2503  00195A  EFC2  F00C         	goto	l2263
  2504  00195E                     u2280:
  2505  00195E                     
  2506                           ;keypad.c: 40:         ((newRead) |= (1<<(i)));
  2507  00195E  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2508  001962  0E01               	movlw	1
  2509  001964  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2510  001966  0E00               	movlw	0
  2511  001968  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2512  00196A  2A0A               	incf	??_kpDebounce^0,f,c
  2513  00196C  EFBB  F00C         	goto	u2294
  2514  001970                     u2295:
  2515  001970  90D8               	bcf	status,0,c
  2516  001972  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2517  001974  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2518  001976                     u2294:
  2519  001976  2E0A               	decfsz	??_kpDebounce^0,f,c
  2520  001978  EFB8  F00C         	goto	u2295
  2521  00197C  500B               	movf	(??_kpDebounce+1)^0,w,c
  2522  00197E  122E               	iorwf	kpDebounce@newRead^0,f,c
  2523  001980  500C               	movf	(??_kpDebounce+2)^0,w,c
  2524  001982  122F               	iorwf	(kpDebounce@newRead+1)^0,f,c
  2525  001984                     l2263:
  2526                           
  2527                           ;keypad.c: 42:       if(digitalRead(PIN_B1)){
  2528  001984  0E00               	movlw	0
  2529  001986  6E02               	movwf	(digitalRead@pin+1)^0,c
  2530  001988  0E09               	movlw	9
  2531  00198A  6E01               	movwf	digitalRead@pin^0,c
  2532  00198C  ECBC  F00B         	call	_digitalRead	;wreg free
  2533  001990  5001               	movf	?_digitalRead^0,w,c
  2534  001992  1002               	iorwf	(?_digitalRead+1)^0,w,c
  2535  001994  B4D8               	btfsc	status,2,c
  2536  001996  EFCF  F00C         	goto	u2301
  2537  00199A  EFD1  F00C         	goto	u2300
  2538  00199E                     u2301:
  2539  00199E  EFE6  F00C         	goto	l2267
  2540  0019A2                     u2300:
  2541  0019A2                     
  2542                           ;keypad.c: 43:         ((newRead) |= (1<<((i+5))));
  2543  0019A2  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2544  0019A6  0E05               	movlw	5
  2545  0019A8  260A               	addwf	??_kpDebounce^0,f,c
  2546  0019AA  0E01               	movlw	1
  2547  0019AC  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2548  0019AE  0E00               	movlw	0
  2549  0019B0  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2550  0019B2  2A0A               	incf	??_kpDebounce^0,f,c
  2551  0019B4  EFDF  F00C         	goto	u2314
  2552  0019B8                     u2315:
  2553  0019B8  90D8               	bcf	status,0,c
  2554  0019BA  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2555  0019BC  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2556  0019BE                     u2314:
  2557  0019BE  2E0A               	decfsz	??_kpDebounce^0,f,c
  2558  0019C0  EFDC  F00C         	goto	u2315
  2559  0019C4  500B               	movf	(??_kpDebounce+1)^0,w,c
  2560  0019C6  122E               	iorwf	kpDebounce@newRead^0,f,c
  2561  0019C8  500C               	movf	(??_kpDebounce+2)^0,w,c
  2562  0019CA  122F               	iorwf	(kpDebounce@newRead+1)^0,f,c
  2563  0019CC                     l2267:
  2564                           
  2565                           ;keypad.c: 45:     }
  2566  0019CC  4A0D               	infsnz	kpDebounce@i^0,f,c
  2567  0019CE  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  2568  0019D0  EF79  F00C         	goto	l2255
  2569  0019D4                     l2271:
  2570                           
  2571                           ;keypad.c: 46:     if (oldRead == newRead) {
  2572  0019D4  502E               	movf	kpDebounce@newRead^0,w,c
  2573  0019D6  182C               	xorwf	kpDebounce@oldRead^0,w,c
  2574  0019D8  E107               	bnz	u2321
  2575  0019DA  502F               	movf	(kpDebounce@newRead+1)^0,w,c
  2576  0019DC  182D               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  2577  0019DE  A4D8               	btfss	status,2,c
  2578  0019E0  EFF4  F00C         	goto	u2321
  2579  0019E4  EFF6  F00C         	goto	u2320
  2580  0019E8                     u2321:
  2581  0019E8  EFF9  F00C         	goto	l2275
  2582  0019EC                     u2320:
  2583  0019EC                     
  2584                           ;keypad.c: 47:         tempo--;
  2585  0019EC  0637               	decf	kpDebounce@tempo^0,f,c
  2586                           
  2587                           ;keypad.c: 48:     } else {
  2588  0019EE  EFFF  F00C         	goto	l228
  2589  0019F2                     l2275:
  2590                           
  2591                           ;keypad.c: 49:         tempo = 1;
  2592  0019F2  0E01               	movlw	1
  2593  0019F4  6E37               	movwf	kpDebounce@tempo^0,c
  2594  0019F6                     
  2595                           ;keypad.c: 50:         oldRead = newRead;
  2596  0019F6  C02E  F02C         	movff	kpDebounce@newRead,kpDebounce@oldRead
  2597  0019FA  C02F  F02D         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  2598  0019FE                     l228:
  2599                           
  2600                           ;keypad.c: 52:     if (tempo == 0) {
  2601  0019FE  5037               	movf	kpDebounce@tempo^0,w,c
  2602  001A00  A4D8               	btfss	status,2,c
  2603  001A02  EF05  F00D         	goto	u2331
  2604  001A06  EF07  F00D         	goto	u2330
  2605  001A0A                     u2331:
  2606  001A0A  EF0B  F00D         	goto	l230
  2607  001A0E                     u2330:
  2608  001A0E                     
  2609                           ;keypad.c: 53:         keys = oldRead;
  2610  001A0E  C02C  F030         	movff	kpDebounce@oldRead,_keys
  2611  001A12  C02D  F031         	movff	kpDebounce@oldRead+1,_keys+1
  2612  001A16                     l230:
  2613  001A16  0012               	return		;funcret
  2614  001A18                     __end_of_kpDebounce:
  2615                           	callstack 0
  2616                           
  2617 ;; *************** function _digitalRead *****************
  2618 ;; Defined at:
  2619 ;;		line 39 in file "io.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  pin             2    0[COMRAM] int 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  2    0[COMRAM] int 
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2633 ;;      Params:         2       0       0       0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0       0       0
  2635 ;;      Temps:          3       0       0       0       0       0       0
  2636 ;;      Totals:         5       0       0       0       0       0       0
  2637 ;;Total ram usage:        5 bytes
  2638 ;; Hardware stack levels used: 1
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_kpDebounce
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text14
  2647  001778                     __ptext14:
  2648                           	callstack 0
  2649  001778                     _digitalRead:
  2650                           	callstack 28
  2651  001778                     
  2652                           ;io.c: 40:     if(pin <8){
  2653  001778  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2654  00177A  EFCA  F00B         	goto	u1890
  2655  00177E  5002               	movf	(digitalRead@pin+1)^0,w,c
  2656  001780  E107               	bnz	u1891
  2657  001782  0E08               	movlw	8
  2658  001784  5C01               	subwf	digitalRead@pin^0,w,c
  2659  001786  B0D8               	btfsc	status,0,c
  2660  001788  EFC8  F00B         	goto	u1891
  2661  00178C  EFCA  F00B         	goto	u1890
  2662  001790                     u1891:
  2663  001790  EFDE  F00B         	goto	l2131
  2664  001794                     u1890:
  2665  001794                     
  2666                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  2667  001794  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2668  001798  0E01               	movlw	1
  2669  00179A  6E04               	movwf	(??_digitalRead+1)^0,c
  2670  00179C  2A03               	incf	??_digitalRead^0,f,c
  2671  00179E  EFD3  F00B         	goto	u1904
  2672  0017A2                     u1905:
  2673  0017A2  90D8               	bcf	status,0,c
  2674  0017A4  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2675  0017A6                     u1904:
  2676  0017A6  2E03               	decfsz	??_digitalRead^0,f,c
  2677  0017A8  EFD1  F00B         	goto	u1905
  2678  0017AC  5004               	movf	(??_digitalRead+1)^0,w,c
  2679  0017AE  1480               	andwf	128,w,c	;volatile
  2680  0017B0  6E05               	movwf	(??_digitalRead+2)^0,c
  2681  0017B2  5005               	movf	(??_digitalRead+2)^0,w,c
  2682  0017B4  6E01               	movwf	?_digitalRead^0,c
  2683  0017B6  6A02               	clrf	(?_digitalRead+1)^0,c
  2684  0017B8  EF70  F00C         	goto	l158
  2685  0017BC                     l2131:
  2686  0017BC  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2687  0017BE  EFEC  F00B         	goto	u1910
  2688  0017C2  5002               	movf	(digitalRead@pin+1)^0,w,c
  2689  0017C4  E107               	bnz	u1911
  2690  0017C6  0E10               	movlw	16
  2691  0017C8  5C01               	subwf	digitalRead@pin^0,w,c
  2692  0017CA  B0D8               	btfsc	status,0,c
  2693  0017CC  EFEA  F00B         	goto	u1911
  2694  0017D0  EFEC  F00B         	goto	u1910
  2695  0017D4                     u1911:
  2696  0017D4  EF02  F00C         	goto	l2139
  2697  0017D8                     u1910:
  2698  0017D8                     
  2699                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  2700  0017D8  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2701  0017DC  0EF8               	movlw	-8
  2702  0017DE  2603               	addwf	??_digitalRead^0,f,c
  2703  0017E0  0E01               	movlw	1
  2704  0017E2  6E04               	movwf	(??_digitalRead+1)^0,c
  2705  0017E4  2A03               	incf	??_digitalRead^0,f,c
  2706  0017E6  EFF7  F00B         	goto	u1924
  2707  0017EA                     u1925:
  2708  0017EA  90D8               	bcf	status,0,c
  2709  0017EC  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2710  0017EE                     u1924:
  2711  0017EE  2E03               	decfsz	??_digitalRead^0,f,c
  2712  0017F0  EFF5  F00B         	goto	u1925
  2713  0017F4  5004               	movf	(??_digitalRead+1)^0,w,c
  2714  0017F6  1481               	andwf	129,w,c	;volatile
  2715  0017F8  6E05               	movwf	(??_digitalRead+2)^0,c
  2716  0017FA  5005               	movf	(??_digitalRead+2)^0,w,c
  2717  0017FC  6E01               	movwf	?_digitalRead^0,c
  2718  0017FE  6A02               	clrf	(?_digitalRead+1)^0,c
  2719  001800  EF70  F00C         	goto	l158
  2720  001804                     l2139:
  2721  001804  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2722  001806  EF10  F00C         	goto	u1930
  2723  00180A  5002               	movf	(digitalRead@pin+1)^0,w,c
  2724  00180C  E107               	bnz	u1931
  2725  00180E  0E18               	movlw	24
  2726  001810  5C01               	subwf	digitalRead@pin^0,w,c
  2727  001812  B0D8               	btfsc	status,0,c
  2728  001814  EF0E  F00C         	goto	u1931
  2729  001818  EF10  F00C         	goto	u1930
  2730  00181C                     u1931:
  2731  00181C  EF26  F00C         	goto	l2147
  2732  001820                     u1930:
  2733  001820                     
  2734                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  2735  001820  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2736  001824  0EF0               	movlw	-16
  2737  001826  2603               	addwf	??_digitalRead^0,f,c
  2738  001828  0E01               	movlw	1
  2739  00182A  6E04               	movwf	(??_digitalRead+1)^0,c
  2740  00182C  2A03               	incf	??_digitalRead^0,f,c
  2741  00182E  EF1B  F00C         	goto	u1944
  2742  001832                     u1945:
  2743  001832  90D8               	bcf	status,0,c
  2744  001834  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2745  001836                     u1944:
  2746  001836  2E03               	decfsz	??_digitalRead^0,f,c
  2747  001838  EF19  F00C         	goto	u1945
  2748  00183C  5004               	movf	(??_digitalRead+1)^0,w,c
  2749  00183E  1482               	andwf	130,w,c	;volatile
  2750  001840  6E05               	movwf	(??_digitalRead+2)^0,c
  2751  001842  5005               	movf	(??_digitalRead+2)^0,w,c
  2752  001844  6E01               	movwf	?_digitalRead^0,c
  2753  001846  6A02               	clrf	(?_digitalRead+1)^0,c
  2754  001848  EF70  F00C         	goto	l158
  2755  00184C                     l2147:
  2756  00184C  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2757  00184E  EF34  F00C         	goto	u1950
  2758  001852  5002               	movf	(digitalRead@pin+1)^0,w,c
  2759  001854  E107               	bnz	u1951
  2760  001856  0E20               	movlw	32
  2761  001858  5C01               	subwf	digitalRead@pin^0,w,c
  2762  00185A  B0D8               	btfsc	status,0,c
  2763  00185C  EF32  F00C         	goto	u1951
  2764  001860  EF34  F00C         	goto	u1950
  2765  001864                     u1951:
  2766  001864  EF4A  F00C         	goto	l2155
  2767  001868                     u1950:
  2768  001868                     
  2769                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  2770  001868  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2771  00186C  0EE8               	movlw	-24
  2772  00186E  2603               	addwf	??_digitalRead^0,f,c
  2773  001870  0E01               	movlw	1
  2774  001872  6E04               	movwf	(??_digitalRead+1)^0,c
  2775  001874  2A03               	incf	??_digitalRead^0,f,c
  2776  001876  EF3F  F00C         	goto	u1964
  2777  00187A                     u1965:
  2778  00187A  90D8               	bcf	status,0,c
  2779  00187C  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2780  00187E                     u1964:
  2781  00187E  2E03               	decfsz	??_digitalRead^0,f,c
  2782  001880  EF3D  F00C         	goto	u1965
  2783  001884  5004               	movf	(??_digitalRead+1)^0,w,c
  2784  001886  1483               	andwf	131,w,c	;volatile
  2785  001888  6E05               	movwf	(??_digitalRead+2)^0,c
  2786  00188A  5005               	movf	(??_digitalRead+2)^0,w,c
  2787  00188C  6E01               	movwf	?_digitalRead^0,c
  2788  00188E  6A02               	clrf	(?_digitalRead+1)^0,c
  2789  001890  EF70  F00C         	goto	l158
  2790  001894                     l2155:
  2791  001894  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2792  001896  EF58  F00C         	goto	u1970
  2793  00189A  5002               	movf	(digitalRead@pin+1)^0,w,c
  2794  00189C  E107               	bnz	u1971
  2795  00189E  0E28               	movlw	40
  2796  0018A0  5C01               	subwf	digitalRead@pin^0,w,c
  2797  0018A2  B0D8               	btfsc	status,0,c
  2798  0018A4  EF56  F00C         	goto	u1971
  2799  0018A8  EF58  F00C         	goto	u1970
  2800  0018AC                     u1971:
  2801  0018AC  EF6E  F00C         	goto	l163
  2802  0018B0                     u1970:
  2803  0018B0                     
  2804                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  2805  0018B0  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2806  0018B4  0EE0               	movlw	-32
  2807  0018B6  2603               	addwf	??_digitalRead^0,f,c
  2808  0018B8  0E01               	movlw	1
  2809  0018BA  6E04               	movwf	(??_digitalRead+1)^0,c
  2810  0018BC  2A03               	incf	??_digitalRead^0,f,c
  2811  0018BE  EF63  F00C         	goto	u1984
  2812  0018C2                     u1985:
  2813  0018C2  90D8               	bcf	status,0,c
  2814  0018C4  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2815  0018C6                     u1984:
  2816  0018C6  2E03               	decfsz	??_digitalRead^0,f,c
  2817  0018C8  EF61  F00C         	goto	u1985
  2818  0018CC  5004               	movf	(??_digitalRead+1)^0,w,c
  2819  0018CE  1484               	andwf	132,w,c	;volatile
  2820  0018D0  6E05               	movwf	(??_digitalRead+2)^0,c
  2821  0018D2  5005               	movf	(??_digitalRead+2)^0,w,c
  2822  0018D4  6E01               	movwf	?_digitalRead^0,c
  2823  0018D6  6A02               	clrf	(?_digitalRead+1)^0,c
  2824  0018D8  EF70  F00C         	goto	l158
  2825  0018DC                     l163:
  2826  0018DC                     
  2827                           ;io.c: 51:     return -1;
  2828  0018DC  6801               	setf	?_digitalRead^0,c
  2829  0018DE  6802               	setf	(?_digitalRead+1)^0,c
  2830  0018E0                     l158:
  2831  0018E0  0012               	return		;funcret
  2832  0018E2                     __end_of_digitalRead:
  2833                           	callstack 0
  2834                           
  2835 ;; *************** function _limpaSSD *****************
  2836 ;; Defined at:
  2837 ;;		line 70 in file "newmain.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  k               1   16[COMRAM] volatile unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2851 ;;      Params:         0       0       0       0       0       0       0
  2852 ;;      Locals:         1       0       0       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0
  2854 ;;      Totals:         1       0       0       0       0       0       0
  2855 ;;Total ram usage:        1 bytes
  2856 ;; Hardware stack levels used: 1
  2857 ;; Hardware stack levels required when called: 4
  2858 ;; This function calls:
  2859 ;;		_ssdDigit
  2860 ;;		_ssdUpdate
  2861 ;; This function is called by:
  2862 ;;		_main
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           	psect	text15
  2867  0022B0                     __ptext15:
  2868                           	callstack 0
  2869  0022B0                     _limpaSSD:
  2870                           	callstack 26
  2871  0022B0                     
  2872                           ;newmain.c: 71:     ssdDigit(0, 0);
  2873  0022B0  0E00               	movlw	0
  2874  0022B2  6E0F               	movwf	ssdDigit@pos^0,c
  2875  0022B4  0E00               	movlw	0
  2876  0022B6  ECAF  F010         	call	_ssdDigit
  2877                           
  2878                           ;newmain.c: 72:     ssdDigit(0, 1);
  2879  0022BA  0E01               	movlw	1
  2880  0022BC  6E0F               	movwf	ssdDigit@pos^0,c
  2881  0022BE  0E00               	movlw	0
  2882  0022C0  ECAF  F010         	call	_ssdDigit
  2883                           
  2884                           ;newmain.c: 73:     ssdDigit(0, 2);
  2885  0022C4  0E02               	movlw	2
  2886  0022C6  6E0F               	movwf	ssdDigit@pos^0,c
  2887  0022C8  0E00               	movlw	0
  2888  0022CA  ECAF  F010         	call	_ssdDigit
  2889                           
  2890                           ;newmain.c: 74:     ssdDigit(0, 3);
  2891  0022CE  0E03               	movlw	3
  2892  0022D0  6E0F               	movwf	ssdDigit@pos^0,c
  2893  0022D2  0E00               	movlw	0
  2894  0022D4  ECAF  F010         	call	_ssdDigit
  2895  0022D8                     
  2896                           ;newmain.c: 75:     for (volatile char k = 0; k < 5; k++) {
  2897  0022D8  0E00               	movlw	0
  2898  0022DA  6E11               	movwf	limpaSSD@k^0,c	;volatile
  2899  0022DC                     l2425:
  2900  0022DC  0E04               	movlw	4
  2901  0022DE  6411               	cpfsgt	limpaSSD@k^0,c	;volatile
  2902  0022E0  EF74  F011         	goto	u2451
  2903  0022E4  EF76  F011         	goto	u2450
  2904  0022E8                     u2451:
  2905  0022E8  EF78  F011         	goto	l2429
  2906  0022EC                     u2450:
  2907  0022EC  EF7D  F011         	goto	l67
  2908  0022F0                     l2429:
  2909                           
  2910                           ;newmain.c: 76:         ssdUpdate();
  2911  0022F0  EC06  F00B         	call	_ssdUpdate	;wreg free
  2912  0022F4                     
  2913                           ;newmain.c: 77:     }
  2914  0022F4  2A11               	incf	limpaSSD@k^0,f,c	;volatile
  2915  0022F6  EF6E  F011         	goto	l2425
  2916  0022FA                     l67:
  2917  0022FA  0012               	return		;funcret
  2918  0022FC                     __end_of_limpaSSD:
  2919                           	callstack 0
  2920                           
  2921 ;; *************** function _ssdUpdate *****************
  2922 ;; Defined at:
  2923 ;;		line 50 in file "ssd.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;		None
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;		None
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2937 ;;      Params:         0       0       0       0       0       0       0
  2938 ;;      Locals:         0       0       0       0       0       0       0
  2939 ;;      Temps:          2       0       0       0       0       0       0
  2940 ;;      Totals:         2       0       0       0       0       0       0
  2941 ;;Total ram usage:        2 bytes
  2942 ;; Hardware stack levels used: 1
  2943 ;; Hardware stack levels required when called: 3
  2944 ;; This function calls:
  2945 ;;		_digitalWrite
  2946 ;;		_soWrite
  2947 ;; This function is called by:
  2948 ;;		_limpaSSD
  2949 ;;		_main
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text16
  2954  00160C                     __ptext16:
  2955                           	callstack 0
  2956  00160C                     _ssdUpdate:
  2957                           	callstack 27
  2958  00160C                     
  2959                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  2960  00160C  0E00               	movlw	0
  2961  00160E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2962  001610  0E18               	movlw	24
  2963  001612  6E01               	movwf	digitalWrite@pin^0,c
  2964  001614  0E00               	movlw	0
  2965  001616  6E04               	movwf	(digitalWrite@value+1)^0,c
  2966  001618  0E00               	movlw	0
  2967  00161A  6E03               	movwf	digitalWrite@value^0,c
  2968  00161C  ECB8  F008         	call	_digitalWrite	;wreg free
  2969                           
  2970                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  2971  001620  0E00               	movlw	0
  2972  001622  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2973  001624  0E19               	movlw	25
  2974  001626  6E01               	movwf	digitalWrite@pin^0,c
  2975  001628  0E00               	movlw	0
  2976  00162A  6E04               	movwf	(digitalWrite@value+1)^0,c
  2977  00162C  0E00               	movlw	0
  2978  00162E  6E03               	movwf	digitalWrite@value^0,c
  2979  001630  ECB8  F008         	call	_digitalWrite	;wreg free
  2980                           
  2981                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  2982  001634  0E00               	movlw	0
  2983  001636  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2984  001638  0E1A               	movlw	26
  2985  00163A  6E01               	movwf	digitalWrite@pin^0,c
  2986  00163C  0E00               	movlw	0
  2987  00163E  6E04               	movwf	(digitalWrite@value+1)^0,c
  2988  001640  0E00               	movlw	0
  2989  001642  6E03               	movwf	digitalWrite@value^0,c
  2990  001644  ECB8  F008         	call	_digitalWrite	;wreg free
  2991                           
  2992                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  2993  001648  0E00               	movlw	0
  2994  00164A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2995  00164C  0E1B               	movlw	27
  2996  00164E  6E01               	movwf	digitalWrite@pin^0,c
  2997  001650  0E00               	movlw	0
  2998  001652  6E04               	movwf	(digitalWrite@value+1)^0,c
  2999  001654  0E00               	movlw	0
  3000  001656  6E03               	movwf	digitalWrite@value^0,c
  3001  001658  ECB8  F008         	call	_digitalWrite	;wreg free
  3002                           
  3003                           ;ssd.c: 60:     soWrite(0x00);
  3004  00165C  0E00               	movlw	0
  3005  00165E  6E08               	movwf	(soWrite@value+1)^0,c
  3006  001660  0E00               	movlw	0
  3007  001662  6E07               	movwf	soWrite@value^0,c
  3008  001664  EC31  F011         	call	_soWrite	;wreg free
  3009                           
  3010                           ;ssd.c: 62:     switch (display)
  3011  001668  EF9E  F00B         	goto	l2331
  3012  00166C                     l2303:
  3013                           
  3014                           ;ssd.c: 65:             soWrite(valor[v0]);
  3015  00166C  0E01               	movlw	low _valor
  3016  00166E  2435               	addwf	_v0^0,w,c
  3017  001670  6EF6               	movwf	tblptrl,c
  3018  001672  6AF7               	clrf	tblptrh,c
  3019  001674  0E06               	movlw	high _valor
  3020  001676  22F7               	addwfc	tblptrh,f,c
  3021  001678                     	if	0	;There are less than 3 active tblptr bytes
  3022  001678                     	endif
  3023  001678  0008               	tblrd		*
  3024  00167A  50F5               	movf	tablat,w,c
  3025  00167C  6E07               	movwf	soWrite@value^0,c
  3026  00167E  6A08               	clrf	(soWrite@value+1)^0,c
  3027  001680  EC31  F011         	call	_soWrite	;wreg free
  3028  001684                     
  3029                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  3030  001684  0E00               	movlw	0
  3031  001686  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3032  001688  0E18               	movlw	24
  3033  00168A  6E01               	movwf	digitalWrite@pin^0,c
  3034  00168C  0E00               	movlw	0
  3035  00168E  6E04               	movwf	(digitalWrite@value+1)^0,c
  3036  001690  0E01               	movlw	1
  3037  001692  6E03               	movwf	digitalWrite@value^0,c
  3038  001694  ECB8  F008         	call	_digitalWrite	;wreg free
  3039  001698                     
  3040                           ;ssd.c: 67:             display = 1;
  3041  001698  0E01               	movlw	1
  3042  00169A  6E36               	movwf	_display^0,c
  3043                           
  3044                           ;ssd.c: 68:             break;
  3045  00169C  EFBB  F00B         	goto	l359
  3046  0016A0                     l2309:
  3047                           
  3048                           ;ssd.c: 71:             soWrite(valor[v1]);
  3049  0016A0  0E01               	movlw	low _valor
  3050  0016A2  2434               	addwf	_v1^0,w,c
  3051  0016A4  6EF6               	movwf	tblptrl,c
  3052  0016A6  6AF7               	clrf	tblptrh,c
  3053  0016A8  0E06               	movlw	high _valor
  3054  0016AA  22F7               	addwfc	tblptrh,f,c
  3055  0016AC                     	if	0	;There are less than 3 active tblptr bytes
  3056  0016AC                     	endif
  3057  0016AC  0008               	tblrd		*
  3058  0016AE  50F5               	movf	tablat,w,c
  3059  0016B0  6E07               	movwf	soWrite@value^0,c
  3060  0016B2  6A08               	clrf	(soWrite@value+1)^0,c
  3061  0016B4  EC31  F011         	call	_soWrite	;wreg free
  3062  0016B8                     
  3063                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  3064  0016B8  0E00               	movlw	0
  3065  0016BA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3066  0016BC  0E19               	movlw	25
  3067  0016BE  6E01               	movwf	digitalWrite@pin^0,c
  3068  0016C0  0E00               	movlw	0
  3069  0016C2  6E04               	movwf	(digitalWrite@value+1)^0,c
  3070  0016C4  0E01               	movlw	1
  3071  0016C6  6E03               	movwf	digitalWrite@value^0,c
  3072  0016C8  ECB8  F008         	call	_digitalWrite	;wreg free
  3073  0016CC                     
  3074                           ;ssd.c: 73:             display = 2;
  3075  0016CC  0E02               	movlw	2
  3076  0016CE  6E36               	movwf	_display^0,c
  3077                           
  3078                           ;ssd.c: 74:             break;
  3079  0016D0  EFBB  F00B         	goto	l359
  3080  0016D4                     l2315:
  3081                           
  3082                           ;ssd.c: 77:             soWrite(valor[v2]);
  3083  0016D4  0E01               	movlw	low _valor
  3084  0016D6  2433               	addwf	_v2^0,w,c
  3085  0016D8  6EF6               	movwf	tblptrl,c
  3086  0016DA  6AF7               	clrf	tblptrh,c
  3087  0016DC  0E06               	movlw	high _valor
  3088  0016DE  22F7               	addwfc	tblptrh,f,c
  3089  0016E0                     	if	0	;There are less than 3 active tblptr bytes
  3090  0016E0                     	endif
  3091  0016E0  0008               	tblrd		*
  3092  0016E2  50F5               	movf	tablat,w,c
  3093  0016E4  6E07               	movwf	soWrite@value^0,c
  3094  0016E6  6A08               	clrf	(soWrite@value+1)^0,c
  3095  0016E8  EC31  F011         	call	_soWrite	;wreg free
  3096  0016EC                     
  3097                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  3098  0016EC  0E00               	movlw	0
  3099  0016EE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3100  0016F0  0E1A               	movlw	26
  3101  0016F2  6E01               	movwf	digitalWrite@pin^0,c
  3102  0016F4  0E00               	movlw	0
  3103  0016F6  6E04               	movwf	(digitalWrite@value+1)^0,c
  3104  0016F8  0E01               	movlw	1
  3105  0016FA  6E03               	movwf	digitalWrite@value^0,c
  3106  0016FC  ECB8  F008         	call	_digitalWrite	;wreg free
  3107  001700                     
  3108                           ;ssd.c: 79:             display = 3;
  3109  001700  0E03               	movlw	3
  3110  001702  6E36               	movwf	_display^0,c
  3111                           
  3112                           ;ssd.c: 80:             break;
  3113  001704  EFBB  F00B         	goto	l359
  3114  001708                     l2321:
  3115                           
  3116                           ;ssd.c: 83:             soWrite(valor[v3]);
  3117  001708  0E01               	movlw	low _valor
  3118  00170A  2432               	addwf	_v3^0,w,c
  3119  00170C  6EF6               	movwf	tblptrl,c
  3120  00170E  6AF7               	clrf	tblptrh,c
  3121  001710  0E06               	movlw	high _valor
  3122  001712  22F7               	addwfc	tblptrh,f,c
  3123  001714                     	if	0	;There are less than 3 active tblptr bytes
  3124  001714                     	endif
  3125  001714  0008               	tblrd		*
  3126  001716  50F5               	movf	tablat,w,c
  3127  001718  6E07               	movwf	soWrite@value^0,c
  3128  00171A  6A08               	clrf	(soWrite@value+1)^0,c
  3129  00171C  EC31  F011         	call	_soWrite	;wreg free
  3130  001720                     
  3131                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  3132  001720  0E00               	movlw	0
  3133  001722  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3134  001724  0E1B               	movlw	27
  3135  001726  6E01               	movwf	digitalWrite@pin^0,c
  3136  001728  0E00               	movlw	0
  3137  00172A  6E04               	movwf	(digitalWrite@value+1)^0,c
  3138  00172C  0E01               	movlw	1
  3139  00172E  6E03               	movwf	digitalWrite@value^0,c
  3140  001730  ECB8  F008         	call	_digitalWrite	;wreg free
  3141  001734                     l2325:
  3142                           
  3143                           ;ssd.c: 85:             display = 0;
  3144  001734  0E00               	movlw	0
  3145  001736  6E36               	movwf	_display^0,c
  3146                           
  3147                           ;ssd.c: 86:             break;
  3148  001738  EFBB  F00B         	goto	l359
  3149  00173C                     l2331:
  3150  00173C  5036               	movf	_display^0,w,c
  3151  00173E  6E0A               	movwf	??_ssdUpdate^0,c
  3152  001740  6A0B               	clrf	(??_ssdUpdate+1)^0,c
  3153                           
  3154                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3155                           ; Switch size 1, requested type "simple"
  3156                           ; Number of cases is 1, Range of values is 0 to 0
  3157                           ; switch strategies available:
  3158                           ; Name         Instructions Cycles
  3159                           ; simple_byte            4     3 (average)
  3160                           ;	Chosen strategy is simple_byte
  3161  001742  500B               	movf	(??_ssdUpdate+1)^0,w,c
  3162  001744  0A00               	xorlw	0	; case 0
  3163  001746  B4D8               	btfsc	status,2,c
  3164  001748  EFA8  F00B         	goto	l2979
  3165  00174C  EF9A  F00B         	goto	l2325
  3166  001750                     l2979:
  3167                           
  3168                           ; Switch size 1, requested type "simple"
  3169                           ; Number of cases is 4, Range of values is 0 to 3
  3170                           ; switch strategies available:
  3171                           ; Name         Instructions Cycles
  3172                           ; simple_byte           13     7 (average)
  3173                           ;	Chosen strategy is simple_byte
  3174  001750  500A               	movf	??_ssdUpdate^0,w,c
  3175  001752  0A00               	xorlw	0	; case 0
  3176  001754  B4D8               	btfsc	status,2,c
  3177  001756  EF36  F00B         	goto	l2303
  3178  00175A  0A01               	xorlw	1	; case 1
  3179  00175C  B4D8               	btfsc	status,2,c
  3180  00175E  EF50  F00B         	goto	l2309
  3181  001762  0A03               	xorlw	3	; case 2
  3182  001764  B4D8               	btfsc	status,2,c
  3183  001766  EF6A  F00B         	goto	l2315
  3184  00176A  0A01               	xorlw	1	; case 3
  3185  00176C  B4D8               	btfsc	status,2,c
  3186  00176E  EF84  F00B         	goto	l2321
  3187  001772  EF9A  F00B         	goto	l2325
  3188  001776                     l359:
  3189  001776  0012               	return		;funcret
  3190  001778                     __end_of_ssdUpdate:
  3191                           	callstack 0
  3192                           
  3193 ;; *************** function _ssdDigit *****************
  3194 ;; Defined at:
  3195 ;;		line 34 in file "ssd.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  val             1    wreg     unsigned char 
  3198 ;;  pos             1   14[COMRAM] unsigned char 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  val             1   15[COMRAM] unsigned char 
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      void 
  3203 ;; Registers used:
  3204 ;;		wreg, status,2, status,0
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3210 ;;      Params:         1       0       0       0       0       0       0
  3211 ;;      Locals:         1       0       0       0       0       0       0
  3212 ;;      Temps:          0       0       0       0       0       0       0
  3213 ;;      Totals:         2       0       0       0       0       0       0
  3214 ;;Total ram usage:        2 bytes
  3215 ;; Hardware stack levels used: 1
  3216 ;; This function calls:
  3217 ;;		Nothing
  3218 ;; This function is called by:
  3219 ;;		_limpaSSD
  3220 ;;		_main
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           	psect	text17
  3225  00215E                     __ptext17:
  3226                           	callstack 0
  3227  00215E                     _ssdDigit:
  3228                           	callstack 30
  3229                           
  3230                           ;incstack = 0
  3231                           ;ssdDigit@val stored from wreg
  3232  00215E  6E10               	movwf	ssdDigit@val^0,c
  3233  002160                     
  3234                           ;ssd.c: 35:     if (pos == 0) {
  3235  002160  500F               	movf	ssdDigit@pos^0,w,c
  3236  002162  A4D8               	btfss	status,2,c
  3237  002164  EFB6  F010         	goto	u2341
  3238  002168  EFB8  F010         	goto	u2340
  3239  00216C                     u2341:
  3240  00216C  EFBA  F010         	goto	l2289
  3241  002170                     u2340:
  3242  002170                     
  3243                           ;ssd.c: 36:         v0 = val;
  3244  002170  C010  F035         	movff	ssdDigit@val,_v0
  3245  002174                     l2289:
  3246                           
  3247                           ;ssd.c: 38:     if (pos == 1) {
  3248  002174  040F               	decf	ssdDigit@pos^0,w,c
  3249  002176  A4D8               	btfss	status,2,c
  3250  002178  EFC0  F010         	goto	u2351
  3251  00217C  EFC2  F010         	goto	u2350
  3252  002180                     u2351:
  3253  002180  EFC4  F010         	goto	l2293
  3254  002184                     u2350:
  3255  002184                     
  3256                           ;ssd.c: 39:         v1 = val;
  3257  002184  C010  F034         	movff	ssdDigit@val,_v1
  3258  002188                     l2293:
  3259                           
  3260                           ;ssd.c: 41:     if (pos == 2) {
  3261  002188  0E02               	movlw	2
  3262  00218A  180F               	xorwf	ssdDigit@pos^0,w,c
  3263  00218C  A4D8               	btfss	status,2,c
  3264  00218E  EFCB  F010         	goto	u2361
  3265  002192  EFCD  F010         	goto	u2360
  3266  002196                     u2361:
  3267  002196  EFCF  F010         	goto	l2297
  3268  00219A                     u2360:
  3269  00219A                     
  3270                           ;ssd.c: 42:         v2 = val;
  3271  00219A  C010  F033         	movff	ssdDigit@val,_v2
  3272  00219E                     l2297:
  3273                           
  3274                           ;ssd.c: 44:     if (pos == 3) {
  3275  00219E  0E03               	movlw	3
  3276  0021A0  180F               	xorwf	ssdDigit@pos^0,w,c
  3277  0021A2  A4D8               	btfss	status,2,c
  3278  0021A4  EFD6  F010         	goto	u2371
  3279  0021A8  EFD8  F010         	goto	u2370
  3280  0021AC                     u2371:
  3281  0021AC  EFDA  F010         	goto	l349
  3282  0021B0                     u2370:
  3283  0021B0                     
  3284                           ;ssd.c: 45:         v3 = val;
  3285  0021B0  C010  F032         	movff	ssdDigit@val,_v3
  3286  0021B4                     l349:
  3287  0021B4  0012               	return		;funcret
  3288  0021B6                     __end_of_ssdDigit:
  3289                           	callstack 0
  3290                           
  3291 ;; *************** function _lcdString *****************
  3292 ;; Defined at:
  3293 ;;		line 57 in file "lcd.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  msg             2   14[COMRAM] PTR unsigned char 
  3296 ;;		 -> STR_5(13), STR_4(11), STR_3(8), STR_2(8), 
  3297 ;;		 -> STR_1(7), 
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;  i               2   18[COMRAM] int 
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3309 ;;      Params:         2       0       0       0       0       0       0
  3310 ;;      Locals:         2       0       0       0       0       0       0
  3311 ;;      Temps:          2       0       0       0       0       0       0
  3312 ;;      Totals:         6       0       0       0       0       0       0
  3313 ;;Total ram usage:        6 bytes
  3314 ;; Hardware stack levels used: 1
  3315 ;; Hardware stack levels required when called: 5
  3316 ;; This function calls:
  3317 ;;		_lcdChar
  3318 ;; This function is called by:
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text18
  3324  00220C                     __ptext18:
  3325                           	callstack 0
  3326  00220C                     _lcdString:
  3327                           	callstack 25
  3328  00220C                     
  3329                           ;lcd.c: 58:  int i = 0;
  3330  00220C  0E00               	movlw	0
  3331  00220E  6E14               	movwf	(lcdString@i+1)^0,c
  3332  002210  0E00               	movlw	0
  3333  002212  6E13               	movwf	lcdString@i^0,c
  3334                           
  3335                           ;lcd.c: 59:  while (msg[i] != 0) {
  3336  002214  EF1C  F011         	goto	l2481
  3337  002218                     l2477:
  3338                           
  3339                           ;lcd.c: 60:   lcdChar(msg[i]);
  3340  002218  5013               	movf	lcdString@i^0,w,c
  3341  00221A  240F               	addwf	lcdString@msg^0,w,c
  3342  00221C  6E11               	movwf	??_lcdString^0,c
  3343  00221E  5014               	movf	(lcdString@i+1)^0,w,c
  3344  002220  2010               	addwfc	(lcdString@msg+1)^0,w,c
  3345  002222  6E12               	movwf	(??_lcdString+1)^0,c
  3346  002224  C011  FFF6         	movff	??_lcdString,tblptrl
  3347  002228  C012  FFF7         	movff	??_lcdString+1,tblptrh
  3348  00222C                     	if	0	;tblptru may be non-zero
  3349  00222C                     	endif
  3350  00222C                     	if	0	;tblptru may be non-zero
  3351  00222C                     	endif
  3352  00222C  0008               	tblrd		*
  3353  00222E  50F5               	movf	tablat,w,c
  3354  002230  EC6F  F012         	call	_lcdChar
  3355  002234                     
  3356                           ;lcd.c: 61:   i++;
  3357  002234  4A13               	infsnz	lcdString@i^0,f,c
  3358  002236  2A14               	incf	(lcdString@i+1)^0,f,c
  3359  002238                     l2481:
  3360                           
  3361                           ;lcd.c: 59:  while (msg[i] != 0) {
  3362  002238  5013               	movf	lcdString@i^0,w,c
  3363  00223A  240F               	addwf	lcdString@msg^0,w,c
  3364  00223C  6E11               	movwf	??_lcdString^0,c
  3365  00223E  5014               	movf	(lcdString@i+1)^0,w,c
  3366  002240  2010               	addwfc	(lcdString@msg+1)^0,w,c
  3367  002242  6E12               	movwf	(??_lcdString+1)^0,c
  3368  002244  C011  FFF6         	movff	??_lcdString,tblptrl
  3369  002248  C012  FFF7         	movff	??_lcdString+1,tblptrh
  3370  00224C                     	if	0	;tblptru may be non-zero
  3371  00224C                     	endif
  3372  00224C                     	if	0	;tblptru may be non-zero
  3373  00224C                     	endif
  3374  00224C  0008               	tblrd		*
  3375  00224E  50F5               	movf	tablat,w,c
  3376  002250  0900               	iorlw	0
  3377  002252  A4D8               	btfss	status,2,c
  3378  002254  EF2E  F011         	goto	u2481
  3379  002258  EF30  F011         	goto	u2480
  3380  00225C                     u2481:
  3381  00225C  EF0C  F011         	goto	l2477
  3382  002260                     u2480:
  3383  002260  0012               	return		;funcret
  3384  002262                     __end_of_lcdString:
  3385                           	callstack 0
  3386                           
  3387 ;; *************** function _lcdChar *****************
  3388 ;; Defined at:
  3389 ;;		line 52 in file "lcd.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  value           1    wreg     unsigned char 
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;  value           1   13[COMRAM] unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3403 ;;      Params:         0       0       0       0       0       0       0
  3404 ;;      Locals:         1       0       0       0       0       0       0
  3405 ;;      Temps:          0       0       0       0       0       0       0
  3406 ;;      Totals:         1       0       0       0       0       0       0
  3407 ;;Total ram usage:        1 bytes
  3408 ;; Hardware stack levels used: 1
  3409 ;; Hardware stack levels required when called: 4
  3410 ;; This function calls:
  3411 ;;		_delayMicro
  3412 ;;		_pushByte
  3413 ;; This function is called by:
  3414 ;;		_pegaUser
  3415 ;;		_pegaSenha
  3416 ;;		_lcdString
  3417 ;;		_lcdNumber
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           	psect	text19
  3422  0024DE                     __ptext19:
  3423                           	callstack 0
  3424  0024DE                     _lcdChar:
  3425                           	callstack 25
  3426                           
  3427                           ;incstack = 0
  3428                           ;lcdChar@value stored from wreg
  3429  0024DE  6E0E               	movwf	lcdChar@value^0,c
  3430  0024E0                     
  3431                           ;lcd.c: 53:  pushByte(value, 1);
  3432  0024E0  0E00               	movlw	0
  3433  0024E2  6E0B               	movwf	(pushByte@rs+1)^0,c
  3434  0024E4  0E01               	movlw	1
  3435  0024E6  6E0A               	movwf	pushByte@rs^0,c
  3436  0024E8  500E               	movf	lcdChar@value^0,w,c
  3437  0024EA  EC82  F010         	call	_pushByte
  3438  0024EE                     
  3439                           ;lcd.c: 54:  delayMicro(80);
  3440  0024EE  0E00               	movlw	0
  3441  0024F0  6E02               	movwf	(delayMicro@a+1)^0,c
  3442  0024F2  0E50               	movlw	80
  3443  0024F4  6E01               	movwf	delayMicro@a^0,c
  3444  0024F6  ECAE  F012         	call	_delayMicro	;wreg free
  3445  0024FA  0012               	return		;funcret
  3446  0024FC                     __end_of_lcdChar:
  3447                           	callstack 0
  3448                           
  3449 ;; *************** function _lcdPosition *****************
  3450 ;; Defined at:
  3451 ;;		line 44 in file "lcd.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  line            2   14[COMRAM] int 
  3454 ;;  col             2   16[COMRAM] int 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;		None
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1    wreg      void 
  3459 ;; Registers used:
  3460 ;;		wreg, status,2, status,0, cstack
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3466 ;;      Params:         4       0       0       0       0       0       0
  3467 ;;      Locals:         0       0       0       0       0       0       0
  3468 ;;      Temps:          0       0       0       0       0       0       0
  3469 ;;      Totals:         4       0       0       0       0       0       0
  3470 ;;Total ram usage:        4 bytes
  3471 ;; Hardware stack levels used: 1
  3472 ;; Hardware stack levels required when called: 5
  3473 ;; This function calls:
  3474 ;;		_lcdCommand
  3475 ;; This function is called by:
  3476 ;;		_main
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text20
  3481  00237C                     __ptext20:
  3482                           	callstack 0
  3483  00237C                     _lcdPosition:
  3484                           	callstack 25
  3485  00237C                     
  3486                           ;lcd.c: 45:  if (line == 0) {
  3487  00237C  500F               	movf	lcdPosition@line^0,w,c
  3488  00237E  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  3489  002380  A4D8               	btfss	status,2,c
  3490  002382  EFC5  F011         	goto	u2461
  3491  002386  EFC7  F011         	goto	u2460
  3492  00238A                     u2461:
  3493  00238A  EFCC  F011         	goto	l2471
  3494  00238E                     u2460:
  3495  00238E                     
  3496                           ;lcd.c: 46:   lcdCommand(0x80 + (col % 16));
  3497  00238E  5011               	movf	lcdPosition@col^0,w,c
  3498  002390  0B0F               	andlw	15
  3499  002392  0F80               	addlw	128
  3500  002394  EC7E  F012         	call	_lcdCommand
  3501  002398                     l2471:
  3502                           
  3503                           ;lcd.c: 48:  if (line == 1) {
  3504  002398  040F               	decf	lcdPosition@line^0,w,c
  3505  00239A  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  3506  00239C  A4D8               	btfss	status,2,c
  3507  00239E  EFD3  F011         	goto	u2471
  3508  0023A2  EFD5  F011         	goto	u2470
  3509  0023A6                     u2471:
  3510  0023A6  EFDA  F011         	goto	l267
  3511  0023AA                     u2470:
  3512  0023AA                     
  3513                           ;lcd.c: 49:   lcdCommand(0xC0 + (col % 16));
  3514  0023AA  5011               	movf	lcdPosition@col^0,w,c
  3515  0023AC  0B0F               	andlw	15
  3516  0023AE  0FC0               	addlw	192
  3517  0023B0  EC7E  F012         	call	_lcdCommand
  3518  0023B4                     l267:
  3519  0023B4  0012               	return		;funcret
  3520  0023B6                     __end_of_lcdPosition:
  3521                           	callstack 0
  3522                           
  3523 ;; *************** function _lcdInit *****************
  3524 ;; Defined at:
  3525 ;;		line 72 in file "lcd.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;		None
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;		None
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      void 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2, status,0, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3539 ;;      Params:         0       0       0       0       0       0       0
  3540 ;;      Locals:         0       0       0       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0
  3542 ;;      Totals:         0       0       0       0       0       0       0
  3543 ;;Total ram usage:        0 bytes
  3544 ;; Hardware stack levels used: 1
  3545 ;; Hardware stack levels required when called: 5
  3546 ;; This function calls:
  3547 ;;		_delayMicro
  3548 ;;		_delayMili
  3549 ;;		_lcdCommand
  3550 ;;		_pinMode
  3551 ;;		_pushNibble
  3552 ;;		_soInit
  3553 ;; This function is called by:
  3554 ;;		_main
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text21
  3559  001CEC                     __ptext21:
  3560                           	callstack 0
  3561  001CEC                     _lcdInit:
  3562                           	callstack 25
  3563  001CEC                     
  3564                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  3565  001CEC  0E00               	movlw	0
  3566  001CEE  6E02               	movwf	(pinMode@pin+1)^0,c
  3567  001CF0  0E1C               	movlw	28
  3568  001CF2  6E01               	movwf	pinMode@pin^0,c
  3569  001CF4  0E00               	movlw	0
  3570  001CF6  6E04               	movwf	(pinMode@type+1)^0,c
  3571  001CF8  0E00               	movlw	0
  3572  001CFA  6E03               	movwf	pinMode@type^0,c
  3573  001CFC  ECDF  F009         	call	_pinMode	;wreg free
  3574                           
  3575                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  3576  001D00  0E00               	movlw	0
  3577  001D02  6E02               	movwf	(pinMode@pin+1)^0,c
  3578  001D04  0E1D               	movlw	29
  3579  001D06  6E01               	movwf	pinMode@pin^0,c
  3580  001D08  0E00               	movlw	0
  3581  001D0A  6E04               	movwf	(pinMode@type+1)^0,c
  3582  001D0C  0E00               	movlw	0
  3583  001D0E  6E03               	movwf	pinMode@type^0,c
  3584  001D10  ECDF  F009         	call	_pinMode	;wreg free
  3585                           
  3586                           ;lcd.c: 75:  soInit();
  3587  001D14  EC9F  F011         	call	_soInit	;wreg free
  3588                           
  3589                           ;lcd.c: 76:  delayMili(15);
  3590  001D18  0E00               	movlw	0
  3591  001D1A  6E02               	movwf	(delayMili@a+1)^0,c
  3592  001D1C  0E0F               	movlw	15
  3593  001D1E  6E01               	movwf	delayMili@a^0,c
  3594  001D20  ECF4  F011         	call	_delayMili	;wreg free
  3595                           
  3596                           ;lcd.c: 78:  pushNibble(0x03, 0);
  3597  001D24  0E00               	movlw	0
  3598  001D26  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3599  001D28  0E00               	movlw	0
  3600  001D2A  6E0A               	movwf	pushNibble@rs^0,c
  3601  001D2C  0E03               	movlw	3
  3602  001D2E  EC5C  F012         	call	_pushNibble
  3603                           
  3604                           ;lcd.c: 79:  delayMili(5);
  3605  001D32  0E00               	movlw	0
  3606  001D34  6E02               	movwf	(delayMili@a+1)^0,c
  3607  001D36  0E05               	movlw	5
  3608  001D38  6E01               	movwf	delayMili@a^0,c
  3609  001D3A  ECF4  F011         	call	_delayMili	;wreg free
  3610                           
  3611                           ;lcd.c: 80:  pushNibble(0x03, 0);
  3612  001D3E  0E00               	movlw	0
  3613  001D40  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3614  001D42  0E00               	movlw	0
  3615  001D44  6E0A               	movwf	pushNibble@rs^0,c
  3616  001D46  0E03               	movlw	3
  3617  001D48  EC5C  F012         	call	_pushNibble
  3618  001D4C                     
  3619                           ;lcd.c: 81:  delayMicro(160);
  3620  001D4C  0E00               	movlw	0
  3621  001D4E  6E02               	movwf	(delayMicro@a+1)^0,c
  3622  001D50  0EA0               	movlw	160
  3623  001D52  6E01               	movwf	delayMicro@a^0,c
  3624  001D54  ECAE  F012         	call	_delayMicro	;wreg free
  3625  001D58                     
  3626                           ;lcd.c: 82:  pushNibble(0x03, 0);
  3627  001D58  0E00               	movlw	0
  3628  001D5A  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3629  001D5C  0E00               	movlw	0
  3630  001D5E  6E0A               	movwf	pushNibble@rs^0,c
  3631  001D60  0E03               	movlw	3
  3632  001D62  EC5C  F012         	call	_pushNibble
  3633                           
  3634                           ;lcd.c: 83:  delayMicro(160);
  3635  001D66  0E00               	movlw	0
  3636  001D68  6E02               	movwf	(delayMicro@a+1)^0,c
  3637  001D6A  0EA0               	movlw	160
  3638  001D6C  6E01               	movwf	delayMicro@a^0,c
  3639  001D6E  ECAE  F012         	call	_delayMicro	;wreg free
  3640  001D72                     
  3641                           ;lcd.c: 85:  pushNibble(0x02, 0);
  3642  001D72  0E00               	movlw	0
  3643  001D74  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3644  001D76  0E00               	movlw	0
  3645  001D78  6E0A               	movwf	pushNibble@rs^0,c
  3646  001D7A  0E02               	movlw	2
  3647  001D7C  EC5C  F012         	call	_pushNibble
  3648  001D80                     
  3649                           ;lcd.c: 86:  delayMili(10);
  3650  001D80  0E00               	movlw	0
  3651  001D82  6E02               	movwf	(delayMili@a+1)^0,c
  3652  001D84  0E0A               	movlw	10
  3653  001D86  6E01               	movwf	delayMili@a^0,c
  3654  001D88  ECF4  F011         	call	_delayMili	;wreg free
  3655  001D8C                     
  3656                           ;lcd.c: 88:  lcdCommand(0x28);
  3657  001D8C  0E28               	movlw	40
  3658  001D8E  EC7E  F012         	call	_lcdCommand
  3659  001D92                     
  3660                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  3661  001D92  0E0C               	movlw	12
  3662  001D94  EC7E  F012         	call	_lcdCommand
  3663  001D98                     
  3664                           ;lcd.c: 90:  lcdCommand(0x01);
  3665  001D98  0E01               	movlw	1
  3666  001D9A  EC7E  F012         	call	_lcdCommand
  3667  001D9E  0012               	return		;funcret
  3668  001DA0                     __end_of_lcdInit:
  3669                           	callstack 0
  3670                           
  3671 ;; *************** function _pushNibble *****************
  3672 ;; Defined at:
  3673 ;;		line 25 in file "lcd.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  value           1    wreg     unsigned char 
  3676 ;;  rs              2    9[COMRAM] int 
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;  value           1   11[COMRAM] unsigned char 
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      void 
  3681 ;; Registers used:
  3682 ;;		wreg, status,2, status,0, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3688 ;;      Params:         2       0       0       0       0       0       0
  3689 ;;      Locals:         1       0       0       0       0       0       0
  3690 ;;      Temps:          0       0       0       0       0       0       0
  3691 ;;      Totals:         3       0       0       0       0       0       0
  3692 ;;Total ram usage:        3 bytes
  3693 ;; Hardware stack levels used: 1
  3694 ;; Hardware stack levels required when called: 3
  3695 ;; This function calls:
  3696 ;;		_digitalWrite
  3697 ;;		_pulseEnablePin
  3698 ;;		_soWrite
  3699 ;; This function is called by:
  3700 ;;		_lcdInit
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text22
  3705  0024B8                     __ptext22:
  3706                           	callstack 0
  3707  0024B8                     _pushNibble:
  3708                           	callstack 26
  3709                           
  3710                           ;incstack = 0
  3711                           ;pushNibble@value stored from wreg
  3712  0024B8  6E0C               	movwf	pushNibble@value^0,c
  3713  0024BA                     
  3714                           ;lcd.c: 26:  soWrite(value);
  3715  0024BA  C00C  F007         	movff	pushNibble@value,soWrite@value
  3716  0024BE  6A08               	clrf	(soWrite@value+1)^0,c
  3717  0024C0  EC31  F011         	call	_soWrite	;wreg free
  3718                           
  3719                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  3720  0024C4  0E00               	movlw	0
  3721  0024C6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3722  0024C8  0E1D               	movlw	29
  3723  0024CA  6E01               	movwf	digitalWrite@pin^0,c
  3724  0024CC  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  3725  0024D0  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  3726  0024D4  ECB8  F008         	call	_digitalWrite	;wreg free
  3727                           
  3728                           ;lcd.c: 28:  pulseEnablePin();
  3729  0024D8  EC7E  F011         	call	_pulseEnablePin	;wreg free
  3730  0024DC  0012               	return		;funcret
  3731  0024DE                     __end_of_pushNibble:
  3732                           	callstack 0
  3733                           
  3734 ;; *************** function _lcdCommand *****************
  3735 ;; Defined at:
  3736 ;;		line 40 in file "lcd.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;  value           1    wreg     unsigned char 
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;  value           1   13[COMRAM] unsigned char 
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  1    wreg      void 
  3743 ;; Registers used:
  3744 ;;		wreg, status,2, status,0, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3750 ;;      Params:         0       0       0       0       0       0       0
  3751 ;;      Locals:         1       0       0       0       0       0       0
  3752 ;;      Temps:          0       0       0       0       0       0       0
  3753 ;;      Totals:         1       0       0       0       0       0       0
  3754 ;;Total ram usage:        1 bytes
  3755 ;; Hardware stack levels used: 1
  3756 ;; Hardware stack levels required when called: 4
  3757 ;; This function calls:
  3758 ;;		_delayMili
  3759 ;;		_pushByte
  3760 ;; This function is called by:
  3761 ;;		_main
  3762 ;;		_lcdPosition
  3763 ;;		_lcdInit
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           	psect	text23
  3768  0024FC                     __ptext23:
  3769                           	callstack 0
  3770  0024FC                     _lcdCommand:
  3771                           	callstack 25
  3772                           
  3773                           ;incstack = 0
  3774                           ;lcdCommand@value stored from wreg
  3775  0024FC  6E0E               	movwf	lcdCommand@value^0,c
  3776  0024FE                     
  3777                           ;lcd.c: 41:  pushByte(value, 0);
  3778  0024FE  0E00               	movlw	0
  3779  002500  6E0B               	movwf	(pushByte@rs+1)^0,c
  3780  002502  0E00               	movlw	0
  3781  002504  6E0A               	movwf	pushByte@rs^0,c
  3782  002506  500E               	movf	lcdCommand@value^0,w,c
  3783  002508  EC82  F010         	call	_pushByte
  3784                           
  3785                           ;lcd.c: 42:  delayMili(2);
  3786  00250C  0E00               	movlw	0
  3787  00250E  6E02               	movwf	(delayMili@a+1)^0,c
  3788  002510  0E02               	movlw	2
  3789  002512  6E01               	movwf	delayMili@a^0,c
  3790  002514  ECF4  F011         	call	_delayMili	;wreg free
  3791  002518  0012               	return		;funcret
  3792  00251A                     __end_of_lcdCommand:
  3793                           	callstack 0
  3794                           
  3795 ;; *************** function _pushByte *****************
  3796 ;; Defined at:
  3797 ;;		line 31 in file "lcd.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;  value           1    wreg     unsigned char 
  3800 ;;  rs              2    9[COMRAM] int 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;  value           1   12[COMRAM] unsigned char 
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1    wreg      void 
  3805 ;; Registers used:
  3806 ;;		wreg, status,2, status,0, cstack
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3812 ;;      Params:         2       0       0       0       0       0       0
  3813 ;;      Locals:         1       0       0       0       0       0       0
  3814 ;;      Temps:          1       0       0       0       0       0       0
  3815 ;;      Totals:         4       0       0       0       0       0       0
  3816 ;;Total ram usage:        4 bytes
  3817 ;; Hardware stack levels used: 1
  3818 ;; Hardware stack levels required when called: 3
  3819 ;; This function calls:
  3820 ;;		_digitalWrite
  3821 ;;		_pulseEnablePin
  3822 ;;		_soWrite
  3823 ;; This function is called by:
  3824 ;;		_lcdCommand
  3825 ;;		_lcdChar
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text24
  3830  002104                     __ptext24:
  3831                           	callstack 0
  3832  002104                     _pushByte:
  3833                           	callstack 25
  3834                           
  3835                           ;incstack = 0
  3836                           ;pushByte@value stored from wreg
  3837  002104  6E0D               	movwf	pushByte@value^0,c
  3838  002106                     
  3839                           ;lcd.c: 32:  soWrite(value >> 4);
  3840  002106  C00D  F00C         	movff	pushByte@value,??_pushByte
  3841  00210A  3A0C               	swapf	??_pushByte^0,f,c
  3842  00210C  0E0F               	movlw	15
  3843  00210E  160C               	andwf	??_pushByte^0,f,c
  3844  002110  500C               	movf	??_pushByte^0,w,c
  3845  002112  6E07               	movwf	soWrite@value^0,c
  3846  002114  6A08               	clrf	(soWrite@value+1)^0,c
  3847  002116  EC31  F011         	call	_soWrite	;wreg free
  3848                           
  3849                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  3850  00211A  0E00               	movlw	0
  3851  00211C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3852  00211E  0E1D               	movlw	29
  3853  002120  6E01               	movwf	digitalWrite@pin^0,c
  3854  002122  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  3855  002126  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  3856  00212A  ECB8  F008         	call	_digitalWrite	;wreg free
  3857                           
  3858                           ;lcd.c: 34:  pulseEnablePin();
  3859  00212E  EC7E  F011         	call	_pulseEnablePin	;wreg free
  3860                           
  3861                           ;lcd.c: 36:  soWrite(value & 0x0F);
  3862  002132  C00D  F00C         	movff	pushByte@value,??_pushByte
  3863  002136  0E0F               	movlw	15
  3864  002138  160C               	andwf	??_pushByte^0,f,c
  3865  00213A  500C               	movf	??_pushByte^0,w,c
  3866  00213C  6E07               	movwf	soWrite@value^0,c
  3867  00213E  6A08               	clrf	(soWrite@value+1)^0,c
  3868  002140  EC31  F011         	call	_soWrite	;wreg free
  3869                           
  3870                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  3871  002144  0E00               	movlw	0
  3872  002146  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3873  002148  0E1D               	movlw	29
  3874  00214A  6E01               	movwf	digitalWrite@pin^0,c
  3875  00214C  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  3876  002150  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  3877  002154  ECB8  F008         	call	_digitalWrite	;wreg free
  3878                           
  3879                           ;lcd.c: 38:  pulseEnablePin();
  3880  002158  EC7E  F011         	call	_pulseEnablePin	;wreg free
  3881  00215C  0012               	return		;funcret
  3882  00215E                     __end_of_pushByte:
  3883                           	callstack 0
  3884                           
  3885 ;; *************** function _soWrite *****************
  3886 ;; Defined at:
  3887 ;;		line 18 in file "so.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  value           2    6[COMRAM] int 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  i               1    8[COMRAM] unsigned char 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  1    wreg      void 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3901 ;;      Params:         2       0       0       0       0       0       0
  3902 ;;      Locals:         1       0       0       0       0       0       0
  3903 ;;      Temps:          0       0       0       0       0       0       0
  3904 ;;      Totals:         3       0       0       0       0       0       0
  3905 ;;Total ram usage:        3 bytes
  3906 ;; Hardware stack levels used: 1
  3907 ;; Hardware stack levels required when called: 2
  3908 ;; This function calls:
  3909 ;;		_PulseClockData
  3910 ;;		_PulseEnClock
  3911 ;;		_digitalWrite
  3912 ;; This function is called by:
  3913 ;;		_kpDebounce
  3914 ;;		_pushNibble
  3915 ;;		_pushByte
  3916 ;;		_ssdUpdate
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text25
  3921  002262                     __ptext25:
  3922                           	callstack 0
  3923  002262                     _soWrite:
  3924                           	callstack 27
  3925  002262                     
  3926                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  3927  002262  0E00               	movlw	0
  3928  002264  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3929  002266  0E08               	movlw	8
  3930  002268  6E01               	movwf	digitalWrite@pin^0,c
  3931  00226A  0E00               	movlw	0
  3932  00226C  6E04               	movwf	(digitalWrite@value+1)^0,c
  3933  00226E  0E00               	movlw	0
  3934  002270  6E03               	movwf	digitalWrite@value^0,c
  3935  002272  ECB8  F008         	call	_digitalWrite	;wreg free
  3936  002276                     
  3937                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  3938  002276  0E00               	movlw	0
  3939  002278  6E09               	movwf	soWrite@i^0,c
  3940  00227A                     l2107:
  3941                           
  3942                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  3943  00227A  0E00               	movlw	0
  3944  00227C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3945  00227E  0E1E               	movlw	30
  3946  002280  6E01               	movwf	digitalWrite@pin^0,c
  3947  002282  0E80               	movlw	128
  3948  002284  1407               	andwf	soWrite@value^0,w,c
  3949  002286  6E03               	movwf	digitalWrite@value^0,c
  3950  002288  6A04               	clrf	(digitalWrite@value+1)^0,c
  3951  00228A  ECB8  F008         	call	_digitalWrite	;wreg free
  3952                           
  3953                           ;so.c: 23:   PulseClockData();
  3954  00228E  EC21  F012         	call	_PulseClockData	;wreg free
  3955  002292                     
  3956                           ;so.c: 24:   value <<= 1;
  3957  002292  90D8               	bcf	status,0,c
  3958  002294  3607               	rlcf	soWrite@value^0,f,c
  3959  002296  3608               	rlcf	(soWrite@value+1)^0,f,c
  3960  002298                     
  3961                           ;so.c: 25:  }
  3962  002298  2A09               	incf	soWrite@i^0,f,c
  3963  00229A  0E07               	movlw	7
  3964  00229C  6409               	cpfsgt	soWrite@i^0,c
  3965  00229E  EF53  F011         	goto	u1881
  3966  0022A2  EF55  F011         	goto	u1880
  3967  0022A6                     u1881:
  3968  0022A6  EF3D  F011         	goto	l2107
  3969  0022AA                     u1880:
  3970  0022AA                     
  3971                           ;so.c: 26:  PulseEnClock();
  3972  0022AA  EC0C  F012         	call	_PulseEnClock	;wreg free
  3973  0022AE  0012               	return		;funcret
  3974  0022B0                     __end_of_soWrite:
  3975                           	callstack 0
  3976                           
  3977 ;; *************** function _PulseEnClock *****************
  3978 ;; Defined at:
  3979 ;;		line 9 in file "so.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2, status,0, cstack
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3993 ;;      Params:         0       0       0       0       0       0       0
  3994 ;;      Locals:         0       0       0       0       0       0       0
  3995 ;;      Temps:          0       0       0       0       0       0       0
  3996 ;;      Totals:         0       0       0       0       0       0       0
  3997 ;;Total ram usage:        0 bytes
  3998 ;; Hardware stack levels used: 1
  3999 ;; Hardware stack levels required when called: 1
  4000 ;; This function calls:
  4001 ;;		_digitalWrite
  4002 ;; This function is called by:
  4003 ;;		_soWrite
  4004 ;; This function uses a non-reentrant model
  4005 ;;
  4006                           
  4007                           	psect	text26
  4008  002418                     __ptext26:
  4009                           	callstack 0
  4010  002418                     _PulseEnClock:
  4011                           	callstack 27
  4012  002418                     
  4013                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  4014  002418  0E00               	movlw	0
  4015  00241A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4016  00241C  0E1F               	movlw	31
  4017  00241E  6E01               	movwf	digitalWrite@pin^0,c
  4018  002420  0E00               	movlw	0
  4019  002422  6E04               	movwf	(digitalWrite@value+1)^0,c
  4020  002424  0E01               	movlw	1
  4021  002426  6E03               	movwf	digitalWrite@value^0,c
  4022  002428  ECB8  F008         	call	_digitalWrite	;wreg free
  4023                           
  4024                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  4025  00242C  0E00               	movlw	0
  4026  00242E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4027  002430  0E1F               	movlw	31
  4028  002432  6E01               	movwf	digitalWrite@pin^0,c
  4029  002434  0E00               	movlw	0
  4030  002436  6E04               	movwf	(digitalWrite@value+1)^0,c
  4031  002438  0E00               	movlw	0
  4032  00243A  6E03               	movwf	digitalWrite@value^0,c
  4033  00243C  ECB8  F008         	call	_digitalWrite	;wreg free
  4034  002440  0012               	return		;funcret
  4035  002442                     __end_of_PulseEnClock:
  4036                           	callstack 0
  4037                           
  4038 ;; *************** function _PulseClockData *****************
  4039 ;; Defined at:
  4040 ;;		line 14 in file "so.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;		None
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;		None
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  1    wreg      void 
  4047 ;; Registers used:
  4048 ;;		wreg, status,2, status,0, cstack
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4054 ;;      Params:         0       0       0       0       0       0       0
  4055 ;;      Locals:         0       0       0       0       0       0       0
  4056 ;;      Temps:          0       0       0       0       0       0       0
  4057 ;;      Totals:         0       0       0       0       0       0       0
  4058 ;;Total ram usage:        0 bytes
  4059 ;; Hardware stack levels used: 1
  4060 ;; Hardware stack levels required when called: 1
  4061 ;; This function calls:
  4062 ;;		_digitalWrite
  4063 ;; This function is called by:
  4064 ;;		_soWrite
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text27
  4069  002442                     __ptext27:
  4070                           	callstack 0
  4071  002442                     _PulseClockData:
  4072                           	callstack 27
  4073  002442                     
  4074                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  4075  002442  0E00               	movlw	0
  4076  002444  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4077  002446  0E08               	movlw	8
  4078  002448  6E01               	movwf	digitalWrite@pin^0,c
  4079  00244A  0E00               	movlw	0
  4080  00244C  6E04               	movwf	(digitalWrite@value+1)^0,c
  4081  00244E  0E01               	movlw	1
  4082  002450  6E03               	movwf	digitalWrite@value^0,c
  4083  002452  ECB8  F008         	call	_digitalWrite	;wreg free
  4084                           
  4085                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  4086  002456  0E00               	movlw	0
  4087  002458  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4088  00245A  0E08               	movlw	8
  4089  00245C  6E01               	movwf	digitalWrite@pin^0,c
  4090  00245E  0E00               	movlw	0
  4091  002460  6E04               	movwf	(digitalWrite@value+1)^0,c
  4092  002462  0E00               	movlw	0
  4093  002464  6E03               	movwf	digitalWrite@value^0,c
  4094  002466  ECB8  F008         	call	_digitalWrite	;wreg free
  4095  00246A  0012               	return		;funcret
  4096  00246C                     __end_of_PulseClockData:
  4097                           	callstack 0
  4098                           
  4099 ;; *************** function _pulseEnablePin *****************
  4100 ;; Defined at:
  4101 ;;		line 18 in file "lcd.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;		None
  4104 ;; Auto vars:     Size  Location     Type
  4105 ;;		None
  4106 ;; Return value:  Size  Location     Type
  4107 ;;                  1    wreg      void 
  4108 ;; Registers used:
  4109 ;;		wreg, status,2, status,0, cstack
  4110 ;; Tracked objects:
  4111 ;;		On entry : 0/0
  4112 ;;		On exit  : 0/0
  4113 ;;		Unchanged: 0/0
  4114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4115 ;;      Params:         0       0       0       0       0       0       0
  4116 ;;      Locals:         0       0       0       0       0       0       0
  4117 ;;      Temps:          0       0       0       0       0       0       0
  4118 ;;      Totals:         0       0       0       0       0       0       0
  4119 ;;Total ram usage:        0 bytes
  4120 ;; Hardware stack levels used: 1
  4121 ;; Hardware stack levels required when called: 1
  4122 ;; This function calls:
  4123 ;;		_delayMicro
  4124 ;;		_digitalWrite
  4125 ;; This function is called by:
  4126 ;;		_pushNibble
  4127 ;;		_pushByte
  4128 ;; This function uses a non-reentrant model
  4129 ;;
  4130                           
  4131                           	psect	text28
  4132  0022FC                     __ptext28:
  4133                           	callstack 0
  4134  0022FC                     _pulseEnablePin:
  4135                           	callstack 26
  4136  0022FC                     
  4137                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  4138  0022FC  0E00               	movlw	0
  4139  0022FE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4140  002300  0E1C               	movlw	28
  4141  002302  6E01               	movwf	digitalWrite@pin^0,c
  4142  002304  0E00               	movlw	0
  4143  002306  6E04               	movwf	(digitalWrite@value+1)^0,c
  4144  002308  0E01               	movlw	1
  4145  00230A  6E03               	movwf	digitalWrite@value^0,c
  4146  00230C  ECB8  F008         	call	_digitalWrite	;wreg free
  4147  002310                     
  4148                           ;lcd.c: 20:  delayMicro(5);
  4149  002310  0E00               	movlw	0
  4150  002312  6E02               	movwf	(delayMicro@a+1)^0,c
  4151  002314  0E05               	movlw	5
  4152  002316  6E01               	movwf	delayMicro@a^0,c
  4153  002318  ECAE  F012         	call	_delayMicro	;wreg free
  4154  00231C                     
  4155                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  4156  00231C  0E00               	movlw	0
  4157  00231E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4158  002320  0E1C               	movlw	28
  4159  002322  6E01               	movwf	digitalWrite@pin^0,c
  4160  002324  0E00               	movlw	0
  4161  002326  6E04               	movwf	(digitalWrite@value+1)^0,c
  4162  002328  0E00               	movlw	0
  4163  00232A  6E03               	movwf	digitalWrite@value^0,c
  4164  00232C  ECB8  F008         	call	_digitalWrite	;wreg free
  4165                           
  4166                           ;lcd.c: 22:  delayMicro(5);
  4167  002330  0E00               	movlw	0
  4168  002332  6E02               	movwf	(delayMicro@a+1)^0,c
  4169  002334  0E05               	movlw	5
  4170  002336  6E01               	movwf	delayMicro@a^0,c
  4171  002338  ECAE  F012         	call	_delayMicro	;wreg free
  4172  00233C  0012               	return		;funcret
  4173  00233E                     __end_of_pulseEnablePin:
  4174                           	callstack 0
  4175                           
  4176 ;; *************** function _digitalWrite *****************
  4177 ;; Defined at:
  4178 ;;		line 14 in file "io.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;  pin             2    0[COMRAM] int 
  4181 ;;  value           2    2[COMRAM] int 
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;		None
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  1    wreg      void 
  4186 ;; Registers used:
  4187 ;;		wreg, status,2, status,0
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4193 ;;      Params:         4       0       0       0       0       0       0
  4194 ;;      Locals:         0       0       0       0       0       0       0
  4195 ;;      Temps:          2       0       0       0       0       0       0
  4196 ;;      Totals:         6       0       0       0       0       0       0
  4197 ;;Total ram usage:        6 bytes
  4198 ;; Hardware stack levels used: 1
  4199 ;; This function calls:
  4200 ;;		Nothing
  4201 ;; This function is called by:
  4202 ;;		_pulseEnablePin
  4203 ;;		_pushNibble
  4204 ;;		_pushByte
  4205 ;;		_PulseEnClock
  4206 ;;		_PulseClockData
  4207 ;;		_soWrite
  4208 ;;		_ssdUpdate
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212                           	psect	text29
  4213  001170                     __ptext29:
  4214                           	callstack 0
  4215  001170                     _digitalWrite:
  4216                           	callstack 28
  4217  001170                     
  4218                           ;io.c: 16:     if(pin <8){
  4219  001170  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4220  001172  EFC6  F008         	goto	u1680
  4221  001176  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4222  001178  E107               	bnz	u1681
  4223  00117A  0E08               	movlw	8
  4224  00117C  5C01               	subwf	digitalWrite@pin^0,w,c
  4225  00117E  B0D8               	btfsc	status,0,c
  4226  001180  EFC4  F008         	goto	u1681
  4227  001184  EFC6  F008         	goto	u1680
  4228  001188                     u1681:
  4229  001188  EFF0  F008         	goto	l2063
  4230  00118C                     u1680:
  4231  00118C                     
  4232                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  4233  00118C  5003               	movf	digitalWrite@value^0,w,c
  4234  00118E  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4235  001190  B4D8               	btfsc	status,2,c
  4236  001192  EFCD  F008         	goto	u1691
  4237  001196  EFCF  F008         	goto	u1690
  4238  00119A                     u1691:
  4239  00119A  EFDF  F008         	goto	l2061
  4240  00119E                     u1690:
  4241  00119E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4242  0011A2  0E01               	movlw	1
  4243  0011A4  6E06               	movwf	(??_digitalWrite+1)^0,c
  4244  0011A6  2A05               	incf	??_digitalWrite^0,f,c
  4245  0011A8  EFD8  F008         	goto	u1704
  4246  0011AC                     u1705:
  4247  0011AC  90D8               	bcf	status,0,c
  4248  0011AE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4249  0011B0                     u1704:
  4250  0011B0  2E05               	decfsz	??_digitalWrite^0,f,c
  4251  0011B2  EFD6  F008         	goto	u1705
  4252  0011B6  5006               	movf	(??_digitalWrite+1)^0,w,c
  4253  0011B8  1280               	iorwf	128,f,c	;volatile
  4254  0011BA  EFDE  F009         	goto	l154
  4255  0011BE                     l2061:
  4256  0011BE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4257  0011C2  0E01               	movlw	1
  4258  0011C4  6E06               	movwf	(??_digitalWrite+1)^0,c
  4259  0011C6  2A05               	incf	??_digitalWrite^0,f,c
  4260  0011C8  EFE8  F008         	goto	u1714
  4261  0011CC                     u1715:
  4262  0011CC  90D8               	bcf	status,0,c
  4263  0011CE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4264  0011D0                     u1714:
  4265  0011D0  2E05               	decfsz	??_digitalWrite^0,f,c
  4266  0011D2  EFE6  F008         	goto	u1715
  4267  0011D6  5006               	movf	(??_digitalWrite+1)^0,w,c
  4268  0011D8  0AFF               	xorlw	255
  4269  0011DA  1680               	andwf	128,f,c	;volatile
  4270  0011DC  EFDE  F009         	goto	l154
  4271  0011E0                     l2063:
  4272  0011E0  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4273  0011E2  EFFE  F008         	goto	u1720
  4274  0011E6  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4275  0011E8  E107               	bnz	u1721
  4276  0011EA  0E10               	movlw	16
  4277  0011EC  5C01               	subwf	digitalWrite@pin^0,w,c
  4278  0011EE  B0D8               	btfsc	status,0,c
  4279  0011F0  EFFC  F008         	goto	u1721
  4280  0011F4  EFFE  F008         	goto	u1720
  4281  0011F8                     u1721:
  4282  0011F8  EF2C  F009         	goto	l2071
  4283  0011FC                     u1720:
  4284  0011FC                     
  4285                           ;io.c: 20:         pin -=8;
  4286  0011FC  0EF8               	movlw	248
  4287  0011FE  2601               	addwf	digitalWrite@pin^0,f,c
  4288  001200  0EFF               	movlw	255
  4289  001202  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4290                           
  4291                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  4292  001204  5003               	movf	digitalWrite@value^0,w,c
  4293  001206  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4294  001208  B4D8               	btfsc	status,2,c
  4295  00120A  EF09  F009         	goto	u1731
  4296  00120E  EF0B  F009         	goto	u1730
  4297  001212                     u1731:
  4298  001212  EF1B  F009         	goto	l2069
  4299  001216                     u1730:
  4300  001216  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4301  00121A  0E01               	movlw	1
  4302  00121C  6E06               	movwf	(??_digitalWrite+1)^0,c
  4303  00121E  2A05               	incf	??_digitalWrite^0,f,c
  4304  001220  EF14  F009         	goto	u1744
  4305  001224                     u1745:
  4306  001224  90D8               	bcf	status,0,c
  4307  001226  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4308  001228                     u1744:
  4309  001228  2E05               	decfsz	??_digitalWrite^0,f,c
  4310  00122A  EF12  F009         	goto	u1745
  4311  00122E  5006               	movf	(??_digitalWrite+1)^0,w,c
  4312  001230  1281               	iorwf	129,f,c	;volatile
  4313  001232  EFDE  F009         	goto	l154
  4314  001236                     l2069:
  4315  001236  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4316  00123A  0E01               	movlw	1
  4317  00123C  6E06               	movwf	(??_digitalWrite+1)^0,c
  4318  00123E  2A05               	incf	??_digitalWrite^0,f,c
  4319  001240  EF24  F009         	goto	u1754
  4320  001244                     u1755:
  4321  001244  90D8               	bcf	status,0,c
  4322  001246  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4323  001248                     u1754:
  4324  001248  2E05               	decfsz	??_digitalWrite^0,f,c
  4325  00124A  EF22  F009         	goto	u1755
  4326  00124E  5006               	movf	(??_digitalWrite+1)^0,w,c
  4327  001250  0AFF               	xorlw	255
  4328  001252  1681               	andwf	129,f,c	;volatile
  4329  001254  EFDE  F009         	goto	l154
  4330  001258                     l2071:
  4331  001258  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4332  00125A  EF3A  F009         	goto	u1760
  4333  00125E  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4334  001260  E107               	bnz	u1761
  4335  001262  0E18               	movlw	24
  4336  001264  5C01               	subwf	digitalWrite@pin^0,w,c
  4337  001266  B0D8               	btfsc	status,0,c
  4338  001268  EF38  F009         	goto	u1761
  4339  00126C  EF3A  F009         	goto	u1760
  4340  001270                     u1761:
  4341  001270  EF68  F009         	goto	l2079
  4342  001274                     u1760:
  4343  001274                     
  4344                           ;io.c: 24:         pin -=16;
  4345  001274  0EF0               	movlw	240
  4346  001276  2601               	addwf	digitalWrite@pin^0,f,c
  4347  001278  0EFF               	movlw	255
  4348  00127A  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4349                           
  4350                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  4351  00127C  5003               	movf	digitalWrite@value^0,w,c
  4352  00127E  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4353  001280  B4D8               	btfsc	status,2,c
  4354  001282  EF45  F009         	goto	u1771
  4355  001286  EF47  F009         	goto	u1770
  4356  00128A                     u1771:
  4357  00128A  EF57  F009         	goto	l2077
  4358  00128E                     u1770:
  4359  00128E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4360  001292  0E01               	movlw	1
  4361  001294  6E06               	movwf	(??_digitalWrite+1)^0,c
  4362  001296  2A05               	incf	??_digitalWrite^0,f,c
  4363  001298  EF50  F009         	goto	u1784
  4364  00129C                     u1785:
  4365  00129C  90D8               	bcf	status,0,c
  4366  00129E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4367  0012A0                     u1784:
  4368  0012A0  2E05               	decfsz	??_digitalWrite^0,f,c
  4369  0012A2  EF4E  F009         	goto	u1785
  4370  0012A6  5006               	movf	(??_digitalWrite+1)^0,w,c
  4371  0012A8  1282               	iorwf	130,f,c	;volatile
  4372  0012AA  EFDE  F009         	goto	l154
  4373  0012AE                     l2077:
  4374  0012AE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4375  0012B2  0E01               	movlw	1
  4376  0012B4  6E06               	movwf	(??_digitalWrite+1)^0,c
  4377  0012B6  2A05               	incf	??_digitalWrite^0,f,c
  4378  0012B8  EF60  F009         	goto	u1794
  4379  0012BC                     u1795:
  4380  0012BC  90D8               	bcf	status,0,c
  4381  0012BE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4382  0012C0                     u1794:
  4383  0012C0  2E05               	decfsz	??_digitalWrite^0,f,c
  4384  0012C2  EF5E  F009         	goto	u1795
  4385  0012C6  5006               	movf	(??_digitalWrite+1)^0,w,c
  4386  0012C8  0AFF               	xorlw	255
  4387  0012CA  1682               	andwf	130,f,c	;volatile
  4388  0012CC  EFDE  F009         	goto	l154
  4389  0012D0                     l2079:
  4390  0012D0  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4391  0012D2  EF76  F009         	goto	u1800
  4392  0012D6  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4393  0012D8  E107               	bnz	u1801
  4394  0012DA  0E20               	movlw	32
  4395  0012DC  5C01               	subwf	digitalWrite@pin^0,w,c
  4396  0012DE  B0D8               	btfsc	status,0,c
  4397  0012E0  EF74  F009         	goto	u1801
  4398  0012E4  EF76  F009         	goto	u1800
  4399  0012E8                     u1801:
  4400  0012E8  EFA4  F009         	goto	l2087
  4401  0012EC                     u1800:
  4402  0012EC                     
  4403                           ;io.c: 28:         pin -=24;
  4404  0012EC  0EE8               	movlw	232
  4405  0012EE  2601               	addwf	digitalWrite@pin^0,f,c
  4406  0012F0  0EFF               	movlw	255
  4407  0012F2  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4408                           
  4409                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  4410  0012F4  5003               	movf	digitalWrite@value^0,w,c
  4411  0012F6  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4412  0012F8  B4D8               	btfsc	status,2,c
  4413  0012FA  EF81  F009         	goto	u1811
  4414  0012FE  EF83  F009         	goto	u1810
  4415  001302                     u1811:
  4416  001302  EF93  F009         	goto	l2085
  4417  001306                     u1810:
  4418  001306  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4419  00130A  0E01               	movlw	1
  4420  00130C  6E06               	movwf	(??_digitalWrite+1)^0,c
  4421  00130E  2A05               	incf	??_digitalWrite^0,f,c
  4422  001310  EF8C  F009         	goto	u1824
  4423  001314                     u1825:
  4424  001314  90D8               	bcf	status,0,c
  4425  001316  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4426  001318                     u1824:
  4427  001318  2E05               	decfsz	??_digitalWrite^0,f,c
  4428  00131A  EF8A  F009         	goto	u1825
  4429  00131E  5006               	movf	(??_digitalWrite+1)^0,w,c
  4430  001320  1283               	iorwf	131,f,c	;volatile
  4431  001322  EFDE  F009         	goto	l154
  4432  001326                     l2085:
  4433  001326  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4434  00132A  0E01               	movlw	1
  4435  00132C  6E06               	movwf	(??_digitalWrite+1)^0,c
  4436  00132E  2A05               	incf	??_digitalWrite^0,f,c
  4437  001330  EF9C  F009         	goto	u1834
  4438  001334                     u1835:
  4439  001334  90D8               	bcf	status,0,c
  4440  001336  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4441  001338                     u1834:
  4442  001338  2E05               	decfsz	??_digitalWrite^0,f,c
  4443  00133A  EF9A  F009         	goto	u1835
  4444  00133E  5006               	movf	(??_digitalWrite+1)^0,w,c
  4445  001340  0AFF               	xorlw	255
  4446  001342  1683               	andwf	131,f,c	;volatile
  4447  001344  EFDE  F009         	goto	l154
  4448  001348                     l2087:
  4449  001348  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4450  00134A  EFB2  F009         	goto	u1840
  4451  00134E  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4452  001350  E107               	bnz	u1841
  4453  001352  0E28               	movlw	40
  4454  001354  5C01               	subwf	digitalWrite@pin^0,w,c
  4455  001356  B0D8               	btfsc	status,0,c
  4456  001358  EFB0  F009         	goto	u1841
  4457  00135C  EFB2  F009         	goto	u1840
  4458  001360                     u1841:
  4459  001360  EFDE  F009         	goto	l154
  4460  001364                     u1840:
  4461  001364                     
  4462                           ;io.c: 32:         pin -=32;
  4463  001364  0EE0               	movlw	224
  4464  001366  2601               	addwf	digitalWrite@pin^0,f,c
  4465  001368  0EFF               	movlw	255
  4466  00136A  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4467                           
  4468                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  4469  00136C  5003               	movf	digitalWrite@value^0,w,c
  4470  00136E  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4471  001370  B4D8               	btfsc	status,2,c
  4472  001372  EFBD  F009         	goto	u1851
  4473  001376  EFBF  F009         	goto	u1850
  4474  00137A                     u1851:
  4475  00137A  EFCF  F009         	goto	l2093
  4476  00137E                     u1850:
  4477  00137E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4478  001382  0E01               	movlw	1
  4479  001384  6E06               	movwf	(??_digitalWrite+1)^0,c
  4480  001386  2A05               	incf	??_digitalWrite^0,f,c
  4481  001388  EFC8  F009         	goto	u1864
  4482  00138C                     u1865:
  4483  00138C  90D8               	bcf	status,0,c
  4484  00138E  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4485  001390                     u1864:
  4486  001390  2E05               	decfsz	??_digitalWrite^0,f,c
  4487  001392  EFC6  F009         	goto	u1865
  4488  001396  5006               	movf	(??_digitalWrite+1)^0,w,c
  4489  001398  1284               	iorwf	132,f,c	;volatile
  4490  00139A  EFDE  F009         	goto	l154
  4491  00139E                     l2093:
  4492  00139E  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4493  0013A2  0E01               	movlw	1
  4494  0013A4  6E06               	movwf	(??_digitalWrite+1)^0,c
  4495  0013A6  2A05               	incf	??_digitalWrite^0,f,c
  4496  0013A8  EFD8  F009         	goto	u1874
  4497  0013AC                     u1875:
  4498  0013AC  90D8               	bcf	status,0,c
  4499  0013AE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4500  0013B0                     u1874:
  4501  0013B0  2E05               	decfsz	??_digitalWrite^0,f,c
  4502  0013B2  EFD6  F009         	goto	u1875
  4503  0013B6  5006               	movf	(??_digitalWrite+1)^0,w,c
  4504  0013B8  0AFF               	xorlw	255
  4505  0013BA  1684               	andwf	132,f,c	;volatile
  4506  0013BC                     l154:
  4507  0013BC  0012               	return		;funcret
  4508  0013BE                     __end_of_digitalWrite:
  4509                           	callstack 0
  4510                           
  4511 ;; *************** function _delayMicro *****************
  4512 ;; Defined at:
  4513 ;;		line 5 in file "lcd.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  a               2    0[COMRAM] int 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;  i               2    0        volatile int 
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  1    wreg      void 
  4520 ;; Registers used:
  4521 ;;		None
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4527 ;;      Params:         2       0       0       0       0       0       0
  4528 ;;      Locals:         0       0       0       0       0       0       0
  4529 ;;      Temps:          0       0       0       0       0       0       0
  4530 ;;      Totals:         2       0       0       0       0       0       0
  4531 ;;Total ram usage:        2 bytes
  4532 ;; Hardware stack levels used: 1
  4533 ;; This function calls:
  4534 ;;		Nothing
  4535 ;; This function is called by:
  4536 ;;		_pulseEnablePin
  4537 ;;		_lcdChar
  4538 ;;		_lcdInit
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           	psect	text30
  4543  00255C                     __ptext30:
  4544                           	callstack 0
  4545  00255C                     _delayMicro:
  4546                           	callstack 26
  4547  00255C  0012               	return		;funcret
  4548  00255E                     __end_of_delayMicro:
  4549                           	callstack 0
  4550                           
  4551 ;; *************** function _delayMili *****************
  4552 ;; Defined at:
  4553 ;;		line 10 in file "lcd.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  a               2    0[COMRAM] int 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  i               2    3[COMRAM] volatile int 
  4558 ;; Return value:  Size  Location     Type
  4559 ;;                  1    wreg      void 
  4560 ;; Registers used:
  4561 ;;		wreg, status,2, status,0
  4562 ;; Tracked objects:
  4563 ;;		On entry : 0/0
  4564 ;;		On exit  : 0/0
  4565 ;;		Unchanged: 0/0
  4566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4567 ;;      Params:         2       0       0       0       0       0       0
  4568 ;;      Locals:         2       0       0       0       0       0       0
  4569 ;;      Temps:          1       0       0       0       0       0       0
  4570 ;;      Totals:         5       0       0       0       0       0       0
  4571 ;;Total ram usage:        5 bytes
  4572 ;; Hardware stack levels used: 1
  4573 ;; This function calls:
  4574 ;;		Nothing
  4575 ;; This function is called by:
  4576 ;;		_lcdCommand
  4577 ;;		_lcdInit
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           	psect	text31
  4582  0023E8                     __ptext31:
  4583                           	callstack 0
  4584  0023E8                     _delayMili:
  4585                           	callstack 28
  4586  0023E8                     
  4587                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  4588  0023E8  0E00               	movlw	0
  4589  0023EA  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  4590  0023EC  0E00               	movlw	0
  4591  0023EE  6E04               	movwf	delayMili@i^0,c	;volatile
  4592  0023F0  EFFC  F011         	goto	l2205
  4593  0023F4                     l2203:
  4594                           
  4595                           ;lcd.c: 15:  }
  4596  0023F4  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  4597  0023F6  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  4598  0023F8                     l2205:
  4599  0023F8  5001               	movf	delayMili@a^0,w,c
  4600  0023FA  5C04               	subwf	delayMili@i^0,w,c	;volatile
  4601  0023FC  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  4602  0023FE  0A80               	xorlw	128
  4603  002400  6E03               	movwf	??_delayMili^0,c
  4604  002402  5002               	movf	(delayMili@a+1)^0,w,c
  4605  002404  0A80               	xorlw	128
  4606  002406  5803               	subwfb	??_delayMili^0,w,c
  4607  002408  A0D8               	btfss	status,0,c
  4608  00240A  EF09  F012         	goto	u2191
  4609  00240E  EF0B  F012         	goto	u2190
  4610  002412                     u2191:
  4611  002412  EFFA  F011         	goto	l2203
  4612  002416                     u2190:
  4613  002416  0012               	return		;funcret
  4614  002418                     __end_of_delayMili:
  4615                           	callstack 0
  4616                           
  4617 ;; *************** function _kpInit *****************
  4618 ;; Defined at:
  4619 ;;		line 57 in file "keypad.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;		None
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;		None
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  1    wreg      void 
  4626 ;; Registers used:
  4627 ;;		wreg, status,2, status,0, cstack
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4633 ;;      Params:         0       0       0       0       0       0       0
  4634 ;;      Locals:         0       0       0       0       0       0       0
  4635 ;;      Temps:          0       0       0       0       0       0       0
  4636 ;;      Totals:         0       0       0       0       0       0       0
  4637 ;;Total ram usage:        0 bytes
  4638 ;; Hardware stack levels used: 1
  4639 ;; Hardware stack levels required when called: 2
  4640 ;; This function calls:
  4641 ;;		_pinMode
  4642 ;;		_soInit
  4643 ;; This function is called by:
  4644 ;;		_main
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           	psect	text32
  4649  0023B6                     __ptext32:
  4650                           	callstack 0
  4651  0023B6                     _kpInit:
  4652                           	callstack 28
  4653  0023B6                     
  4654                           ;keypad.c: 58:   soInit();
  4655  0023B6  EC9F  F011         	call	_soInit	;wreg free
  4656                           
  4657                           ;keypad.c: 59:   pinMode(PIN_B2, 1);
  4658  0023BA  0E00               	movlw	0
  4659  0023BC  6E02               	movwf	(pinMode@pin+1)^0,c
  4660  0023BE  0E0A               	movlw	10
  4661  0023C0  6E01               	movwf	pinMode@pin^0,c
  4662  0023C2  0E00               	movlw	0
  4663  0023C4  6E04               	movwf	(pinMode@type+1)^0,c
  4664  0023C6  0E01               	movlw	1
  4665  0023C8  6E03               	movwf	pinMode@type^0,c
  4666  0023CA  ECDF  F009         	call	_pinMode	;wreg free
  4667                           
  4668                           ;keypad.c: 60:   pinMode(PIN_B1, 1);
  4669  0023CE  0E00               	movlw	0
  4670  0023D0  6E02               	movwf	(pinMode@pin+1)^0,c
  4671  0023D2  0E09               	movlw	9
  4672  0023D4  6E01               	movwf	pinMode@pin^0,c
  4673  0023D6  0E00               	movlw	0
  4674  0023D8  6E04               	movwf	(pinMode@type+1)^0,c
  4675  0023DA  0E01               	movlw	1
  4676  0023DC  6E03               	movwf	pinMode@type^0,c
  4677  0023DE  ECDF  F009         	call	_pinMode	;wreg free
  4678  0023E2                     
  4679                           ;keypad.c: 61:   ADCON1 = 0b00001100;
  4680  0023E2  0E0C               	movlw	12
  4681  0023E4  6EC1               	movwf	193,c	;volatile
  4682  0023E6  0012               	return		;funcret
  4683  0023E8                     __end_of_kpInit:
  4684                           	callstack 0
  4685                           
  4686 ;; *************** function _soInit *****************
  4687 ;; Defined at:
  4688 ;;		line 3 in file "so.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;		None
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;		None
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  1    wreg      void 
  4695 ;; Registers used:
  4696 ;;		wreg, status,2, status,0, cstack
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4702 ;;      Params:         0       0       0       0       0       0       0
  4703 ;;      Locals:         0       0       0       0       0       0       0
  4704 ;;      Temps:          0       0       0       0       0       0       0
  4705 ;;      Totals:         0       0       0       0       0       0       0
  4706 ;;Total ram usage:        0 bytes
  4707 ;; Hardware stack levels used: 1
  4708 ;; Hardware stack levels required when called: 1
  4709 ;; This function calls:
  4710 ;;		_pinMode
  4711 ;; This function is called by:
  4712 ;;		_kpInit
  4713 ;;		_lcdInit
  4714 ;;		_ssdInit
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           	psect	text33
  4719  00233E                     __ptext33:
  4720                           	callstack 0
  4721  00233E                     _soInit:
  4722                           	callstack 28
  4723  00233E                     
  4724                           ;so.c: 4:  pinMode(PIN_D7, 0);
  4725  00233E  0E00               	movlw	0
  4726  002340  6E02               	movwf	(pinMode@pin+1)^0,c
  4727  002342  0E1F               	movlw	31
  4728  002344  6E01               	movwf	pinMode@pin^0,c
  4729  002346  0E00               	movlw	0
  4730  002348  6E04               	movwf	(pinMode@type+1)^0,c
  4731  00234A  0E00               	movlw	0
  4732  00234C  6E03               	movwf	pinMode@type^0,c
  4733  00234E  ECDF  F009         	call	_pinMode	;wreg free
  4734                           
  4735                           ;so.c: 5:  pinMode(PIN_B0, 0);
  4736  002352  0E00               	movlw	0
  4737  002354  6E02               	movwf	(pinMode@pin+1)^0,c
  4738  002356  0E08               	movlw	8
  4739  002358  6E01               	movwf	pinMode@pin^0,c
  4740  00235A  0E00               	movlw	0
  4741  00235C  6E04               	movwf	(pinMode@type+1)^0,c
  4742  00235E  0E00               	movlw	0
  4743  002360  6E03               	movwf	pinMode@type^0,c
  4744  002362  ECDF  F009         	call	_pinMode	;wreg free
  4745                           
  4746                           ;so.c: 6:  pinMode(PIN_D6, 0);
  4747  002366  0E00               	movlw	0
  4748  002368  6E02               	movwf	(pinMode@pin+1)^0,c
  4749  00236A  0E1E               	movlw	30
  4750  00236C  6E01               	movwf	pinMode@pin^0,c
  4751  00236E  0E00               	movlw	0
  4752  002370  6E04               	movwf	(pinMode@type+1)^0,c
  4753  002372  0E00               	movlw	0
  4754  002374  6E03               	movwf	pinMode@type^0,c
  4755  002376  ECDF  F009         	call	_pinMode	;wreg free
  4756  00237A  0012               	return		;funcret
  4757  00237C                     __end_of_soInit:
  4758                           	callstack 0
  4759                           
  4760 ;; *************** function _pinMode *****************
  4761 ;; Defined at:
  4762 ;;		line 54 in file "io.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;  pin             2    0[COMRAM] int 
  4765 ;;  type            2    2[COMRAM] int 
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;		None
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  1    wreg      void 
  4770 ;; Registers used:
  4771 ;;		wreg, status,2, status,0
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4777 ;;      Params:         4       0       0       0       0       0       0
  4778 ;;      Locals:         0       0       0       0       0       0       0
  4779 ;;      Temps:          2       0       0       0       0       0       0
  4780 ;;      Totals:         6       0       0       0       0       0       0
  4781 ;;Total ram usage:        6 bytes
  4782 ;; Hardware stack levels used: 1
  4783 ;; This function calls:
  4784 ;;		Nothing
  4785 ;; This function is called by:
  4786 ;;		_kpInit
  4787 ;;		_lcdInit
  4788 ;;		_soInit
  4789 ;;		_ssdInit
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text34
  4794  0013BE                     __ptext34:
  4795                           	callstack 0
  4796  0013BE                     _pinMode:
  4797                           	callstack 28
  4798  0013BE                     
  4799                           ;io.c: 56:     if(pin <8){
  4800  0013BE  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4801  0013C0  EFED  F009         	goto	u1990
  4802  0013C4  5002               	movf	(pinMode@pin+1)^0,w,c
  4803  0013C6  E107               	bnz	u1991
  4804  0013C8  0E08               	movlw	8
  4805  0013CA  5C01               	subwf	pinMode@pin^0,w,c
  4806  0013CC  B0D8               	btfsc	status,0,c
  4807  0013CE  EFEB  F009         	goto	u1991
  4808  0013D2  EFED  F009         	goto	u1990
  4809  0013D6                     u1991:
  4810  0013D6  EF17  F00A         	goto	l2169
  4811  0013DA                     u1990:
  4812  0013DA                     
  4813                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  4814  0013DA  5003               	movf	pinMode@type^0,w,c
  4815  0013DC  1004               	iorwf	(pinMode@type+1)^0,w,c
  4816  0013DE  B4D8               	btfsc	status,2,c
  4817  0013E0  EFF4  F009         	goto	u2001
  4818  0013E4  EFF6  F009         	goto	u2000
  4819  0013E8                     u2001:
  4820  0013E8  EF06  F00A         	goto	l2167
  4821  0013EC                     u2000:
  4822  0013EC  C001  F005         	movff	pinMode@pin,??_pinMode
  4823  0013F0  0E01               	movlw	1
  4824  0013F2  6E06               	movwf	(??_pinMode+1)^0,c
  4825  0013F4  2A05               	incf	??_pinMode^0,f,c
  4826  0013F6  EFFF  F009         	goto	u2014
  4827  0013FA                     u2015:
  4828  0013FA  90D8               	bcf	status,0,c
  4829  0013FC  3606               	rlcf	(??_pinMode+1)^0,f,c
  4830  0013FE                     u2014:
  4831  0013FE  2E05               	decfsz	??_pinMode^0,f,c
  4832  001400  EFFD  F009         	goto	u2015
  4833  001404  5006               	movf	(??_pinMode+1)^0,w,c
  4834  001406  1292               	iorwf	146,f,c	;volatile
  4835  001408  EF05  F00B         	goto	l188
  4836  00140C                     l2167:
  4837  00140C  C001  F005         	movff	pinMode@pin,??_pinMode
  4838  001410  0E01               	movlw	1
  4839  001412  6E06               	movwf	(??_pinMode+1)^0,c
  4840  001414  2A05               	incf	??_pinMode^0,f,c
  4841  001416  EF0F  F00A         	goto	u2024
  4842  00141A                     u2025:
  4843  00141A  90D8               	bcf	status,0,c
  4844  00141C  3606               	rlcf	(??_pinMode+1)^0,f,c
  4845  00141E                     u2024:
  4846  00141E  2E05               	decfsz	??_pinMode^0,f,c
  4847  001420  EF0D  F00A         	goto	u2025
  4848  001424  5006               	movf	(??_pinMode+1)^0,w,c
  4849  001426  0AFF               	xorlw	255
  4850  001428  1692               	andwf	146,f,c	;volatile
  4851  00142A  EF05  F00B         	goto	l188
  4852  00142E                     l2169:
  4853  00142E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4854  001430  EF25  F00A         	goto	u2030
  4855  001434  5002               	movf	(pinMode@pin+1)^0,w,c
  4856  001436  E107               	bnz	u2031
  4857  001438  0E10               	movlw	16
  4858  00143A  5C01               	subwf	pinMode@pin^0,w,c
  4859  00143C  B0D8               	btfsc	status,0,c
  4860  00143E  EF23  F00A         	goto	u2031
  4861  001442  EF25  F00A         	goto	u2030
  4862  001446                     u2031:
  4863  001446  EF53  F00A         	goto	l2177
  4864  00144A                     u2030:
  4865  00144A                     
  4866                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  4867  00144A  5003               	movf	pinMode@type^0,w,c
  4868  00144C  1004               	iorwf	(pinMode@type+1)^0,w,c
  4869  00144E  B4D8               	btfsc	status,2,c
  4870  001450  EF2C  F00A         	goto	u2041
  4871  001454  EF2E  F00A         	goto	u2040
  4872  001458                     u2041:
  4873  001458  EF40  F00A         	goto	l2175
  4874  00145C                     u2040:
  4875  00145C  C001  F005         	movff	pinMode@pin,??_pinMode
  4876  001460  0EF8               	movlw	-8
  4877  001462  2605               	addwf	??_pinMode^0,f,c
  4878  001464  0E01               	movlw	1
  4879  001466  6E06               	movwf	(??_pinMode+1)^0,c
  4880  001468  2A05               	incf	??_pinMode^0,f,c
  4881  00146A  EF39  F00A         	goto	u2054
  4882  00146E                     u2055:
  4883  00146E  90D8               	bcf	status,0,c
  4884  001470  3606               	rlcf	(??_pinMode+1)^0,f,c
  4885  001472                     u2054:
  4886  001472  2E05               	decfsz	??_pinMode^0,f,c
  4887  001474  EF37  F00A         	goto	u2055
  4888  001478  5006               	movf	(??_pinMode+1)^0,w,c
  4889  00147A  1293               	iorwf	147,f,c	;volatile
  4890  00147C  EF05  F00B         	goto	l188
  4891  001480                     l2175:
  4892  001480  C001  F005         	movff	pinMode@pin,??_pinMode
  4893  001484  0EF8               	movlw	-8
  4894  001486  2605               	addwf	??_pinMode^0,f,c
  4895  001488  0E01               	movlw	1
  4896  00148A  6E06               	movwf	(??_pinMode+1)^0,c
  4897  00148C  2A05               	incf	??_pinMode^0,f,c
  4898  00148E  EF4B  F00A         	goto	u2064
  4899  001492                     u2065:
  4900  001492  90D8               	bcf	status,0,c
  4901  001494  3606               	rlcf	(??_pinMode+1)^0,f,c
  4902  001496                     u2064:
  4903  001496  2E05               	decfsz	??_pinMode^0,f,c
  4904  001498  EF49  F00A         	goto	u2065
  4905  00149C  5006               	movf	(??_pinMode+1)^0,w,c
  4906  00149E  0AFF               	xorlw	255
  4907  0014A0  1693               	andwf	147,f,c	;volatile
  4908  0014A2  EF05  F00B         	goto	l188
  4909  0014A6                     l2177:
  4910  0014A6  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4911  0014A8  EF61  F00A         	goto	u2070
  4912  0014AC  5002               	movf	(pinMode@pin+1)^0,w,c
  4913  0014AE  E107               	bnz	u2071
  4914  0014B0  0E18               	movlw	24
  4915  0014B2  5C01               	subwf	pinMode@pin^0,w,c
  4916  0014B4  B0D8               	btfsc	status,0,c
  4917  0014B6  EF5F  F00A         	goto	u2071
  4918  0014BA  EF61  F00A         	goto	u2070
  4919  0014BE                     u2071:
  4920  0014BE  EF8F  F00A         	goto	l2185
  4921  0014C2                     u2070:
  4922  0014C2                     
  4923                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  4924  0014C2  5003               	movf	pinMode@type^0,w,c
  4925  0014C4  1004               	iorwf	(pinMode@type+1)^0,w,c
  4926  0014C6  B4D8               	btfsc	status,2,c
  4927  0014C8  EF68  F00A         	goto	u2081
  4928  0014CC  EF6A  F00A         	goto	u2080
  4929  0014D0                     u2081:
  4930  0014D0  EF7C  F00A         	goto	l2183
  4931  0014D4                     u2080:
  4932  0014D4  C001  F005         	movff	pinMode@pin,??_pinMode
  4933  0014D8  0EF0               	movlw	-16
  4934  0014DA  2605               	addwf	??_pinMode^0,f,c
  4935  0014DC  0E01               	movlw	1
  4936  0014DE  6E06               	movwf	(??_pinMode+1)^0,c
  4937  0014E0  2A05               	incf	??_pinMode^0,f,c
  4938  0014E2  EF75  F00A         	goto	u2094
  4939  0014E6                     u2095:
  4940  0014E6  90D8               	bcf	status,0,c
  4941  0014E8  3606               	rlcf	(??_pinMode+1)^0,f,c
  4942  0014EA                     u2094:
  4943  0014EA  2E05               	decfsz	??_pinMode^0,f,c
  4944  0014EC  EF73  F00A         	goto	u2095
  4945  0014F0  5006               	movf	(??_pinMode+1)^0,w,c
  4946  0014F2  1294               	iorwf	148,f,c	;volatile
  4947  0014F4  EF05  F00B         	goto	l188
  4948  0014F8                     l2183:
  4949  0014F8  C001  F005         	movff	pinMode@pin,??_pinMode
  4950  0014FC  0EF0               	movlw	-16
  4951  0014FE  2605               	addwf	??_pinMode^0,f,c
  4952  001500  0E01               	movlw	1
  4953  001502  6E06               	movwf	(??_pinMode+1)^0,c
  4954  001504  2A05               	incf	??_pinMode^0,f,c
  4955  001506  EF87  F00A         	goto	u2104
  4956  00150A                     u2105:
  4957  00150A  90D8               	bcf	status,0,c
  4958  00150C  3606               	rlcf	(??_pinMode+1)^0,f,c
  4959  00150E                     u2104:
  4960  00150E  2E05               	decfsz	??_pinMode^0,f,c
  4961  001510  EF85  F00A         	goto	u2105
  4962  001514  5006               	movf	(??_pinMode+1)^0,w,c
  4963  001516  0AFF               	xorlw	255
  4964  001518  1694               	andwf	148,f,c	;volatile
  4965  00151A  EF05  F00B         	goto	l188
  4966  00151E                     l2185:
  4967  00151E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4968  001520  EF9D  F00A         	goto	u2110
  4969  001524  5002               	movf	(pinMode@pin+1)^0,w,c
  4970  001526  E107               	bnz	u2111
  4971  001528  0E20               	movlw	32
  4972  00152A  5C01               	subwf	pinMode@pin^0,w,c
  4973  00152C  B0D8               	btfsc	status,0,c
  4974  00152E  EF9B  F00A         	goto	u2111
  4975  001532  EF9D  F00A         	goto	u2110
  4976  001536                     u2111:
  4977  001536  EFCB  F00A         	goto	l2193
  4978  00153A                     u2110:
  4979  00153A                     
  4980                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  4981  00153A  5003               	movf	pinMode@type^0,w,c
  4982  00153C  1004               	iorwf	(pinMode@type+1)^0,w,c
  4983  00153E  B4D8               	btfsc	status,2,c
  4984  001540  EFA4  F00A         	goto	u2121
  4985  001544  EFA6  F00A         	goto	u2120
  4986  001548                     u2121:
  4987  001548  EFB8  F00A         	goto	l2191
  4988  00154C                     u2120:
  4989  00154C  C001  F005         	movff	pinMode@pin,??_pinMode
  4990  001550  0EE8               	movlw	-24
  4991  001552  2605               	addwf	??_pinMode^0,f,c
  4992  001554  0E01               	movlw	1
  4993  001556  6E06               	movwf	(??_pinMode+1)^0,c
  4994  001558  2A05               	incf	??_pinMode^0,f,c
  4995  00155A  EFB1  F00A         	goto	u2134
  4996  00155E                     u2135:
  4997  00155E  90D8               	bcf	status,0,c
  4998  001560  3606               	rlcf	(??_pinMode+1)^0,f,c
  4999  001562                     u2134:
  5000  001562  2E05               	decfsz	??_pinMode^0,f,c
  5001  001564  EFAF  F00A         	goto	u2135
  5002  001568  5006               	movf	(??_pinMode+1)^0,w,c
  5003  00156A  1295               	iorwf	149,f,c	;volatile
  5004  00156C  EF05  F00B         	goto	l188
  5005  001570                     l2191:
  5006  001570  C001  F005         	movff	pinMode@pin,??_pinMode
  5007  001574  0EE8               	movlw	-24
  5008  001576  2605               	addwf	??_pinMode^0,f,c
  5009  001578  0E01               	movlw	1
  5010  00157A  6E06               	movwf	(??_pinMode+1)^0,c
  5011  00157C  2A05               	incf	??_pinMode^0,f,c
  5012  00157E  EFC3  F00A         	goto	u2144
  5013  001582                     u2145:
  5014  001582  90D8               	bcf	status,0,c
  5015  001584  3606               	rlcf	(??_pinMode+1)^0,f,c
  5016  001586                     u2144:
  5017  001586  2E05               	decfsz	??_pinMode^0,f,c
  5018  001588  EFC1  F00A         	goto	u2145
  5019  00158C  5006               	movf	(??_pinMode+1)^0,w,c
  5020  00158E  0AFF               	xorlw	255
  5021  001590  1695               	andwf	149,f,c	;volatile
  5022  001592  EF05  F00B         	goto	l188
  5023  001596                     l2193:
  5024  001596  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5025  001598  EFD9  F00A         	goto	u2150
  5026  00159C  5002               	movf	(pinMode@pin+1)^0,w,c
  5027  00159E  E107               	bnz	u2151
  5028  0015A0  0E28               	movlw	40
  5029  0015A2  5C01               	subwf	pinMode@pin^0,w,c
  5030  0015A4  B0D8               	btfsc	status,0,c
  5031  0015A6  EFD7  F00A         	goto	u2151
  5032  0015AA  EFD9  F00A         	goto	u2150
  5033  0015AE                     u2151:
  5034  0015AE  EF05  F00B         	goto	l188
  5035  0015B2                     u2150:
  5036  0015B2                     
  5037                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  5038  0015B2  5003               	movf	pinMode@type^0,w,c
  5039  0015B4  1004               	iorwf	(pinMode@type+1)^0,w,c
  5040  0015B6  B4D8               	btfsc	status,2,c
  5041  0015B8  EFE0  F00A         	goto	u2161
  5042  0015BC  EFE2  F00A         	goto	u2160
  5043  0015C0                     u2161:
  5044  0015C0  EFF4  F00A         	goto	l2199
  5045  0015C4                     u2160:
  5046  0015C4  C001  F005         	movff	pinMode@pin,??_pinMode
  5047  0015C8  0EE0               	movlw	-32
  5048  0015CA  2605               	addwf	??_pinMode^0,f,c
  5049  0015CC  0E01               	movlw	1
  5050  0015CE  6E06               	movwf	(??_pinMode+1)^0,c
  5051  0015D0  2A05               	incf	??_pinMode^0,f,c
  5052  0015D2  EFED  F00A         	goto	u2174
  5053  0015D6                     u2175:
  5054  0015D6  90D8               	bcf	status,0,c
  5055  0015D8  3606               	rlcf	(??_pinMode+1)^0,f,c
  5056  0015DA                     u2174:
  5057  0015DA  2E05               	decfsz	??_pinMode^0,f,c
  5058  0015DC  EFEB  F00A         	goto	u2175
  5059  0015E0  5006               	movf	(??_pinMode+1)^0,w,c
  5060  0015E2  1296               	iorwf	150,f,c	;volatile
  5061  0015E4  EF05  F00B         	goto	l188
  5062  0015E8                     l2199:
  5063  0015E8  C001  F005         	movff	pinMode@pin,??_pinMode
  5064  0015EC  0EE0               	movlw	-32
  5065  0015EE  2605               	addwf	??_pinMode^0,f,c
  5066  0015F0  0E01               	movlw	1
  5067  0015F2  6E06               	movwf	(??_pinMode+1)^0,c
  5068  0015F4  2A05               	incf	??_pinMode^0,f,c
  5069  0015F6  EFFF  F00A         	goto	u2184
  5070  0015FA                     u2185:
  5071  0015FA  90D8               	bcf	status,0,c
  5072  0015FC  3606               	rlcf	(??_pinMode+1)^0,f,c
  5073  0015FE                     u2184:
  5074  0015FE  2E05               	decfsz	??_pinMode^0,f,c
  5075  001600  EFFD  F00A         	goto	u2185
  5076  001604  5006               	movf	(??_pinMode+1)^0,w,c
  5077  001606  0AFF               	xorlw	255
  5078  001608  1696               	andwf	150,f,c	;volatile
  5079  00160A                     l188:
  5080  00160A  0012               	return		;funcret
  5081  00160C                     __end_of_pinMode:
  5082                           	callstack 0
  5083                           
  5084 ;; *************** function _comp *****************
  5085 ;; Defined at:
  5086 ;;		line 55 in file "newmain.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;		None
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;  a               1    2[COMRAM] unsigned char 
  5091 ;;  c               1    1[COMRAM] unsigned char 
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  1    wreg      unsigned char 
  5094 ;; Registers used:
  5095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5101 ;;      Params:         0       0       0       0       0       0       0
  5102 ;;      Locals:         2       0       0       0       0       0       0
  5103 ;;      Temps:          1       0       0       0       0       0       0
  5104 ;;      Totals:         3       0       0       0       0       0       0
  5105 ;;Total ram usage:        3 bytes
  5106 ;; Hardware stack levels used: 1
  5107 ;; This function calls:
  5108 ;;		Nothing
  5109 ;; This function is called by:
  5110 ;;		_main
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114                           	psect	text35
  5115  001E50                     __ptext35:
  5116                           	callstack 0
  5117  001E50                     _comp:
  5118                           	callstack 30
  5119  001E50                     
  5120                           ;newmain.c: 56:     char c = 0;
  5121  001E50  0E00               	movlw	0
  5122  001E52  6E02               	movwf	comp@c^0,c
  5123                           
  5124                           ;newmain.c: 57:     for (char a = 0; a < 4; a++) {
  5125  001E54  0E00               	movlw	0
  5126  001E56  6E03               	movwf	comp@a^0,c
  5127  001E58                     l1455:
  5128                           
  5129                           ;newmain.c: 58:         if ((savU[a] == User[a]) && (savP[a] == Passw[a])) {
  5130  001E58  0E27               	movlw	low _savU
  5131  001E5A  2403               	addwf	comp@a^0,w,c
  5132  001E5C  6ED9               	movwf	fsr2l,c
  5133  001E5E  6ADA               	clrf	fsr2h,c
  5134  001E60  0E00               	movlw	high _savU
  5135  001E62  22DA               	addwfc	fsr2h,f,c
  5136  001E64  50DF               	movf	indf2,w,c
  5137  001E66  6E01               	movwf	??_comp^0,c
  5138  001E68  0E20               	movlw	low _User
  5139  001E6A  2403               	addwf	comp@a^0,w,c
  5140  001E6C  6EF6               	movwf	tblptrl,c
  5141  001E6E  6AF7               	clrf	tblptrh,c
  5142  001E70  0E06               	movlw	high _User
  5143  001E72  22F7               	addwfc	tblptrh,f,c
  5144  001E74                     	if	0	;There are less than 3 active tblptr bytes
  5145  001E74                     	endif
  5146  001E74  0008               	tblrd		*
  5147  001E76  50F5               	movf	tablat,w,c
  5148  001E78  1801               	xorwf	??_comp^0,w,c
  5149  001E7A  A4D8               	btfss	status,2,c
  5150  001E7C  EF42  F00F         	goto	u811
  5151  001E80  EF44  F00F         	goto	u810
  5152  001E84                     u811:
  5153  001E84  EF5D  F00F         	goto	l59
  5154  001E88                     u810:
  5155  001E88  0E22               	movlw	low _savP
  5156  001E8A  2403               	addwf	comp@a^0,w,c
  5157  001E8C  6ED9               	movwf	fsr2l,c
  5158  001E8E  6ADA               	clrf	fsr2h,c
  5159  001E90  0E00               	movlw	high _savP
  5160  001E92  22DA               	addwfc	fsr2h,f,c
  5161  001E94  50DF               	movf	indf2,w,c
  5162  001E96  6E01               	movwf	??_comp^0,c
  5163  001E98  0E1B               	movlw	low _Passw
  5164  001E9A  2403               	addwf	comp@a^0,w,c
  5165  001E9C  6EF6               	movwf	tblptrl,c
  5166  001E9E  6AF7               	clrf	tblptrh,c
  5167  001EA0  0E06               	movlw	high _Passw
  5168  001EA2  22F7               	addwfc	tblptrh,f,c
  5169  001EA4                     	if	0	;There are less than 3 active tblptr bytes
  5170  001EA4                     	endif
  5171  001EA4  0008               	tblrd		*
  5172  001EA6  50F5               	movf	tablat,w,c
  5173  001EA8  1801               	xorwf	??_comp^0,w,c
  5174  001EAA  A4D8               	btfss	status,2,c
  5175  001EAC  EF5A  F00F         	goto	u821
  5176  001EB0  EF5C  F00F         	goto	u820
  5177  001EB4                     u821:
  5178  001EB4  EF5D  F00F         	goto	l59
  5179  001EB8                     u820:
  5180  001EB8                     
  5181                           ;newmain.c: 59:             c++;
  5182  001EB8  2A02               	incf	comp@c^0,f,c
  5183  001EBA                     l59:
  5184                           
  5185                           ;newmain.c: 61:     }
  5186  001EBA  2A03               	incf	comp@a^0,f,c
  5187  001EBC  0E03               	movlw	3
  5188  001EBE  6403               	cpfsgt	comp@a^0,c
  5189  001EC0  EF64  F00F         	goto	u831
  5190  001EC4  EF66  F00F         	goto	u830
  5191  001EC8                     u831:
  5192  001EC8  EF2C  F00F         	goto	l1455
  5193  001ECC                     u830:
  5194  001ECC                     
  5195                           ;newmain.c: 63:     if (c == 4) {
  5196  001ECC  0E04               	movlw	4
  5197  001ECE  1802               	xorwf	comp@c^0,w,c
  5198  001ED0  A4D8               	btfss	status,2,c
  5199  001ED2  EF6D  F00F         	goto	u841
  5200  001ED6  EF6F  F00F         	goto	u840
  5201  001EDA                     u841:
  5202  001EDA  EF72  F00F         	goto	l1471
  5203  001EDE                     u840:
  5204  001EDE                     
  5205                           ;newmain.c: 64:         return 1;
  5206  001EDE  0E01               	movlw	1
  5207  001EE0  EF73  F00F         	goto	l61
  5208  001EE4                     l1471:
  5209                           
  5210                           ;newmain.c: 66:         return 0;
  5211  001EE4  0E00               	movlw	0
  5212  001EE6                     l61:
  5213  001EE6  0012               	return		;funcret
  5214  001EE8                     __end_of_comp:
  5215                           	callstack 0
  5216                           
  5217 ;; *************** function ___flge *****************
  5218 ;; Defined at:
  5219 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  5220 ;; Parameters:    Size  Location     Type
  5221 ;;  ff1             4    0[COMRAM] unsigned char 
  5222 ;;  ff2             4    4[COMRAM] unsigned char 
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;		None
  5225 ;; Return value:  Size  Location     Type
  5226 ;;		None               void
  5227 ;; Registers used:
  5228 ;;		wreg, status,2, status,0
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5234 ;;      Params:         8       0       0       0       0       0       0
  5235 ;;      Locals:         0       0       0       0       0       0       0
  5236 ;;      Temps:          4       0       0       0       0       0       0
  5237 ;;      Totals:        12       0       0       0       0       0       0
  5238 ;;Total ram usage:       12 bytes
  5239 ;; Hardware stack levels used: 1
  5240 ;; This function calls:
  5241 ;;		Nothing
  5242 ;; This function is called by:
  5243 ;;		_main
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           	psect	text36
  5248  001B24                     __ptext36:
  5249                           	callstack 0
  5250  001B24                     ___flge:
  5251                           	callstack 30
  5252  001B24  0E00               	movlw	0
  5253  001B26  1401               	andwf	___flge@ff1^0,w,c
  5254  001B28  6E09               	movwf	??___flge^0,c
  5255  001B2A  0E00               	movlw	0
  5256  001B2C  1402               	andwf	(___flge@ff1+1)^0,w,c
  5257  001B2E  6E0A               	movwf	(??___flge+1)^0,c
  5258  001B30  0E80               	movlw	128
  5259  001B32  1403               	andwf	(___flge@ff1+2)^0,w,c
  5260  001B34  6E0B               	movwf	(??___flge+2)^0,c
  5261  001B36  0E7F               	movlw	127
  5262  001B38  1404               	andwf	(___flge@ff1+3)^0,w,c
  5263  001B3A  6E0C               	movwf	(??___flge+3)^0,c
  5264  001B3C  5009               	movf	??___flge^0,w,c
  5265  001B3E  100A               	iorwf	(??___flge+1)^0,w,c
  5266  001B40  100B               	iorwf	(??___flge+2)^0,w,c
  5267  001B42  100C               	iorwf	(??___flge+3)^0,w,c
  5268  001B44  A4D8               	btfss	status,2,c
  5269  001B46  EFA7  F00D         	goto	u3001
  5270  001B4A  EFA9  F00D         	goto	u3000
  5271  001B4E                     u3001:
  5272  001B4E  EFB1  F00D         	goto	l2779
  5273  001B52                     u3000:
  5274  001B52  0E00               	movlw	0
  5275  001B54  6E01               	movwf	___flge@ff1^0,c
  5276  001B56  0E00               	movlw	0
  5277  001B58  6E02               	movwf	(___flge@ff1+1)^0,c
  5278  001B5A  0E00               	movlw	0
  5279  001B5C  6E03               	movwf	(___flge@ff1+2)^0,c
  5280  001B5E  0E00               	movlw	0
  5281  001B60  6E04               	movwf	(___flge@ff1+3)^0,c
  5282  001B62                     l2779:
  5283  001B62  0E00               	movlw	0
  5284  001B64  1405               	andwf	___flge@ff2^0,w,c
  5285  001B66  6E09               	movwf	??___flge^0,c
  5286  001B68  0E00               	movlw	0
  5287  001B6A  1406               	andwf	(___flge@ff2+1)^0,w,c
  5288  001B6C  6E0A               	movwf	(??___flge+1)^0,c
  5289  001B6E  0E80               	movlw	128
  5290  001B70  1407               	andwf	(___flge@ff2+2)^0,w,c
  5291  001B72  6E0B               	movwf	(??___flge+2)^0,c
  5292  001B74  0E7F               	movlw	127
  5293  001B76  1408               	andwf	(___flge@ff2+3)^0,w,c
  5294  001B78  6E0C               	movwf	(??___flge+3)^0,c
  5295  001B7A  5009               	movf	??___flge^0,w,c
  5296  001B7C  100A               	iorwf	(??___flge+1)^0,w,c
  5297  001B7E  100B               	iorwf	(??___flge+2)^0,w,c
  5298  001B80  100C               	iorwf	(??___flge+3)^0,w,c
  5299  001B82  A4D8               	btfss	status,2,c
  5300  001B84  EFC6  F00D         	goto	u3011
  5301  001B88  EFC8  F00D         	goto	u3010
  5302  001B8C                     u3011:
  5303  001B8C  EFD0  F00D         	goto	l2783
  5304  001B90                     u3010:
  5305  001B90  0E00               	movlw	0
  5306  001B92  6E05               	movwf	___flge@ff2^0,c
  5307  001B94  0E00               	movlw	0
  5308  001B96  6E06               	movwf	(___flge@ff2+1)^0,c
  5309  001B98  0E00               	movlw	0
  5310  001B9A  6E07               	movwf	(___flge@ff2+2)^0,c
  5311  001B9C  0E00               	movlw	0
  5312  001B9E  6E08               	movwf	(___flge@ff2+3)^0,c
  5313  001BA0                     l2783:
  5314  001BA0  AE04               	btfss	(___flge@ff1+3)^0,7,c
  5315  001BA2  EFD5  F00D         	goto	u3021
  5316  001BA6  EFD7  F00D         	goto	u3020
  5317  001BAA                     u3021:
  5318  001BAA  EFE0  F00D         	goto	l2787
  5319  001BAE                     u3020:
  5320  001BAE  6C01               	negf	___flge@ff1^0,c
  5321  001BB0  1E02               	comf	(___flge@ff1+1)^0,f,c
  5322  001BB2  B0D8               	btfsc	status,0,c
  5323  001BB4  2A02               	incf	(___flge@ff1+1)^0,f,c
  5324  001BB6  1E03               	comf	(___flge@ff1+2)^0,f,c
  5325  001BB8  B0D8               	btfsc	status,0,c
  5326  001BBA  2A03               	incf	(___flge@ff1+2)^0,f,c
  5327  001BBC  0E80               	movlw	128
  5328  001BBE  5604               	subfwb	(___flge@ff1+3)^0,f,c
  5329  001BC0                     l2787:
  5330  001BC0  AE08               	btfss	(___flge@ff2+3)^0,7,c
  5331  001BC2  EFE5  F00D         	goto	u3031
  5332  001BC6  EFE7  F00D         	goto	u3030
  5333  001BCA                     u3031:
  5334  001BCA  EFF0  F00D         	goto	l653
  5335  001BCE                     u3030:
  5336  001BCE  6C05               	negf	___flge@ff2^0,c
  5337  001BD0  1E06               	comf	(___flge@ff2+1)^0,f,c
  5338  001BD2  B0D8               	btfsc	status,0,c
  5339  001BD4  2A06               	incf	(___flge@ff2+1)^0,f,c
  5340  001BD6  1E07               	comf	(___flge@ff2+2)^0,f,c
  5341  001BD8  B0D8               	btfsc	status,0,c
  5342  001BDA  2A07               	incf	(___flge@ff2+2)^0,f,c
  5343  001BDC  0E80               	movlw	128
  5344  001BDE  5608               	subfwb	(___flge@ff2+3)^0,f,c
  5345  001BE0                     l653:
  5346  001BE0  0E00               	movlw	0
  5347  001BE2  1A01               	xorwf	___flge@ff1^0,f,c
  5348  001BE4  0E00               	movlw	0
  5349  001BE6  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  5350  001BE8  0E00               	movlw	0
  5351  001BEA  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  5352  001BEC  0E80               	movlw	128
  5353  001BEE  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  5354  001BF0  0E00               	movlw	0
  5355  001BF2  1A05               	xorwf	___flge@ff2^0,f,c
  5356  001BF4  0E00               	movlw	0
  5357  001BF6  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  5358  001BF8  0E00               	movlw	0
  5359  001BFA  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  5360  001BFC  0E80               	movlw	128
  5361  001BFE  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  5362  001C00  5005               	movf	___flge@ff2^0,w,c
  5363  001C02  5C01               	subwf	___flge@ff1^0,w,c
  5364  001C04  5006               	movf	(___flge@ff2+1)^0,w,c
  5365  001C06  5802               	subwfb	(___flge@ff1+1)^0,w,c
  5366  001C08  5007               	movf	(___flge@ff2+2)^0,w,c
  5367  001C0A  5803               	subwfb	(___flge@ff1+2)^0,w,c
  5368  001C0C  5008               	movf	(___flge@ff2+3)^0,w,c
  5369  001C0E  5804               	subwfb	(___flge@ff1+3)^0,w,c
  5370  001C10  B0D8               	btfsc	status,0,c
  5371  001C12  EF0D  F00E         	goto	u3041
  5372  001C16  EF0F  F00E         	goto	u3040
  5373  001C1A                     u3041:
  5374  001C1A  EF12  F00E         	goto	l2793
  5375  001C1E                     u3040:
  5376  001C1E  90D8               	bcf	status,0,c
  5377  001C20  EF13  F00E         	goto	l658
  5378  001C24                     l2793:
  5379  001C24  80D8               	bsf	status,0,c
  5380  001C26                     l658:
  5381  001C26  0012               	return		;funcret
  5382  001C28                     __end_of___flge:
  5383                           	callstack 0
  5384                           
  5385 ;; *************** function ___fladd *****************
  5386 ;; Defined at:
  5387 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;  b               4    0[COMRAM] unsigned char 
  5390 ;;  a               4    4[COMRAM] unsigned char 
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  grs             1   15[COMRAM] unsigned char 
  5393 ;;  bexp            1   14[COMRAM] unsigned char 
  5394 ;;  aexp            1   13[COMRAM] unsigned char 
  5395 ;;  signs           1   12[COMRAM] unsigned char 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  4    0[COMRAM] unsigned char 
  5398 ;; Registers used:
  5399 ;;		wreg, status,2, status,0
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5405 ;;      Params:         8       0       0       0       0       0       0
  5406 ;;      Locals:         4       0       0       0       0       0       0
  5407 ;;      Temps:          4       0       0       0       0       0       0
  5408 ;;      Totals:        16       0       0       0       0       0       0
  5409 ;;Total ram usage:       16 bytes
  5410 ;; Hardware stack levels used: 1
  5411 ;; This function calls:
  5412 ;;		Nothing
  5413 ;; This function is called by:
  5414 ;;		_main
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418                           	psect	text37
  5419  000CB0                     __ptext37:
  5420                           	callstack 0
  5421  000CB0                     ___fladd:
  5422                           	callstack 30
  5423  000CB0  5004               	movf	(___fladd@b+3)^0,w,c
  5424  000CB2  0B80               	andlw	128
  5425  000CB4  6E0D               	movwf	___fladd@signs^0,c
  5426  000CB6  5004               	movf	(___fladd@b+3)^0,w,c
  5427  000CB8  2404               	addwf	(___fladd@b+3)^0,w,c
  5428  000CBA  6E0F               	movwf	___fladd@bexp^0,c
  5429  000CBC  AE03               	btfss	(___fladd@b+2)^0,7,c
  5430  000CBE  EF63  F006         	goto	u2491
  5431  000CC2  EF65  F006         	goto	u2490
  5432  000CC6                     u2491:
  5433  000CC6  EF66  F006         	goto	l2499
  5434  000CCA                     u2490:
  5435  000CCA  800F               	bsf	___fladd@bexp^0,0,c
  5436  000CCC                     l2499:
  5437  000CCC  500F               	movf	___fladd@bexp^0,w,c
  5438  000CCE  B4D8               	btfsc	status,2,c
  5439  000CD0  EF6C  F006         	goto	u2501
  5440  000CD4  EF6E  F006         	goto	u2500
  5441  000CD8                     u2501:
  5442  000CD8  EF83  F006         	goto	l2509
  5443  000CDC                     u2500:
  5444  000CDC  280F               	incf	___fladd@bexp^0,w,c
  5445  000CDE  A4D8               	btfss	status,2,c
  5446  000CE0  EF74  F006         	goto	u2511
  5447  000CE4  EF76  F006         	goto	u2510
  5448  000CE8                     u2511:
  5449  000CE8  EF7E  F006         	goto	l2505
  5450  000CEC                     u2510:
  5451  000CEC  0E00               	movlw	0
  5452  000CEE  6E01               	movwf	___fladd@b^0,c
  5453  000CF0  0E00               	movlw	0
  5454  000CF2  6E02               	movwf	(___fladd@b+1)^0,c
  5455  000CF4  0E00               	movlw	0
  5456  000CF6  6E03               	movwf	(___fladd@b+2)^0,c
  5457  000CF8  0E00               	movlw	0
  5458  000CFA  6E04               	movwf	(___fladd@b+3)^0,c
  5459  000CFC                     l2505:
  5460  000CFC  8E03               	bsf	(___fladd@b+2)^0,7,c
  5461  000CFE  0E00               	movlw	0
  5462  000D00  6E04               	movwf	(___fladd@b+3)^0,c
  5463  000D02  EF8B  F006         	goto	l2511
  5464  000D06                     l2509:
  5465  000D06  0E00               	movlw	0
  5466  000D08  6E01               	movwf	___fladd@b^0,c
  5467  000D0A  0E00               	movlw	0
  5468  000D0C  6E02               	movwf	(___fladd@b+1)^0,c
  5469  000D0E  0E00               	movlw	0
  5470  000D10  6E03               	movwf	(___fladd@b+2)^0,c
  5471  000D12  0E00               	movlw	0
  5472  000D14  6E04               	movwf	(___fladd@b+3)^0,c
  5473  000D16                     l2511:
  5474  000D16  5008               	movf	(___fladd@a+3)^0,w,c
  5475  000D18  0B80               	andlw	128
  5476  000D1A  6E0E               	movwf	___fladd@aexp^0,c
  5477  000D1C  500D               	movf	___fladd@signs^0,w,c
  5478  000D1E  180E               	xorwf	___fladd@aexp^0,w,c
  5479  000D20  B4D8               	btfsc	status,2,c
  5480  000D22  EF95  F006         	goto	u2521
  5481  000D26  EF97  F006         	goto	u2520
  5482  000D2A                     u2521:
  5483  000D2A  EF98  F006         	goto	l2517
  5484  000D2E                     u2520:
  5485  000D2E  8C0D               	bsf	___fladd@signs^0,6,c
  5486  000D30                     l2517:
  5487  000D30  5008               	movf	(___fladd@a+3)^0,w,c
  5488  000D32  2408               	addwf	(___fladd@a+3)^0,w,c
  5489  000D34  6E0E               	movwf	___fladd@aexp^0,c
  5490  000D36  AE07               	btfss	(___fladd@a+2)^0,7,c
  5491  000D38  EFA0  F006         	goto	u2531
  5492  000D3C  EFA2  F006         	goto	u2530
  5493  000D40                     u2531:
  5494  000D40  EFA3  F006         	goto	l2523
  5495  000D44                     u2530:
  5496  000D44  800E               	bsf	___fladd@aexp^0,0,c
  5497  000D46                     l2523:
  5498  000D46  500E               	movf	___fladd@aexp^0,w,c
  5499  000D48  B4D8               	btfsc	status,2,c
  5500  000D4A  EFA9  F006         	goto	u2541
  5501  000D4E  EFAB  F006         	goto	u2540
  5502  000D52                     u2541:
  5503  000D52  EFC0  F006         	goto	l2533
  5504  000D56                     u2540:
  5505  000D56  280E               	incf	___fladd@aexp^0,w,c
  5506  000D58  A4D8               	btfss	status,2,c
  5507  000D5A  EFB1  F006         	goto	u2551
  5508  000D5E  EFB3  F006         	goto	u2550
  5509  000D62                     u2551:
  5510  000D62  EFBB  F006         	goto	l2529
  5511  000D66                     u2550:
  5512  000D66  0E00               	movlw	0
  5513  000D68  6E05               	movwf	___fladd@a^0,c
  5514  000D6A  0E00               	movlw	0
  5515  000D6C  6E06               	movwf	(___fladd@a+1)^0,c
  5516  000D6E  0E00               	movlw	0
  5517  000D70  6E07               	movwf	(___fladd@a+2)^0,c
  5518  000D72  0E00               	movlw	0
  5519  000D74  6E08               	movwf	(___fladd@a+3)^0,c
  5520  000D76                     l2529:
  5521  000D76  8E07               	bsf	(___fladd@a+2)^0,7,c
  5522  000D78  0E00               	movlw	0
  5523  000D7A  6E08               	movwf	(___fladd@a+3)^0,c
  5524  000D7C  EFC8  F006         	goto	l2535
  5525  000D80                     l2533:
  5526  000D80  0E00               	movlw	0
  5527  000D82  6E05               	movwf	___fladd@a^0,c
  5528  000D84  0E00               	movlw	0
  5529  000D86  6E06               	movwf	(___fladd@a+1)^0,c
  5530  000D88  0E00               	movlw	0
  5531  000D8A  6E07               	movwf	(___fladd@a+2)^0,c
  5532  000D8C  0E00               	movlw	0
  5533  000D8E  6E08               	movwf	(___fladd@a+3)^0,c
  5534  000D90                     l2535:
  5535  000D90  500F               	movf	___fladd@bexp^0,w,c
  5536  000D92  5C0E               	subwf	___fladd@aexp^0,w,c
  5537  000D94  B0D8               	btfsc	status,0,c
  5538  000D96  EFCF  F006         	goto	u2561
  5539  000D9A  EFD1  F006         	goto	u2560
  5540  000D9E                     u2561:
  5541  000D9E  EFF8  F006         	goto	l2571
  5542  000DA2                     u2560:
  5543  000DA2  AC0D               	btfss	___fladd@signs^0,6,c
  5544  000DA4  EFD6  F006         	goto	u2571
  5545  000DA8  EFD8  F006         	goto	u2570
  5546  000DAC                     u2571:
  5547  000DAC  EFDA  F006         	goto	l2541
  5548  000DB0                     u2570:
  5549  000DB0  0E80               	movlw	128
  5550  000DB2  1A0D               	xorwf	___fladd@signs^0,f,c
  5551  000DB4                     l2541:
  5552  000DB4  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5553  000DB8  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5554  000DBC  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5555  000DC0  C001  F010         	movff	___fladd@b,___fladd@grs
  5556  000DC4  C005  F001         	movff	___fladd@a,___fladd@b
  5557  000DC8  C010  F005         	movff	___fladd@grs,___fladd@a
  5558  000DCC  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5559  000DD0  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5560  000DD4  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5561  000DD8  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5562  000DDC  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5563  000DE0  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5564  000DE4  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5565  000DE8  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5566  000DEC  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5567  000DF0                     l2571:
  5568  000DF0  0E00               	movlw	0
  5569  000DF2  6E10               	movwf	___fladd@grs^0,c
  5570  000DF4  500F               	movf	___fladd@bexp^0,w,c
  5571  000DF6  C00E  F009         	movff	___fladd@aexp,??___fladd
  5572  000DFA  6A0A               	clrf	(??___fladd+1)^0,c
  5573  000DFC  5E09               	subwf	??___fladd^0,f,c
  5574  000DFE  0E00               	movlw	0
  5575  000E00  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5576  000E02  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5577  000E04  EF0D  F007         	goto	u2581
  5578  000E08  500A               	movf	(??___fladd+1)^0,w,c
  5579  000E0A  E109               	bnz	u2580
  5580  000E0C  0E1A               	movlw	26
  5581  000E0E  5C09               	subwf	??___fladd^0,w,c
  5582  000E10  A0D8               	btfss	status,0,c
  5583  000E12  EF0D  F007         	goto	u2581
  5584  000E16  EF0F  F007         	goto	u2580
  5585  000E1A                     u2581:
  5586  000E1A  EF46  F007         	goto	l917
  5587  000E1E                     u2580:
  5588  000E1E  5001               	movf	___fladd@b^0,w,c
  5589  000E20  1002               	iorwf	(___fladd@b+1)^0,w,c
  5590  000E22  1003               	iorwf	(___fladd@b+2)^0,w,c
  5591  000E24  1004               	iorwf	(___fladd@b+3)^0,w,c
  5592  000E26  A4D8               	btfss	status,2,c
  5593  000E28  EF18  F007         	goto	u2591
  5594  000E2C  EF1B  F007         	goto	u2590
  5595  000E30                     u2591:
  5596  000E30  0E01               	movlw	1
  5597  000E32  EF1C  F007         	goto	u2600
  5598  000E36                     u2590:
  5599  000E36  0E00               	movlw	0
  5600  000E38                     u2600:
  5601  000E38  6E10               	movwf	___fladd@grs^0,c
  5602  000E3A  0E00               	movlw	0
  5603  000E3C  6E01               	movwf	___fladd@b^0,c
  5604  000E3E  0E00               	movlw	0
  5605  000E40  6E02               	movwf	(___fladd@b+1)^0,c
  5606  000E42  0E00               	movlw	0
  5607  000E44  6E03               	movwf	(___fladd@b+2)^0,c
  5608  000E46  0E00               	movlw	0
  5609  000E48  6E04               	movwf	(___fladd@b+3)^0,c
  5610  000E4A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5611  000E4E  EF4F  F007         	goto	l916
  5612  000E52                     l918:
  5613  000E52  A010               	btfss	___fladd@grs^0,0,c
  5614  000E54  EF2E  F007         	goto	u2611
  5615  000E58  EF30  F007         	goto	u2610
  5616  000E5C                     u2611:
  5617  000E5C  EF36  F007         	goto	l2583
  5618  000E60                     u2610:
  5619  000E60  90D8               	bcf	status,0,c
  5620  000E62  3010               	rrcf	___fladd@grs^0,w,c
  5621  000E64  0901               	iorlw	1
  5622  000E66  6E10               	movwf	___fladd@grs^0,c
  5623  000E68  EF38  F007         	goto	l2585
  5624  000E6C                     l2583:
  5625  000E6C  90D8               	bcf	status,0,c
  5626  000E6E  3210               	rrcf	___fladd@grs^0,f,c
  5627  000E70                     l2585:
  5628  000E70  A001               	btfss	___fladd@b^0,0,c
  5629  000E72  EF3D  F007         	goto	u2621
  5630  000E76  EF3F  F007         	goto	u2620
  5631  000E7A                     u2621:
  5632  000E7A  EF40  F007         	goto	l2589
  5633  000E7E                     u2620:
  5634  000E7E  8E10               	bsf	___fladd@grs^0,7,c
  5635  000E80                     l2589:
  5636  000E80  3404               	rlcf	(___fladd@b+3)^0,w,c
  5637  000E82  3204               	rrcf	(___fladd@b+3)^0,f,c
  5638  000E84  3203               	rrcf	(___fladd@b+2)^0,f,c
  5639  000E86  3202               	rrcf	(___fladd@b+1)^0,f,c
  5640  000E88  3201               	rrcf	___fladd@b^0,f,c
  5641  000E8A  2A0F               	incf	___fladd@bexp^0,f,c
  5642  000E8C                     l917:
  5643  000E8C  500E               	movf	___fladd@aexp^0,w,c
  5644  000E8E  5C0F               	subwf	___fladd@bexp^0,w,c
  5645  000E90  A0D8               	btfss	status,0,c
  5646  000E92  EF4D  F007         	goto	u2631
  5647  000E96  EF4F  F007         	goto	u2630
  5648  000E9A                     u2631:
  5649  000E9A  EF29  F007         	goto	l918
  5650  000E9E                     u2630:
  5651  000E9E                     l916:
  5652  000E9E  BC0D               	btfsc	___fladd@signs^0,6,c
  5653  000EA0  EF54  F007         	goto	u2641
  5654  000EA4  EF56  F007         	goto	u2640
  5655  000EA8                     u2641:
  5656  000EA8  EF96  F007         	goto	l2617
  5657  000EAC                     u2640:
  5658  000EAC  500F               	movf	___fladd@bexp^0,w,c
  5659  000EAE  A4D8               	btfss	status,2,c
  5660  000EB0  EF5C  F007         	goto	u2651
  5661  000EB4  EF5E  F007         	goto	u2650
  5662  000EB8                     u2651:
  5663  000EB8  EF68  F007         	goto	l2599
  5664  000EBC                     u2650:
  5665  000EBC  0E00               	movlw	0
  5666  000EBE  6E01               	movwf	?___fladd^0,c
  5667  000EC0  0E00               	movlw	0
  5668  000EC2  6E02               	movwf	(?___fladd+1)^0,c
  5669  000EC4  0E00               	movlw	0
  5670  000EC6  6E03               	movwf	(?___fladd+2)^0,c
  5671  000EC8  0E00               	movlw	0
  5672  000ECA  6E04               	movwf	(?___fladd+3)^0,c
  5673  000ECC  EFB7  F008         	goto	l925
  5674  000ED0                     l2599:
  5675  000ED0  5005               	movf	___fladd@a^0,w,c
  5676  000ED2  2601               	addwf	___fladd@b^0,f,c
  5677  000ED4  5006               	movf	(___fladd@a+1)^0,w,c
  5678  000ED6  2202               	addwfc	(___fladd@b+1)^0,f,c
  5679  000ED8  5007               	movf	(___fladd@a+2)^0,w,c
  5680  000EDA  2203               	addwfc	(___fladd@b+2)^0,f,c
  5681  000EDC  5008               	movf	(___fladd@a+3)^0,w,c
  5682  000EDE  2204               	addwfc	(___fladd@b+3)^0,f,c
  5683  000EE0  A004               	btfss	(___fladd@b+3)^0,0,c
  5684  000EE2  EF75  F007         	goto	u2661
  5685  000EE6  EF77  F007         	goto	u2660
  5686  000EEA                     u2661:
  5687  000EEA  EF23  F008         	goto	l2653
  5688  000EEE                     u2660:
  5689  000EEE  A010               	btfss	___fladd@grs^0,0,c
  5690  000EF0  EF7C  F007         	goto	u2671
  5691  000EF4  EF7E  F007         	goto	u2670
  5692  000EF8                     u2671:
  5693  000EF8  EF84  F007         	goto	l2607
  5694  000EFC                     u2670:
  5695  000EFC  90D8               	bcf	status,0,c
  5696  000EFE  3010               	rrcf	___fladd@grs^0,w,c
  5697  000F00  0901               	iorlw	1
  5698  000F02  6E10               	movwf	___fladd@grs^0,c
  5699  000F04  EF86  F007         	goto	l2609
  5700  000F08                     l2607:
  5701  000F08  90D8               	bcf	status,0,c
  5702  000F0A  3210               	rrcf	___fladd@grs^0,f,c
  5703  000F0C                     l2609:
  5704  000F0C  A001               	btfss	___fladd@b^0,0,c
  5705  000F0E  EF8B  F007         	goto	u2681
  5706  000F12  EF8D  F007         	goto	u2680
  5707  000F16                     u2681:
  5708  000F16  EF8E  F007         	goto	l2613
  5709  000F1A                     u2680:
  5710  000F1A  8E10               	bsf	___fladd@grs^0,7,c
  5711  000F1C                     l2613:
  5712  000F1C  3404               	rlcf	(___fladd@b+3)^0,w,c
  5713  000F1E  3204               	rrcf	(___fladd@b+3)^0,f,c
  5714  000F20  3203               	rrcf	(___fladd@b+2)^0,f,c
  5715  000F22  3202               	rrcf	(___fladd@b+1)^0,f,c
  5716  000F24  3201               	rrcf	___fladd@b^0,f,c
  5717  000F26  2A0F               	incf	___fladd@bexp^0,f,c
  5718  000F28  EF23  F008         	goto	l2653
  5719  000F2C                     l2617:
  5720  000F2C  5005               	movf	___fladd@a^0,w,c
  5721  000F2E  5C01               	subwf	___fladd@b^0,w,c
  5722  000F30  5006               	movf	(___fladd@a+1)^0,w,c
  5723  000F32  5802               	subwfb	(___fladd@b+1)^0,w,c
  5724  000F34  5007               	movf	(___fladd@a+2)^0,w,c
  5725  000F36  5803               	subwfb	(___fladd@b+2)^0,w,c
  5726  000F38  5004               	movf	(___fladd@b+3)^0,w,c
  5727  000F3A  0A80               	xorlw	128
  5728  000F3C  6E09               	movwf	??___fladd^0,c
  5729  000F3E  5008               	movf	(___fladd@a+3)^0,w,c
  5730  000F40  0A80               	xorlw	128
  5731  000F42  5809               	subwfb	??___fladd^0,w,c
  5732  000F44  B0D8               	btfsc	status,0,c
  5733  000F46  EFA7  F007         	goto	u2691
  5734  000F4A  EFA9  F007         	goto	u2690
  5735  000F4E                     u2691:
  5736  000F4E  EFD4  F007         	goto	l2627
  5737  000F52                     u2690:
  5738  000F52  5001               	movf	___fladd@b^0,w,c
  5739  000F54  5C05               	subwf	___fladd@a^0,w,c
  5740  000F56  6E09               	movwf	??___fladd^0,c
  5741  000F58  5002               	movf	(___fladd@b+1)^0,w,c
  5742  000F5A  5806               	subwfb	(___fladd@a+1)^0,w,c
  5743  000F5C  6E0A               	movwf	(??___fladd+1)^0,c
  5744  000F5E  5003               	movf	(___fladd@b+2)^0,w,c
  5745  000F60  5807               	subwfb	(___fladd@a+2)^0,w,c
  5746  000F62  6E0B               	movwf	(??___fladd+2)^0,c
  5747  000F64  5004               	movf	(___fladd@b+3)^0,w,c
  5748  000F66  5808               	subwfb	(___fladd@a+3)^0,w,c
  5749  000F68  6E0C               	movwf	(??___fladd+3)^0,c
  5750  000F6A  0EFF               	movlw	255
  5751  000F6C  2409               	addwf	??___fladd^0,w,c
  5752  000F6E  6E01               	movwf	___fladd@b^0,c
  5753  000F70  0EFF               	movlw	255
  5754  000F72  200A               	addwfc	(??___fladd+1)^0,w,c
  5755  000F74  6E02               	movwf	(___fladd@b+1)^0,c
  5756  000F76  0EFF               	movlw	255
  5757  000F78  200B               	addwfc	(??___fladd+2)^0,w,c
  5758  000F7A  6E03               	movwf	(___fladd@b+2)^0,c
  5759  000F7C  0EFF               	movlw	255
  5760  000F7E  200C               	addwfc	(??___fladd+3)^0,w,c
  5761  000F80  6E04               	movwf	(___fladd@b+3)^0,c
  5762  000F82  0E80               	movlw	128
  5763  000F84  1A0D               	xorwf	___fladd@signs^0,f,c
  5764  000F86  6C10               	negf	___fladd@grs^0,c
  5765  000F88  5010               	movf	___fladd@grs^0,w,c
  5766  000F8A  A4D8               	btfss	status,2,c
  5767  000F8C  EFCA  F007         	goto	u2701
  5768  000F90  EFCC  F007         	goto	u2700
  5769  000F94                     u2701:
  5770  000F94  EFDC  F007         	goto	l933
  5771  000F98                     u2700:
  5772  000F98  0E01               	movlw	1
  5773  000F9A  2601               	addwf	___fladd@b^0,f,c
  5774  000F9C  0E00               	movlw	0
  5775  000F9E  2202               	addwfc	(___fladd@b+1)^0,f,c
  5776  000FA0  2203               	addwfc	(___fladd@b+2)^0,f,c
  5777  000FA2  2204               	addwfc	(___fladd@b+3)^0,f,c
  5778  000FA4  EFDC  F007         	goto	l933
  5779  000FA8                     l2627:
  5780  000FA8  5005               	movf	___fladd@a^0,w,c
  5781  000FAA  5E01               	subwf	___fladd@b^0,f,c
  5782  000FAC  5006               	movf	(___fladd@a+1)^0,w,c
  5783  000FAE  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5784  000FB0  5007               	movf	(___fladd@a+2)^0,w,c
  5785  000FB2  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5786  000FB4  5008               	movf	(___fladd@a+3)^0,w,c
  5787  000FB6  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5788  000FB8                     l933:
  5789  000FB8  5001               	movf	___fladd@b^0,w,c
  5790  000FBA  1002               	iorwf	(___fladd@b+1)^0,w,c
  5791  000FBC  1003               	iorwf	(___fladd@b+2)^0,w,c
  5792  000FBE  1004               	iorwf	(___fladd@b+3)^0,w,c
  5793  000FC0  A4D8               	btfss	status,2,c
  5794  000FC2  EFE5  F007         	goto	u2711
  5795  000FC6  EFE7  F007         	goto	u2710
  5796  000FCA                     u2711:
  5797  000FCA  EF1C  F008         	goto	l2651
  5798  000FCE                     u2710:
  5799  000FCE  5010               	movf	___fladd@grs^0,w,c
  5800  000FD0  A4D8               	btfss	status,2,c
  5801  000FD2  EFED  F007         	goto	u2721
  5802  000FD6  EFEF  F007         	goto	u2720
  5803  000FDA                     u2721:
  5804  000FDA  EF1C  F008         	goto	l2651
  5805  000FDE                     u2720:
  5806  000FDE  0E00               	movlw	0
  5807  000FE0  6E01               	movwf	?___fladd^0,c
  5808  000FE2  0E00               	movlw	0
  5809  000FE4  6E02               	movwf	(?___fladd+1)^0,c
  5810  000FE6  0E00               	movlw	0
  5811  000FE8  6E03               	movwf	(?___fladd+2)^0,c
  5812  000FEA  0E00               	movlw	0
  5813  000FEC  6E04               	movwf	(?___fladd+3)^0,c
  5814  000FEE  EFB7  F008         	goto	l925
  5815  000FF2                     l2635:
  5816  000FF2  90D8               	bcf	status,0,c
  5817  000FF4  3601               	rlcf	___fladd@b^0,f,c
  5818  000FF6  3602               	rlcf	(___fladd@b+1)^0,f,c
  5819  000FF8  3603               	rlcf	(___fladd@b+2)^0,f,c
  5820  000FFA  3604               	rlcf	(___fladd@b+3)^0,f,c
  5821  000FFC  AE10               	btfss	___fladd@grs^0,7,c
  5822  000FFE  EF03  F008         	goto	u2731
  5823  001002  EF05  F008         	goto	u2730
  5824  001006                     u2731:
  5825  001006  EF06  F008         	goto	l2641
  5826  00100A                     u2730:
  5827  00100A  8001               	bsf	___fladd@b^0,0,c
  5828  00100C                     l2641:
  5829  00100C  A010               	btfss	___fladd@grs^0,0,c
  5830  00100E  EF0B  F008         	goto	u2741
  5831  001012  EF0D  F008         	goto	u2740
  5832  001016                     u2741:
  5833  001016  EF11  F008         	goto	l2645
  5834  00101A                     u2740:
  5835  00101A  80D8               	bsf	status,0,c
  5836  00101C  3610               	rlcf	___fladd@grs^0,f,c
  5837  00101E  EF13  F008         	goto	l2647
  5838  001022                     l2645:
  5839  001022  90D8               	bcf	status,0,c
  5840  001024  3610               	rlcf	___fladd@grs^0,f,c
  5841  001026                     l2647:
  5842  001026  500F               	movf	___fladd@bexp^0,w,c
  5843  001028  B4D8               	btfsc	status,2,c
  5844  00102A  EF19  F008         	goto	u2751
  5845  00102E  EF1B  F008         	goto	u2750
  5846  001032                     u2751:
  5847  001032  EF1C  F008         	goto	l2651
  5848  001036                     u2750:
  5849  001036  060F               	decf	___fladd@bexp^0,f,c
  5850  001038                     l2651:
  5851  001038  AE03               	btfss	(___fladd@b+2)^0,7,c
  5852  00103A  EF21  F008         	goto	u2761
  5853  00103E  EF23  F008         	goto	u2760
  5854  001042                     u2761:
  5855  001042  EFF9  F007         	goto	l2635
  5856  001046                     u2760:
  5857  001046                     l2653:
  5858  001046  0E00               	movlw	0
  5859  001048  6E0E               	movwf	___fladd@aexp^0,c
  5860  00104A  AE10               	btfss	___fladd@grs^0,7,c
  5861  00104C  EF2A  F008         	goto	u2771
  5862  001050  EF2C  F008         	goto	u2770
  5863  001054                     u2771:
  5864  001054  EF44  F008         	goto	l942
  5865  001058                     u2770:
  5866  001058  C010  F009         	movff	___fladd@grs,??___fladd
  5867  00105C  0E7F               	movlw	127
  5868  00105E  1609               	andwf	??___fladd^0,f,c
  5869  001060  B4D8               	btfsc	status,2,c
  5870  001062  EF35  F008         	goto	u2781
  5871  001066  EF37  F008         	goto	u2780
  5872  00106A                     u2781:
  5873  00106A  EF3B  F008         	goto	l943
  5874  00106E                     u2780:
  5875  00106E                     l2659:
  5876  00106E  0E01               	movlw	1
  5877  001070  6E0E               	movwf	___fladd@aexp^0,c
  5878  001072  EF44  F008         	goto	l942
  5879  001076                     l943:
  5880  001076  A001               	btfss	___fladd@b^0,0,c
  5881  001078  EF40  F008         	goto	u2791
  5882  00107C  EF42  F008         	goto	u2790
  5883  001080                     u2791:
  5884  001080  EF44  F008         	goto	l942
  5885  001084                     u2790:
  5886  001084  EF37  F008         	goto	l2659
  5887  001088                     l942:
  5888  001088  500E               	movf	___fladd@aexp^0,w,c
  5889  00108A  B4D8               	btfsc	status,2,c
  5890  00108C  EF4A  F008         	goto	u2801
  5891  001090  EF4C  F008         	goto	u2800
  5892  001094                     u2801:
  5893  001094  EF77  F008         	goto	l2671
  5894  001098                     u2800:
  5895  001098  0E01               	movlw	1
  5896  00109A  2601               	addwf	___fladd@b^0,f,c
  5897  00109C  0E00               	movlw	0
  5898  00109E  2202               	addwfc	(___fladd@b+1)^0,f,c
  5899  0010A0  2203               	addwfc	(___fladd@b+2)^0,f,c
  5900  0010A2  2204               	addwfc	(___fladd@b+3)^0,f,c
  5901  0010A4  A004               	btfss	(___fladd@b+3)^0,0,c
  5902  0010A6  EF57  F008         	goto	u2811
  5903  0010AA  EF59  F008         	goto	u2810
  5904  0010AE                     u2811:
  5905  0010AE  EF77  F008         	goto	l2671
  5906  0010B2                     u2810:
  5907  0010B2  C001  F009         	movff	___fladd@b,??___fladd
  5908  0010B6  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5909  0010BA  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5910  0010BE  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5911  0010C2  340C               	rlcf	(??___fladd+3)^0,w,c
  5912  0010C4  320C               	rrcf	(??___fladd+3)^0,f,c
  5913  0010C6  320B               	rrcf	(??___fladd+2)^0,f,c
  5914  0010C8  320A               	rrcf	(??___fladd+1)^0,f,c
  5915  0010CA  3209               	rrcf	??___fladd^0,f,c
  5916  0010CC  C009  F001         	movff	??___fladd,___fladd@b
  5917  0010D0  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5918  0010D4  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5919  0010D8  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5920  0010DC  280F               	incf	___fladd@bexp^0,w,c
  5921  0010DE  B4D8               	btfsc	status,2,c
  5922  0010E0  EF74  F008         	goto	u2821
  5923  0010E4  EF76  F008         	goto	u2820
  5924  0010E8                     u2821:
  5925  0010E8  EF77  F008         	goto	l2671
  5926  0010EC                     u2820:
  5927  0010EC  2A0F               	incf	___fladd@bexp^0,f,c
  5928  0010EE                     l2671:
  5929  0010EE  280F               	incf	___fladd@bexp^0,w,c
  5930  0010F0  B4D8               	btfsc	status,2,c
  5931  0010F2  EF7D  F008         	goto	u2831
  5932  0010F6  EF7F  F008         	goto	u2830
  5933  0010FA                     u2831:
  5934  0010FA  EF87  F008         	goto	l2675
  5935  0010FE                     u2830:
  5936  0010FE  500F               	movf	___fladd@bexp^0,w,c
  5937  001100  A4D8               	btfss	status,2,c
  5938  001102  EF85  F008         	goto	u2841
  5939  001106  EF87  F008         	goto	u2840
  5940  00110A                     u2841:
  5941  00110A  EF99  F008         	goto	l2679
  5942  00110E                     u2840:
  5943  00110E                     l2675:
  5944  00110E  0E00               	movlw	0
  5945  001110  6E01               	movwf	___fladd@b^0,c
  5946  001112  0E00               	movlw	0
  5947  001114  6E02               	movwf	(___fladd@b+1)^0,c
  5948  001116  0E00               	movlw	0
  5949  001118  6E03               	movwf	(___fladd@b+2)^0,c
  5950  00111A  0E00               	movlw	0
  5951  00111C  6E04               	movwf	(___fladd@b+3)^0,c
  5952  00111E  500F               	movf	___fladd@bexp^0,w,c
  5953  001120  A4D8               	btfss	status,2,c
  5954  001122  EF95  F008         	goto	u2851
  5955  001126  EF97  F008         	goto	u2850
  5956  00112A                     u2851:
  5957  00112A  EF99  F008         	goto	l2679
  5958  00112E                     u2850:
  5959  00112E  0E00               	movlw	0
  5960  001130  6E0D               	movwf	___fladd@signs^0,c
  5961  001132                     l2679:
  5962  001132  A00F               	btfss	___fladd@bexp^0,0,c
  5963  001134  EF9E  F008         	goto	u2861
  5964  001138  EFA0  F008         	goto	u2860
  5965  00113C                     u2861:
  5966  00113C  EFA3  F008         	goto	l2683
  5967  001140                     u2860:
  5968  001140  8E03               	bsf	(___fladd@b+2)^0,7,c
  5969  001142  EFA4  F008         	goto	l2685
  5970  001146                     l2683:
  5971  001146  9E03               	bcf	(___fladd@b+2)^0,7,c
  5972  001148                     l2685:
  5973  001148  90D8               	bcf	status,0,c
  5974  00114A  300F               	rrcf	___fladd@bexp^0,w,c
  5975  00114C  6E04               	movwf	(___fladd@b+3)^0,c
  5976  00114E  AE0D               	btfss	___fladd@signs^0,7,c
  5977  001150  EFAC  F008         	goto	u2871
  5978  001154  EFAE  F008         	goto	u2870
  5979  001158                     u2871:
  5980  001158  EFAF  F008         	goto	l2691
  5981  00115C                     u2870:
  5982  00115C  8E04               	bsf	(___fladd@b+3)^0,7,c
  5983  00115E                     l2691:
  5984  00115E  C001  F001         	movff	___fladd@b,?___fladd
  5985  001162  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5986  001166  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5987  00116A  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5988  00116E                     l925:
  5989  00116E  0012               	return		;funcret
  5990  001170                     __end_of___fladd:
  5991                           	callstack 0
  5992                           
  5993 ;; *************** function ___awmod *****************
  5994 ;; Defined at:
  5995 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;  dividend        2    8[COMRAM] int 
  5998 ;;  divisor         2   10[COMRAM] int 
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;  sign            1   13[COMRAM] unsigned char 
  6001 ;;  counter         1   12[COMRAM] unsigned char 
  6002 ;; Return value:  Size  Location     Type
  6003 ;;                  2    8[COMRAM] int 
  6004 ;; Registers used:
  6005 ;;		wreg, status,2, status,0
  6006 ;; Tracked objects:
  6007 ;;		On entry : 0/0
  6008 ;;		On exit  : 0/0
  6009 ;;		Unchanged: 0/0
  6010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6011 ;;      Params:         4       0       0       0       0       0       0
  6012 ;;      Locals:         2       0       0       0       0       0       0
  6013 ;;      Temps:          0       0       0       0       0       0       0
  6014 ;;      Totals:         6       0       0       0       0       0       0
  6015 ;;Total ram usage:        6 bytes
  6016 ;; Hardware stack levels used: 1
  6017 ;; This function calls:
  6018 ;;		Nothing
  6019 ;; This function is called by:
  6020 ;;		_main
  6021 ;;		_lcdNumber
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024                           
  6025                           	psect	text38
  6026  001DA0                     __ptext38:
  6027                           	callstack 0
  6028  001DA0                     ___awmod:
  6029                           	callstack 30
  6030  001DA0  0E00               	movlw	0
  6031  001DA2  6E0E               	movwf	___awmod@sign^0,c
  6032  001DA4  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  6033  001DA6  EFD9  F00E         	goto	u2940
  6034  001DAA  EFD7  F00E         	goto	u2941
  6035  001DAE                     u2941:
  6036  001DAE  EFDF  F00E         	goto	l2747
  6037  001DB2                     u2940:
  6038  001DB2  6C09               	negf	___awmod@dividend^0,c
  6039  001DB4  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  6040  001DB6  B0D8               	btfsc	status,0,c
  6041  001DB8  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  6042  001DBA  0E01               	movlw	1
  6043  001DBC  6E0E               	movwf	___awmod@sign^0,c
  6044  001DBE                     l2747:
  6045  001DBE  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  6046  001DC0  EFE6  F00E         	goto	u2950
  6047  001DC4  EFE4  F00E         	goto	u2951
  6048  001DC8                     u2951:
  6049  001DC8  EFEA  F00E         	goto	l2751
  6050  001DCC                     u2950:
  6051  001DCC  6C0B               	negf	___awmod@divisor^0,c
  6052  001DCE  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  6053  001DD0  B0D8               	btfsc	status,0,c
  6054  001DD2  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  6055  001DD4                     l2751:
  6056  001DD4  500B               	movf	___awmod@divisor^0,w,c
  6057  001DD6  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  6058  001DD8  B4D8               	btfsc	status,2,c
  6059  001DDA  EFF1  F00E         	goto	u2961
  6060  001DDE  EFF3  F00E         	goto	u2960
  6061  001DE2                     u2961:
  6062  001DE2  EF17  F00F         	goto	l2767
  6063  001DE6                     u2960:
  6064  001DE6  0E01               	movlw	1
  6065  001DE8  6E0D               	movwf	___awmod@counter^0,c
  6066  001DEA  EFFB  F00E         	goto	l2757
  6067  001DEE                     l2755:
  6068  001DEE  90D8               	bcf	status,0,c
  6069  001DF0  360B               	rlcf	___awmod@divisor^0,f,c
  6070  001DF2  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  6071  001DF4  2A0D               	incf	___awmod@counter^0,f,c
  6072  001DF6                     l2757:
  6073  001DF6  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  6074  001DF8  EF00  F00F         	goto	u2971
  6075  001DFC  EF02  F00F         	goto	u2970
  6076  001E00                     u2971:
  6077  001E00  EFF7  F00E         	goto	l2755
  6078  001E04                     u2970:
  6079  001E04                     l2759:
  6080  001E04  500B               	movf	___awmod@divisor^0,w,c
  6081  001E06  5C09               	subwf	___awmod@dividend^0,w,c
  6082  001E08  500C               	movf	(___awmod@divisor+1)^0,w,c
  6083  001E0A  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  6084  001E0C  A0D8               	btfss	status,0,c
  6085  001E0E  EF0B  F00F         	goto	u2981
  6086  001E12  EF0D  F00F         	goto	u2980
  6087  001E16                     u2981:
  6088  001E16  EF11  F00F         	goto	l2763
  6089  001E1A                     u2980:
  6090  001E1A  500B               	movf	___awmod@divisor^0,w,c
  6091  001E1C  5E09               	subwf	___awmod@dividend^0,f,c
  6092  001E1E  500C               	movf	(___awmod@divisor+1)^0,w,c
  6093  001E20  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  6094  001E22                     l2763:
  6095  001E22  90D8               	bcf	status,0,c
  6096  001E24  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  6097  001E26  320B               	rrcf	___awmod@divisor^0,f,c
  6098  001E28  2E0D               	decfsz	___awmod@counter^0,f,c
  6099  001E2A  EF02  F00F         	goto	l2759
  6100  001E2E                     l2767:
  6101  001E2E  500E               	movf	___awmod@sign^0,w,c
  6102  001E30  B4D8               	btfsc	status,2,c
  6103  001E32  EF1D  F00F         	goto	u2991
  6104  001E36  EF1F  F00F         	goto	u2990
  6105  001E3A                     u2991:
  6106  001E3A  EF23  F00F         	goto	l2771
  6107  001E3E                     u2990:
  6108  001E3E  6C09               	negf	___awmod@dividend^0,c
  6109  001E40  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  6110  001E42  B0D8               	btfsc	status,0,c
  6111  001E44  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  6112  001E46                     l2771:
  6113  001E46  C009  F009         	movff	___awmod@dividend,?___awmod
  6114  001E4A  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  6115  001E4E  0012               	return		;funcret
  6116  001E50                     __end_of___awmod:
  6117                           	callstack 0
  6118                           
  6119 ;; *************** function ___awdiv *****************
  6120 ;; Defined at:
  6121 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;  dividend        2    0[COMRAM] int 
  6124 ;;  divisor         2    2[COMRAM] int 
  6125 ;; Auto vars:     Size  Location     Type
  6126 ;;  quotient        2    6[COMRAM] int 
  6127 ;;  sign            1    5[COMRAM] unsigned char 
  6128 ;;  counter         1    4[COMRAM] unsigned char 
  6129 ;; Return value:  Size  Location     Type
  6130 ;;                  2    0[COMRAM] int 
  6131 ;; Registers used:
  6132 ;;		wreg, status,2, status,0
  6133 ;; Tracked objects:
  6134 ;;		On entry : 0/0
  6135 ;;		On exit  : 0/0
  6136 ;;		Unchanged: 0/0
  6137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6138 ;;      Params:         4       0       0       0       0       0       0
  6139 ;;      Locals:         4       0       0       0       0       0       0
  6140 ;;      Temps:          0       0       0       0       0       0       0
  6141 ;;      Totals:         8       0       0       0       0       0       0
  6142 ;;Total ram usage:        8 bytes
  6143 ;; Hardware stack levels used: 1
  6144 ;; This function calls:
  6145 ;;		Nothing
  6146 ;; This function is called by:
  6147 ;;		_main
  6148 ;;		_lcdNumber
  6149 ;; This function uses a non-reentrant model
  6150 ;;
  6151                           
  6152                           	psect	text39
  6153  001C28                     __ptext39:
  6154                           	callstack 0
  6155  001C28                     ___awdiv:
  6156                           	callstack 30
  6157  001C28  0E00               	movlw	0
  6158  001C2A  6E06               	movwf	___awdiv@sign^0,c
  6159  001C2C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6160  001C2E  EF1D  F00E         	goto	u2880
  6161  001C32  EF1B  F00E         	goto	u2881
  6162  001C36                     u2881:
  6163  001C36  EF23  F00E         	goto	l2703
  6164  001C3A                     u2880:
  6165  001C3A  6C03               	negf	___awdiv@divisor^0,c
  6166  001C3C  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6167  001C3E  B0D8               	btfsc	status,0,c
  6168  001C40  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6169  001C42  0E01               	movlw	1
  6170  001C44  6E06               	movwf	___awdiv@sign^0,c
  6171  001C46                     l2703:
  6172  001C46  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6173  001C48  EF2A  F00E         	goto	u2890
  6174  001C4C  EF28  F00E         	goto	u2891
  6175  001C50                     u2891:
  6176  001C50  EF30  F00E         	goto	l2709
  6177  001C54                     u2890:
  6178  001C54  6C01               	negf	___awdiv@dividend^0,c
  6179  001C56  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6180  001C58  B0D8               	btfsc	status,0,c
  6181  001C5A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6182  001C5C  0E01               	movlw	1
  6183  001C5E  1A06               	xorwf	___awdiv@sign^0,f,c
  6184  001C60                     l2709:
  6185  001C60  0E00               	movlw	0
  6186  001C62  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6187  001C64  0E00               	movlw	0
  6188  001C66  6E07               	movwf	___awdiv@quotient^0,c
  6189  001C68  5003               	movf	___awdiv@divisor^0,w,c
  6190  001C6A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6191  001C6C  B4D8               	btfsc	status,2,c
  6192  001C6E  EF3B  F00E         	goto	u2901
  6193  001C72  EF3D  F00E         	goto	u2900
  6194  001C76                     u2901:
  6195  001C76  EF65  F00E         	goto	l2731
  6196  001C7A                     u2900:
  6197  001C7A  0E01               	movlw	1
  6198  001C7C  6E05               	movwf	___awdiv@counter^0,c
  6199  001C7E  EF45  F00E         	goto	l2717
  6200  001C82                     l2715:
  6201  001C82  90D8               	bcf	status,0,c
  6202  001C84  3603               	rlcf	___awdiv@divisor^0,f,c
  6203  001C86  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6204  001C88  2A05               	incf	___awdiv@counter^0,f,c
  6205  001C8A                     l2717:
  6206  001C8A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6207  001C8C  EF4A  F00E         	goto	u2911
  6208  001C90  EF4C  F00E         	goto	u2910
  6209  001C94                     u2911:
  6210  001C94  EF41  F00E         	goto	l2715
  6211  001C98                     u2910:
  6212  001C98                     l2719:
  6213  001C98  90D8               	bcf	status,0,c
  6214  001C9A  3607               	rlcf	___awdiv@quotient^0,f,c
  6215  001C9C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6216  001C9E  5003               	movf	___awdiv@divisor^0,w,c
  6217  001CA0  5C01               	subwf	___awdiv@dividend^0,w,c
  6218  001CA2  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6219  001CA4  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6220  001CA6  A0D8               	btfss	status,0,c
  6221  001CA8  EF58  F00E         	goto	u2921
  6222  001CAC  EF5A  F00E         	goto	u2920
  6223  001CB0                     u2921:
  6224  001CB0  EF5F  F00E         	goto	l2727
  6225  001CB4                     u2920:
  6226  001CB4  5003               	movf	___awdiv@divisor^0,w,c
  6227  001CB6  5E01               	subwf	___awdiv@dividend^0,f,c
  6228  001CB8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6229  001CBA  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6230  001CBC  8007               	bsf	___awdiv@quotient^0,0,c
  6231  001CBE                     l2727:
  6232  001CBE  90D8               	bcf	status,0,c
  6233  001CC0  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6234  001CC2  3203               	rrcf	___awdiv@divisor^0,f,c
  6235  001CC4  2E05               	decfsz	___awdiv@counter^0,f,c
  6236  001CC6  EF4C  F00E         	goto	l2719
  6237  001CCA                     l2731:
  6238  001CCA  5006               	movf	___awdiv@sign^0,w,c
  6239  001CCC  B4D8               	btfsc	status,2,c
  6240  001CCE  EF6B  F00E         	goto	u2931
  6241  001CD2  EF6D  F00E         	goto	u2930
  6242  001CD6                     u2931:
  6243  001CD6  EF71  F00E         	goto	l2735
  6244  001CDA                     u2930:
  6245  001CDA  6C07               	negf	___awdiv@quotient^0,c
  6246  001CDC  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6247  001CDE  B0D8               	btfsc	status,0,c
  6248  001CE0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6249  001CE2                     l2735:
  6250  001CE2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6251  001CE6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6252  001CEA  0012               	return		;funcret
  6253  001CEC                     __end_of___awdiv:
  6254                           	callstack 0
  6255                           
  6256                           	psect	rparam
  6257  0000                     
  6258                           	psect	idloc
  6259                           
  6260                           ;Config register IDLOC0 @ 0x200000
  6261                           ;	unspecified, using default values
  6262  200000                     	org	2097152
  6263  200000  FF                 	db	255
  6264                           
  6265                           ;Config register IDLOC1 @ 0x200001
  6266                           ;	unspecified, using default values
  6267  200001                     	org	2097153
  6268  200001  FF                 	db	255
  6269                           
  6270                           ;Config register IDLOC2 @ 0x200002
  6271                           ;	unspecified, using default values
  6272  200002                     	org	2097154
  6273  200002  FF                 	db	255
  6274                           
  6275                           ;Config register IDLOC3 @ 0x200003
  6276                           ;	unspecified, using default values
  6277  200003                     	org	2097155
  6278  200003  FF                 	db	255
  6279                           
  6280                           ;Config register IDLOC4 @ 0x200004
  6281                           ;	unspecified, using default values
  6282  200004                     	org	2097156
  6283  200004  FF                 	db	255
  6284                           
  6285                           ;Config register IDLOC5 @ 0x200005
  6286                           ;	unspecified, using default values
  6287  200005                     	org	2097157
  6288  200005  FF                 	db	255
  6289                           
  6290                           ;Config register IDLOC6 @ 0x200006
  6291                           ;	unspecified, using default values
  6292  200006                     	org	2097158
  6293  200006  FF                 	db	255
  6294                           
  6295                           ;Config register IDLOC7 @ 0x200007
  6296                           ;	unspecified, using default values
  6297  200007                     	org	2097159
  6298  200007  FF                 	db	255
  6299                           
  6300                           	psect	config
  6301                           
  6302                           ; Padding undefined space
  6303  300000                     	org	3145728
  6304  300000  FF                 	db	255
  6305                           
  6306                           ;Config register CONFIG1H @ 0x300001
  6307                           ;	unspecified, using default values
  6308                           ;	Oscillator Selection bits
  6309                           ;	OSC = 0x7, unprogrammed default
  6310                           ;	Fail-Safe Clock Monitor Enable bit
  6311                           ;	FCMEN = 0x0, unprogrammed default
  6312                           ;	Internal/External Oscillator Switchover bit
  6313                           ;	IESO = 0x0, unprogrammed default
  6314  300001                     	org	3145729
  6315  300001  07                 	db	7
  6316                           
  6317                           ;Config register CONFIG2L @ 0x300002
  6318                           ;	unspecified, using default values
  6319                           ;	Power-up Timer Enable bit
  6320                           ;	PWRT = 0x1, unprogrammed default
  6321                           ;	Brown-out Reset Enable bits
  6322                           ;	BOREN = 0x3, unprogrammed default
  6323                           ;	Brown Out Reset Voltage bits
  6324                           ;	BORV = 0x3, unprogrammed default
  6325  300002                     	org	3145730
  6326  300002  1F                 	db	31
  6327                           
  6328                           ;Config register CONFIG2H @ 0x300003
  6329                           ;	unspecified, using default values
  6330                           ;	Watchdog Timer Enable bit
  6331                           ;	WDT = 0x1, unprogrammed default
  6332                           ;	Watchdog Timer Postscale Select bits
  6333                           ;	WDTPS = 0xF, unprogrammed default
  6334  300003                     	org	3145731
  6335  300003  1F                 	db	31
  6336                           
  6337                           ; Padding undefined space
  6338  300004                     	org	3145732
  6339  300004  FF                 	db	255
  6340                           
  6341                           ;Config register CONFIG3H @ 0x300005
  6342                           ;	unspecified, using default values
  6343                           ;	CCP2 MUX bit
  6344                           ;	CCP2MX = 0x1, unprogrammed default
  6345                           ;	PORTB A/D Enable bit
  6346                           ;	PBADEN = 0x1, unprogrammed default
  6347                           ;	Low-Power Timer1 Oscillator Enable bit
  6348                           ;	LPT1OSC = 0x0, unprogrammed default
  6349                           ;	MCLR Pin Enable bit
  6350                           ;	MCLRE = 0x1, unprogrammed default
  6351  300005                     	org	3145733
  6352  300005  83                 	db	131
  6353                           
  6354                           ;Config register CONFIG4L @ 0x300006
  6355                           ;	unspecified, using default values
  6356                           ;	Stack Full/Underflow Reset Enable bit
  6357                           ;	STVREN = 0x1, unprogrammed default
  6358                           ;	Single-Supply ICSP Enable bit
  6359                           ;	LVP = 0x1, unprogrammed default
  6360                           ;	Extended Instruction Set Enable bit
  6361                           ;	XINST = 0x0, unprogrammed default
  6362                           ;	Background Debugger Enable bit
  6363                           ;	DEBUG = 0x1, unprogrammed default
  6364  300006                     	org	3145734
  6365  300006  85                 	db	133
  6366                           
  6367                           ; Padding undefined space
  6368  300007                     	org	3145735
  6369  300007  FF                 	db	255
  6370                           
  6371                           ;Config register CONFIG5L @ 0x300008
  6372                           ;	unspecified, using default values
  6373                           ;	Code Protection bit
  6374                           ;	CP0 = 0x1, unprogrammed default
  6375                           ;	Code Protection bit
  6376                           ;	CP1 = 0x1, unprogrammed default
  6377                           ;	Code Protection bit
  6378                           ;	CP2 = 0x1, unprogrammed default
  6379                           ;	Code Protection bit
  6380                           ;	CP3 = 0x1, unprogrammed default
  6381  300008                     	org	3145736
  6382  300008  0F                 	db	15
  6383                           
  6384                           ;Config register CONFIG5H @ 0x300009
  6385                           ;	unspecified, using default values
  6386                           ;	Boot Block Code Protection bit
  6387                           ;	CPB = 0x1, unprogrammed default
  6388                           ;	Data EEPROM Code Protection bit
  6389                           ;	CPD = 0x1, unprogrammed default
  6390  300009                     	org	3145737
  6391  300009  C0                 	db	192
  6392                           
  6393                           ;Config register CONFIG6L @ 0x30000A
  6394                           ;	unspecified, using default values
  6395                           ;	Write Protection bit
  6396                           ;	WRT0 = 0x1, unprogrammed default
  6397                           ;	Write Protection bit
  6398                           ;	WRT1 = 0x1, unprogrammed default
  6399                           ;	Write Protection bit
  6400                           ;	WRT2 = 0x1, unprogrammed default
  6401                           ;	Write Protection bit
  6402                           ;	WRT3 = 0x1, unprogrammed default
  6403  30000A                     	org	3145738
  6404  30000A  0F                 	db	15
  6405                           
  6406                           ;Config register CONFIG6H @ 0x30000B
  6407                           ;	unspecified, using default values
  6408                           ;	Configuration Register Write Protection bit
  6409                           ;	WRTC = 0x1, unprogrammed default
  6410                           ;	Boot Block Write Protection bit
  6411                           ;	WRTB = 0x1, unprogrammed default
  6412                           ;	Data EEPROM Write Protection bit
  6413                           ;	WRTD = 0x1, unprogrammed default
  6414  30000B                     	org	3145739
  6415  30000B  E0                 	db	224
  6416                           
  6417                           ;Config register CONFIG7L @ 0x30000C
  6418                           ;	unspecified, using default values
  6419                           ;	Table Read Protection bit
  6420                           ;	EBTR0 = 0x1, unprogrammed default
  6421                           ;	Table Read Protection bit
  6422                           ;	EBTR1 = 0x1, unprogrammed default
  6423                           ;	Table Read Protection bit
  6424                           ;	EBTR2 = 0x1, unprogrammed default
  6425                           ;	Table Read Protection bit
  6426                           ;	EBTR3 = 0x1, unprogrammed default
  6427  30000C                     	org	3145740
  6428  30000C  0F                 	db	15
  6429                           
  6430                           ;Config register CONFIG7H @ 0x30000D
  6431                           ;	unspecified, using default values
  6432                           ;	Boot Block Table Read Protection bit
  6433                           ;	EBTRB = 0x1, unprogrammed default
  6434  30000D                     	org	3145741
  6435  30000D  40                 	db	64
  6436                           tosu	equ	0xFFF
  6437                           tosh	equ	0xFFE
  6438                           tosl	equ	0xFFD
  6439                           stkptr	equ	0xFFC
  6440                           pclatu	equ	0xFFB
  6441                           pclath	equ	0xFFA
  6442                           pcl	equ	0xFF9
  6443                           tblptru	equ	0xFF8
  6444                           tblptrh	equ	0xFF7
  6445                           tblptrl	equ	0xFF6
  6446                           tablat	equ	0xFF5
  6447                           prodh	equ	0xFF4
  6448                           prodl	equ	0xFF3
  6449                           indf0	equ	0xFEF
  6450                           postinc0	equ	0xFEE
  6451                           postdec0	equ	0xFED
  6452                           preinc0	equ	0xFEC
  6453                           plusw0	equ	0xFEB
  6454                           fsr0h	equ	0xFEA
  6455                           fsr0l	equ	0xFE9
  6456                           wreg	equ	0xFE8
  6457                           indf1	equ	0xFE7
  6458                           postinc1	equ	0xFE6
  6459                           postdec1	equ	0xFE5
  6460                           preinc1	equ	0xFE4
  6461                           plusw1	equ	0xFE3
  6462                           fsr1h	equ	0xFE2
  6463                           fsr1l	equ	0xFE1
  6464                           bsr	equ	0xFE0
  6465                           indf2	equ	0xFDF
  6466                           postinc2	equ	0xFDE
  6467                           postdec2	equ	0xFDD
  6468                           preinc2	equ	0xFDC
  6469                           plusw2	equ	0xFDB
  6470                           fsr2h	equ	0xFDA
  6471                           fsr2l	equ	0xFD9
  6472                           status	equ	0xFD8

Data Sizes:
    Strings     47
    Constant    36
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     33      57
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[13]), STR_4(CODE[11]), STR_3(CODE[8]), STR_2(CODE[8]), 
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_lcdString
    _ssdInit->_pinMode
    _pwmSet->___lwdiv
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _pegaUser->_kpDebounce
    _pegaUser->_lcdChar
    _pegaSenha->_kpDebounce
    _pegaSenha->_lcdChar
    _kpDebounce->_soWrite
    _limpaSSD->_ssdDigit
    _ssdUpdate->_soWrite
    _ssdDigit->___awmod
    _lcdString->_lcdChar
    _lcdChar->_pushByte
    _lcdPosition->_lcdCommand
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    ___awmod->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0  204854
                                             20 COMRAM    13    13      0
                            ___awdiv
                            ___awmod
                            ___fladd
                             ___flge
                               _comp
                             _kpInit
                         _lcdCommand
                            _lcdInit
                        _lcdPosition
                          _lcdString
                           _limpaSSD
                          _pegaSenha
                           _pegaUser
                       _pwmFrequency
                            _pwmInit
                             _pwmSet
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    4224
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _pwmSet                                               5     5      0     716
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0     626
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2     626
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _pegaUser                                             0     0      0   29728
                         _kpDebounce
                          _kpReadKey
                            _lcdChar
                            _zeraKey
 ---------------------------------------------------------------------------------
 (1) _pegaSenha                                            0     0      0   29728
                         _kpDebounce
                          _kpReadKey
                            _lcdChar
                            _zeraKey
 ---------------------------------------------------------------------------------
 (2) _zeraKey                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _kpReadKey                                            5     5      0      60
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _kpDebounce                                           5     5      0   11233
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (3) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _limpaSSD                                             1     1      0   14835
                                             16 COMRAM     1     1      0
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0   14081
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _ssdDigit                                             2     1      1     708
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcdString                                            6     4      2   18905
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0   18435
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          4     0      4   19557
                                             14 COMRAM     4     0      4
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   41500
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   18141
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   18405
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   18033
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _soWrite                                              3     1      2   10749
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseEnClock                                         0     0      0    3332
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseClockData                                       0     0      0    3332
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _pulseEnablePin                                       0     0      0    3712
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    3332
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    4224
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    2112
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    2112
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _comp                                                 3     3      0     105
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    1398
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             16     8      8    2844
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     904
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1060
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   ___fladd
   ___flge
   _comp
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _lcdCommand
     _delayMili
     _pushByte
       _digitalWrite
       _pulseEnablePin
         _delayMicro
         _digitalWrite
       _soWrite
         _PulseClockData
           _digitalWrite
         _PulseEnClock
           _digitalWrite
         _digitalWrite
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _lcdPosition
     _lcdCommand
   _lcdString
     _lcdChar
       _delayMicro
       _pushByte
   _limpaSSD
     _ssdDigit
       ___awdiv (ARG)
       ___awmod (ARG)
     _ssdUpdate
       _digitalWrite
       _soWrite
   _pegaSenha
     _kpDebounce
       _digitalRead
       _soWrite
     _kpReadKey
     _lcdChar
     _zeraKey
   _pegaUser
     _kpDebounce
     _kpReadKey
     _lcdChar
     _zeraKey
   _pwmFrequency
     ___aldiv
   _pwmInit
     _pwmFrequency
   _pwmSet
     ___lwdiv
     ___wmul
   _ssdDigit
   _ssdInit
     _pinMode
     _soInit
   _ssdUpdate
   _timerInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     21      39       1       44.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      39      15        0.0%
DATA                 0      0      39       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 19:58:58 2021

         _pulseEnablePin 22FC             lcdString@msg 000F                       l61 1EE6  
                     l54 2102                       l47 20A0                       l59 1EBA  
                     l67 22FA             ___awdiv@sign 0006                       _v0 0035  
                     _v1 0034                       _v2 0033                       _v3 0032  
    ___wmul@multiplicand 0003                      l203 2552                      l301 24B6  
                    l230 1A16                      l214 1F5E                      l311 237A  
                    l304 2532                      l233 23E6                      l250 2416  
                    l154 13BC                      l314 2440                      l322 22AE  
                    l163 18DC                      l244 255C                      l228 19FE  
                    l253 233C                      l317 246A                      l262 2518  
                    l270 24FA                      l158 18E0                      l159 18DC  
                    l256 24DC                      l362 220A                      l259 215C  
                    l267 23B4                      l188 160A                      l276 2260  
                    l285 1D9E                      l349 21B4                      l359 1776  
                    l632 1E4E                      l385 255A                      l298 203E  
                    l619 1CEA                      l467 1B22                      l388 2490  
                    l653 1BE0                      l658 1C26                      l916 0E9E  
                    l933 0FB8                      l925 116E                      l917 0E8C  
                    l942 1088                      l918 0E52                      l943 1076  
                    l886 1FD2                      l879 1FCA                      _PR2 000FCB  
                    u810 1E88                      u811 1E84                      u820 1EB8  
                    u821 1EB4                      u830 1ECC                      u831 1EC8  
                    u840 1EDE                      u680 1F28                      u841 1EDA  
                    u681 1F24                      u690 1F5C                      u674 1F08  
                    u691 1F58                      u675 1F02             ___awmod@sign 000E  
                    wreg 000FE8                     l2101 2276                     l1301 1F3C  
                   l2111 2298                     l1303 1F40                     l2201 23E8  
                   l2121 231C                     l2113 229A                     l1305 1F5C  
                   l2203 23F4                     l2115 22AA                     l2107 227A  
                   l2131 17BC                     l2123 1778                     l2211 1A1C  
                   l2205 23F8                     l2061 11BE                     l2117 22FC  
                   l2109 2292                     l2301 160C                     l2141 1820  
                   l2133 17D8                     l2125 1794                     l2221 1A5C  
                   l2213 1A2A                     l2071 1258                     l2063 11E0  
                   l2055 1170                     l2119 2310                     l2207 2106  
                   l2311 16B8                     l2303 166C                     l2231 1A9A  
                   l2223 1A60                     l2215 1A3A                     l2161 13BE  
                   l2081 12EC                     l2073 1274                     l2065 11FC  
                   l2057 118C                     l2321 1708                     l2313 16CC  
                   l2305 1684                     l2401 20AA                     l2241 1AE2  
                   l2233 1AA8                     l2225 1A70                     l2217 1A3E  
                   l2209 1A18                     l2171 144A                     l2163 13DA  
                   l2091 137E                     l2083 1306                     l2075 128E  
                   l2067 1216                     l2059 119E                     l2323 1720  
                   l2315 16D4                     l2307 1698                     l2331 173C  
                   l2155 1894                     l2147 184C                     l2139 1804  
                   l1259 254A                     l2411 20F6                     l2403 20BE  
                   l2243 1AEC                     l2235 1AB2                     l2227 1A86  
                   l2219 1A4C                     l2501 0CDC                     l1461 1EBC  
                   l2181 14D4                     l2173 145C                     l2165 13EC  
                   l2341 233E                     l2093 139E                     l2085 1326  
                   l2077 12AE                     l2069 1236                     l2325 1734  
                   l2317 16EC                     l2309 16A0                     l2421 22B0  
                   l2157 18B0                     l2149 1868                     l2261 195E  
                   l2253 18E2                     l2413 20FA                     l2405 20D0  
                   l2237 1AD0                     l2229 1A8E                     l2245 1AF2  
                   l2511 0D16                     l2503 0CEC                     l1471 1EE4  
                   l1463 1ECC                     l1455 1E58                     l2191 1570  
                   l2183 14F8                     l2175 1480                     l2167 140C  
                   l2087 1348                     l2079 12D0                     l2095 2418  
                   l2343 24BA                     l2319 1700                     l2431 22F4  
                   l2423 22D8                     l2263 1984                     l2271 19D4  
                   l2255 18F2                     l1295 1EF0                     l2407 20E2  
                   l2247 1B02                     l2239 1AE0                     l2351 1F60  
                   l2601 0EE0                     l2521 0D44                     l2513 0D1C  
                   l2505 0CFC                     l1465 1EDE                     l1457 1E88  
                   l1449 1E50                     l2193 1596                     l2185 151E  
                   l2177 14A6                     l2169 142E                     l2089 1364  
                   l2097 2442                     l2337 24FE                     l2441 1D72  
                   l2281 24E0                     l2425 22DC                     l2273 19EC  
                   l2265 19A2                     l1297 1F28                     l1289 1EE8  
                   l2409 20E4                     l2417 2100                     l2249 1B12  
                   l2361 1F98                     l2353 1F68                     l2345 246C  
                   l2611 0F1A                     l2603 0EEE                     l2531 0D78  
                   l2523 0D46                     l2515 0D2E                     l2507 0CFE  
                   l1459 1EB8                     l2195 15B2                     l2187 153A  
                   l2179 14C2                     l2451 23B6                     l2099 2262  
                   l2443 1D80                     l2435 1CEC                     l2283 24EE  
                   l2291 2184                     l2275 19F2                     l2267 19CC  
                   l2259 1912                     l2339 2492                     l2371 1FC4  
                   l2363 1F9E                     l2355 1F7A                     l2347 2488  
                   l1491 2558                     l2701 1C42                     l2621 0F86  
                   l2613 0F1C                     l2605 0EFC                     l2541 0DB4  
                   l2525 0D56                     l2533 0D80                     l2517 0D30  
                   l2509 0D06                     l2197 15C4                     l2189 154C  
                   l2453 23E2                     l2445 1D8C                     l2437 1D4C  
                   l2293 2188                     l2285 2160                     l2429 22F0  
                   l2277 19F6                     l2381 206E                     l2373 2040  
                   l2461 2522                     l2365 1FB4                     l2357 1F82  
                   l2711 1C68                     l2703 1C46                     l2631 0FDE  
                   l2623 0F88                     l2615 0F26                     l2607 0F08  
                   l2551 0DC8                     l2543 0DB8                     l2535 0D90  
                   l2527 0D66                     l2519 0D36                     l2199 15E8  
                   l2447 1D92                     l2439 1D58                     l2471 2398  
                   l2295 219A                     l2287 2170                     l2279 1A0E  
                   l2383 2080                     l2375 2044                     l2463 2526  
                   l2455 251A                     l2367 1FBC                     l2359 1F8A  
                   l2721 1C9E                     l2713 1C7A                     l2705 1C54  
                   l2641 100C                     l2625 0F98                     l2609 0F0C  
                   l2617 0F2C                     l2561 0DDC                     l2553 0DCC  
                   l2545 0DBC                     l2537 0DA2                     l2529 0D76  
                   l2449 1D98                     l2473 23AA                     l2481 2238  
                   l2297 219E                     l2289 2174                     l2385 2082  
                   l2393 209E                     l2377 2048                     l2457 251C  
                   l2369 1FBE                     l2465 21B6                     l1489 2554  
                   l2801 066E                     l2723 1CB4                     l2715 1C82  
                   l2731 1CCA                     l2707 1C5C                     l2643 101A  
                   l2635 0FF2                     l2651 1038                     l2619 0F52  
                   l2627 0FA8                     l2563 0DE0                     l2555 0DD0  
                   l2547 0DC0                     l2539 0DB0                     l2571 0DF0  
                   l2467 237C                     l2475 220C                     l2299 21B0  
                   l2387 2094                     l2379 205C                     l2459 2520  
                   l2491 2030                     l2483 1FD6                     l2811 06C0  
                   l2803 0672                     l2733 1CDA                     l2725 1CBC  
                   l2717 1C8A                     l2709 1C60                     l2741 1DA4  
                   l2645 1022                     l2637 0FFC                     l2629 0FCE  
                   l2653 1046                     l2581 0E60                     l2573 0DF4  
                   l2565 0DE4                     l2557 0DD4                     l2549 0DC4  
                   l2493 0CB0                     l2469 238E                     l2477 2218  
                   l2397 20A2                     l2389 2098                     l2485 1FF4  
                   l2901 0988                     l2821 06F8                     l2813 06D4  
                   l2805 067A                     l2735 1CE2                     l2727 1CBE  
                   l2719 1C98                     l2751 1DD4                     l2743 1DB2  
                   l2663 1098                     l2671 10EE                     l2655 104A  
                   l2647 1026                     l2639 100A                     l2591 0E8A  
                   l2583 0E6C                     l2575 0E1E                     l2567 0DE8  
                   l2559 0DD8                     l2495 0CBC                     l2479 2234  
                   l2399 20A6                     l2487 2010                     l2911 09E6  
                   l2903 09A0                     l2831 0736                     l2823 0710  
                   l2815 06DC                     l2807 0694                     l2729 1CC4  
                   l2761 1E1A                     l2753 1DE6                     l2745 1DBA  
                   l2681 1140                     l2673 10FE                     l2665 10A4  
                   l2657 1058                     l2649 1036                     l2593 0EAC  
                   l2585 0E70                     l2577 0E3A                     l2569 0DEC  
                   l2497 0CCA                     l2489 2018                     l2913 09EC  
                   l2905 09B4                     l2841 076E                     l2833 074A  
                   l2825 0716                     l2817 06E2                     l2809 06A0  
                   l2771 1E46                     l2763 1E22                     l2755 1DEE  
                   l2747 1DBE                     l2739 1DA0                     l2691 115E  
                   l2683 1146                     l2675 110E                     l2667 10B2  
                   l2659 106E                     l2595 0EBC                     l2587 0E7E  
                   l2579 0E4A                     l2499 0CCC                     l2931 0AF4  
                   l2923 0A68                     l2915 0A1E                     l2907 09BE  
                   l2851 07BE                     l2843 077A                     l2835 0752  
                   l2827 071A                     l2819 06E6                     l2765 1E28  
                   l2757 1DF6                     l2749 1DCC                     l2685 1148  
                   l2677 112E                     l2669 10EC                     l2589 0E80  
                   l2781 1B90                     l2941 0B4C                     l2925 0ACE  
                   l2917 0A22                     l2909 09D4                     l2861 07D8  
                   l2853 07CA                     l2845 078E                     l2837 0756  
                   l2829 072C                     l2695 1C28                     l2759 1E04  
                   l2767 1E2E                     l2687 114E                     l2679 1132  
                   l2599 0ED0                     l2791 1C1E                     l2783 1BA0  
                   l2775 1B24                     l2951 0BA6                     l2943 0B5C  
                   l2927 0AD4                     l2919 0A32                     l2871 0838  
                   l2863 07F0                     l2855 07D0                     l2847 079E  
                   l2839 075A                     l2697 1C2C                     l2769 1E3E  
                   l2689 115C                     l2793 1C24                     l2785 1BAE  
                   l2777 1B52                     l2929 0AEE                     l2881 08B6  
                   l2873 083E                     l2865 0804                     l2849 07B2  
                   l2937 0AFE                     l2699 1C3A                     l2787 1BC0  
                   l2779 1B62                     l2955 0BDC                     l2947 0B92  
                   l2891 0972                     l2875 0870                     l2867 080E  
                   l2939 0B48                     l2789 1BCE                     l2957 0C42  
                   l2949 0B96                     l2893 0978                     l2885 08EC  
                   l2877 08A2                     l2869 0826                     l2797 0656  
                   l2895 0980                     l2887 0952                     l2879 08A6  
                   l2799 066A                     l2977 0B12                     l2889 0958  
                   l2979 1750                     STR_1 064D                     STR_2 063D  
                   STR_3 0645                     STR_4 0632                     STR_5 0625  
                   u2000 13EC                     u2001 13E8                     u2110 153A  
                   u2030 144A                     u2014 13FE                     u2111 1536  
                   u2031 1446                     u2015 13FA                     u3000 1B52  
                   u2120 154C                     u2104 150E                     u2040 145C  
                   u2024 141E                     u2200 1A2A                     u3001 1B4E  
                   u2121 1548                     u2105 150A                     u2041 1458  
                   u2025 141A                     u2201 1A26                     u3010 1B90  
                   u2210 1A4C                     u3011 1B8C                     u2211 1A48  
                   u3020 1BAE                     u2300 19A2                     u2220 1A86  
                   u3100 0826                     u3021 1BAA                     u2301 199E  
                   u2221 1A82                     u3101 0822                     u3030 1BCE  
                   u2150 15B2                     u2134 1562                     u2070 14C2  
                   u2054 1472                     u2230 1AA8                     u3110 0838  
                   u3031 1BCA                     u2151 15AE                     u2135 155E  
                   u2071 14BE                     u2055 146E                     u2231 1AA4  
                   u3111 0834                     u3040 1C1E                     u2160 15C4  
                   u2144 1586                     u2080 14D4                     u2064 1496  
                   u2320 19EC                     u2240 1AD0                     u2400 1FB4  
                   u3200 0ACE                     u3120 08E8                     u3041 1C1A  
                   u2161 15C0                     u2145 1582                     u2081 14D0  
                   u2065 1492                     u2321 19E8                     u2241 1ACC  
                   u2401 1FB0                     u3201 0ACA                     u3121 08E4  
                   u2330 1A0E                     u2314 19BE                     u2410 205C  
                   u2250 1B02                     u3210 0AEE                     u3130 0952  
                   u3050 06F8                     u2331 1A0A                     u2315 19B8  
                   u2411 2058                     u2251 1AFE                     u3211 0AEA  
                   u3131 094E                     u3051 06F4                     u2500 0CDC  
                   u2340 2170                     u2260 190E                     u2420 2094  
                   u3220 0B8E                     u3140 0972                     u3060 072C  
                   u2501 0CD8                     u2341 216C                     u2261 190A  
                   u2421 2090                     u3221 0B8A                     u3141 096E  
                   u3061 0728                     u2510 0CEC                     u2174 15DA  
                   u2094 14EA                     u2190 2416                     u2350 2184  
                   u2430 20BE                     u3230 0BD8                     u3150 09A0  
                   u3070 074A                     u2511 0CE8                     u2175 15D6  
                   u2095 14E6                     u2191 2412                     u2351 2180  
                   u2431 20BA                     u3231 0BD4                     u3151 099C  
                   u3071 0746                     u2600 0E38                     u2520 0D2E  
                   u2184 15FE                     u1800 12EC                     u1720 11FC  
                   u1704 11B0                     u2360 219A                     u2280 195E  
                   u2440 20F6                     u3240 0C42                     u3160 09B4  
                   u3080 07F0                     u2521 0D2A                     u2185 15FA  
                   u1801 12E8                     u1721 11F8                     u1705 11AC  
                   u2361 2196                     u2281 195A                     u2441 20F2  
                   u3241 0C3E                     u3161 09B0                     u3081 07EC  
                   u2610 0E60                     u2530 0D44                     u1810 1306  
                   u1730 1216                     u1714 11D0                     u2370 21B0  
                   u2450 22EC                     u2274 192E                     u3250 0CA8  
                   u3170 09D4                     u3090 0804                     u2611 0E5C  
                   u2531 0D40                     u1811 1302                     u1731 1212  
                   u1715 11CC                     u2371 21AC                     u2451 22E8  
                   u2275 1928                     u3251 0CA4                     u3171 09D0  
                   u3091 0800                     u2700 0F98                     u2620 0E7E  
                   u2540 0D56                     u2460 238E                     u2380 1F7A  
                   u3180 09E6                     u2701 0F94                     u2621 0E7A  
                   u2541 0D52                     u2461 238A                     u2381 1F76  
                   u3181 09E2                     u2710 0FCE                     u2630 0E9E  
                   u2550 0D66                     u2470 23AA                     u1910 17D8  
                   u2294 1976                     u2390 1F98                     u3190 0A64  
                   u2711 0FCA                     u2631 0E9A                     u2551 0D62  
                   u2471 23A6                     u1911 17D4                     u2295 1970  
                   u2391 1F94                     u3191 0A60                     u2800 1098  
                   u2720 0FDE                     u2640 0EAC                     u2560 0DA2  
                   u1840 1364                     u1824 1318                     u1760 1274  
                   u1744 1228                     u1680 118C                     u2480 2260  
                   u1904 17A6                     u2801 1094                     u2721 0FDA  
                   u2641 0EA8                     u2561 0D9E                     u1841 1360  
                   u1825 1314                     u1761 1270                     u1745 1224  
                   u1681 1188                     u2481 225C                     u1905 17A2  
                   u2810 10B2                     u2730 100A                     u2650 0EBC  
                   u2570 0DB0                     u2490 0CCA                     u1850 137E  
                   u1834 1338                     u1770 128E                     u1754 1248  
                   u1690 119E                     u1930 1820                     u2811 10AE  
                   u2731 1006                     u2651 0EB8                     u2571 0DAC  
                   u2491 0CC6                     u1851 137A                     u1835 1334  
                   u1771 128A                     u1755 1244                     u1691 119A  
                   u1931 181C                     u2900 1C7A                     u2820 10EC  
                   u2740 101A                     u2660 0EEE                     u2580 0E1E  
                   u1924 17EE                     u2901 1C76                     u2821 10E8  
                   u2741 1016                     u2661 0EEA                     u2581 0E1A  
                   u1925 17EA                     u2910 1C98                     u2830 10FE  
                   u2750 1036                     u2670 0EFC                     u2590 0E36  
                   u1950 1868                     u2911 1C94                     u2831 10FA  
                   u2751 1032                     u2671 0EF8                     u2591 0E30  
                   u1951 1864                     u2920 1CB4                     u2840 110E  
                   u2760 1046                     u2680 0F1A                     u1864 1390  
                   u1784 12A0                     u1880 22AA                     u1944 1836  
                   u2921 1CB0                     u2841 110A                     u2761 1042  
                   u2681 0F16                     u1865 138C                     u1785 129C  
                   u1881 22A6                     u1945 1832                     u2930 1CDA  
                   u2850 112E                     u2770 1058                     u2690 0F52  
                   u1874 13B0                     u1794 12C0                     u1970 18B0  
                   u1890 1794                     u2931 1CD6                     u2851 112A  
                   u2771 1054                     u2691 0F4E                     u1875 13AC  
                   u1795 12BC                     u1971 18AC                     u1891 1790  
                   u2940 1DB2                     u2860 1140                     u2780 106E  
                   u1964 187E                     u2941 1DAE                     u2861 113C  
                   u2781 106A                     u1965 187A                     u2950 1DCC  
                   u2870 115C                     u2790 1084                     u1990 13DA  
                   u2951 1DC8                     u2871 1158                     u2791 1080  
                   u1991 13D6                     u2880 1C3A                     u2960 1DE6  
                   u1984 18C6                     u2881 1C36                     u2961 1DE2  
                   u1985 18C2                     u2890 1C54                     u2970 1E04  
                   u2891 1C50                     u2971 1E00                     u2980 1E1A  
                   u2981 1E16                     u2990 1E3E                     u2991 1E3A  
                   _User 0620                     _comp 1E50                     _main 0656  
                   _keys 0030                     _savP 0022                     _savU 0027  
       ??_PulseClockData 0007                     indf2 000FDF                     fsr2l 000FD9  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        pushNibble@value 000C             ___param_bank 000000   __end_of_pulseEnablePin 233E  
         pwmSet@porcento 000A          __end_of___aldiv 1B24                    ?_comp 0001  
        __end_of___fladd 1170                    ?_main 0001          __end_of___awdiv 1CEC  
        __end_of___awmod 1E50                    _T0CON 000FD5          ___awdiv@divisor 0003  
                  _T2CON 000FCA          __end_of___lwdiv 1FD4          ___awdiv@counter 0005  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84          __end_of_charKey 061B                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96          __end_of_lcdChar 24FC          __end_of_lcdInit 1DA0  
                  _Passw 061B          __end_of_pinMode 160C                    _valor 0601  
                  comp@a 0003                    comp@c 0002                    main@k 001E  
                  main@u 001A          __end_of_soWrite 22B0                    tablat 000FF5  
        __end_of_ssdInit 220C          __end_of_pwmInit 2534          __end_of_zeraKey 2554  
                  status 000FD8             pushNibble@rs 000A     __end_of_digitalWrite 13BE  
        __initialization 2534             __end_of_User 0625          ?_pulseEnablePin 0001  
           __end_of_comp 1EE8             __end_of_main 0CB0                   ??_comp 0001  
                 ??_main 0015            __activetblptr 000002     __size_of_digitalRead 016A  
                 _ADCON1 000FC1                   _CCPR2L 000FBB         ___awdiv@dividend 0001  
                 _INTCON 000FF2     __size_of_lcdPosition 003A                   ___flge 1B24  
              ??___aldiv 0009                ??___fladd 0009                   ___wmul 246C  
              ??___awdiv 0005                ??___awmod 000D                ??___lwdiv 0005  
                 _kpInit 23B6         __end_of_pegaUser 20A2         __end_of_limpaSSD 22FC  
                 clear_0 253A                   _soInit 233E         ___awdiv@quotient 0007  
        ___awmod@divisor 000B                ??_lcdChar 000E                   isa$std 000001  
              ??_lcdInit 000F                   _pwmSet 1FD4          ___awmod@counter 000D  
       __end_of_ssdDigit 21B6                ??_pinMode 0005             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_soWrite 0009                ??_ssdInit 0007                ??_pwmInit 0011  
       __end_of_pushByte 215E                ??_zeraKey 0001               ___flge@ff1 0001  
             ___flge@ff2 0005               __accesstop 0080  __end_of__initialization 2540  
          ___rparam_used 000001            pushByte@value 000D              pinMode@type 0003  
         __pcstackCOMRAM 0001            __end_of_Passw 0620            __end_of_valor 0611  
     __size_of_delayMili 0030       __size_of_lcdString 0056       __size_of_kpReadKey 0078  
  __size_of_digitalWrite 024E       __size_of_pegaSenha 0062               _delayMicro 255C  
                ?___flge 0001               _lcdCommand 24FC                  ?___wmul 0001  
                ?_kpInit 0001                  _CCP2CON 000FBA                  ?_soInit 0001  
             _kpDebounce 18E2                  ?_pwmSet 0001       __size_of_timerInit 0008  
     __size_of_ssdUpdate 016C             _digitalWrite 1170        __end_of_delayMili 2418  
              ?_pegaUser 0001                ?_limpaSSD 0001         ??_pulseEnablePin 0007  
                __Hparam 0000                  __Lparam 0000                ?_ssdDigit 000F  
      __end_of_lcdString 2262          kpDebounce@tempo 0037                  ___aldiv 1A18  
      __end_of_kpReadKey 1F60          __size_of___flge 0104                  ___fladd 0CB0  
                ___awdiv 1C28                  ___awmod 1DA0                ?_pushByte 000A  
        __size_of___wmul 0026                  ___lwdiv 1F60             __psmallconst 0600  
        __size_of_kpInit 0032                  _charKey 0611              ssdDigit@val 0010  
            ssdDigit@pos 000F                  __pcinit 2534                  _lcdChar 24DE  
                __ramtop 0600          __size_of_soInit 003E                  _lcdInit 1CEC  
                __ptext0 0656                  __ptext1 2554                  __ptext2 21B6  
                __ptext3 1FD4                  __ptext4 246C                  __ptext5 1F60  
                __ptext6 251A                  __ptext7 2492                  __ptext8 1A18  
                __ptext9 2040          __size_of_pwmSet 006C                  _display 0036  
      __end_of_pegaSenha 2104                  _pinMode 13BE         ___awmod@dividend 0009  
       ___aldiv@dividend 0001               delayMili@a 0001               delayMili@i 0004  
                _soWrite 2262                  _ssdInit 21B6                  _pwmInit 251A  
                _zeraKey 254A                  main@cnt 0018     end_of_initialization 2540  
          ?_PulseEnClock 0001               ??_pegaUser 000F               ??_limpaSSD 0011  
          __Lmediumconst 0000           digitalRead@pin 0001            ?_pwmFrequency 000F  
            ?_delayMicro 0001        __end_of_timerInit 255C        __end_of_ssdUpdate 1778  
             ??_ssdDigit 0010         ___aldiv@quotient 000B              ?_lcdCommand 0001  
                postinc0 000FEE               ??_pushByte 000C  __size_of_PulseClockData 002A  
          ??_digitalRead 0003              ?_kpDebounce 0001              ___fladd@grs 0010  
             _pushNibble 24B8               lcdString@i 0013            ??_lcdPosition 0013  
         ??_PulseEnClock 0007           ??_pwmFrequency 0011               kpReadKey@i 0004  
         __end_of___flge 1C28           __end_of___wmul 2492           __end_of_kpInit 23E8  
         __end_of_soInit 237C           __end_of_pwmSet 2040      __size_of_delayMicro 0002  
    start_initialization 2534      __end_of_digitalRead 18E2      __size_of_lcdCommand 001E  
    __size_of_kpDebounce 0136               pegaSenha@j 0038      __end_of_lcdPosition 23B6  
      kpDebounce@oldRead 002C        kpDebounce@newRead 002E                 ??___flge 0009  
               ??___wmul 0005                 ??_kpInit 0007                 ??_soInit 0007  
               ??_pwmSet 0008                ___fladd@a 0005                ___fladd@b 0001  
            __pbssCOMRAM 0022              ?_pushNibble 000A               pinMode@pin 0001  
      __size_of_pegaUser 0062        __size_of_limpaSSD 004C                _delayMili 23E8  
       ___lwdiv@dividend 0001                 ?___aldiv 0001                 ?___fladd 0001  
               ?___awdiv 0001                 ?___awmod 0009        __size_of_ssdDigit 0058  
         _PulseClockData 2442                 ?___lwdiv 0001     __end_of_PulseEnClock 2442  
              _lcdString 220C              _digitalRead 1778                 ?_lcdChar 0001  
      __size_of_pushByte 005A                 ?_lcdInit 0001                _kpReadKey 1EE8  
   __end_of_pwmFrequency 24B8              __smallconst 0600                 ?_pinMode 0001  
               ?_soWrite 0007                 ?_ssdInit 0001                _pegaSenha 20A2  
               ?_pwmInit 0001         ___lwdiv@quotient 0005                 ?_zeraKey 0001  
            _lcdPosition 237C         pwmFrequency@freq 000F          ___aldiv@divisor 0005  
        ___aldiv@counter 0009           ___wmul@product 0005             ??_delayMicro 0003  
             ?_delayMili 0001   __end_of_PulseClockData 246C      __size_of_pushNibble 0026  
           ??_lcdCommand 000E                _timerInit 2554                _ssdUpdate 160C  
             ?_lcdString 000F             ??_kpDebounce 000A               ?_kpReadKey 0001  
      ___wmul@multiplier 0001          lcdCommand@value 000E       __end_of_delayMicro 255E  
             ?_pegaSenha 0001       __end_of_lcdCommand 251A               pushByte@rs 000A  
           lcdChar@value 000E       __end_of_kpDebounce 1A18                 __Hrparam 0000  
              pegaUser@i 0039                 __Lrparam 0000          lcdPosition@line 000F  
              limpaSSD@k 0011          ?_PulseClockData 0001               ?_timerInit 0001  
             ?_ssdUpdate 0001         __size_of___aldiv 010C         __size_of___fladd 04C0  
       __size_of___awdiv 00C4         __size_of___awmod 00B0  __size_of_pulseEnablePin 0042  
       __size_of___lwdiv 0074         __size_of_lcdChar 001E         __size_of_lcdInit 00B4  
       __size_of_pinMode 024E          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 20A2                 __ptext11 254A                 __ptext20 237C  
               __ptext12 1EE8                 __ptext21 1CEC                 __ptext13 18E2  
               __ptext30 255C                 __ptext22 24B8                 __ptext14 1778  
               __ptext31 23E8                 __ptext23 24FC                 __ptext15 22B0  
               __ptext32 23B6                 __ptext24 2104                 __ptext16 160C  
               __ptext33 233E                 __ptext25 2262                 __ptext17 215E  
               __ptext34 13BE                 __ptext26 2418                 __ptext18 220C  
               __ptext35 1E50                 __ptext27 2442                 __ptext19 24DE  
               __ptext36 1B24                 __ptext28 22FC                 __ptext37 0CB0  
               __ptext29 1170                 __ptext38 1DA0                 __ptext39 1C28  
       __size_of_soWrite 004E         __size_of_ssdInit 0056         __size_of_pwmInit 001A  
       __size_of_zeraKey 000A                 _pegaUser 2040                 _limpaSSD 22B0  
          __size_of_comp 0098            __size_of_main 065A              ??_delayMili 0003  
  __size_of_PulseEnClock 002A                 _ssdDigit 215E              delayMicro@a 0001  
               isa$xinst 000000             soWrite@value 0007    __size_of_pwmFrequency 0026  
               _pushByte 2104                pwmSet@val 000B              ??_lcdString 0011  
               main@conf 0017              ??_kpReadKey 0001             ??_pushNibble 000C  
         lcdPosition@col 0011            ?_digitalWrite 0001              ??_pegaSenha 000F  
           _PulseEnClock 2418        digitalWrite@value 0003             _pwmFrequency 2492  
               soWrite@i 0009              ??_timerInit 0001              ??_ssdUpdate 000A  
     __end_of_pushNibble 24DE             ?_digitalRead 0001              kpDebounce@i 000D  
         ??_digitalWrite 0005             ___aldiv@sign 000A            ___fladd@signs 000D  
           ?_lcdPosition 000F          digitalWrite@pin 0001             ___fladd@aexp 000E  
           ___fladd@bexp 000F  
